{
  "openapi": "3.0.1",
  "info": {
    "title": "CLA OData",
    "description": "OData services for CLA. \n\nThis documentation is to be used in conjunction with the API User Guide (Word document).\n\n The API User Guide outlines important background information such as system concepts, OData features implemented, authentication, roles and permissions, use cases, known issues and contains additional information on some API endpoints.",
    "version": "v1.0"
  },
  "servers": [
    {
      "url": "https://ext-api.livestockinformation.org.uk/cla-public/v1.0"
    },
    {
      "url": "https://ext-cla.api.livestockinformation.org.uk/cla-public/v1.0"
    }
  ],
  "paths": {
    "/CorrectTransferRequests({id})": {
      "get": {
        "tags": [
          "CorrectTransferRequests"
        ],
        "summary": "Get a specific request to correct an existing movement of animals",
        "description": "Returns a specific CorrectTransferRequest using its request id.\n* For most user roles, user only permitted to query for request id created by authenticated user.",
        "operationId": "get-v1-correcttransferrequests-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Format - int32. Format - int32. Request id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 2.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.CorrectTransfer.CorrectTransfer"
                },
                "example": {
                  "updatedDate": "string",
                  "requestDate": "string",
                  "requestStatus": "NotAvailable",
                  "userName": "string",
                  "warnings": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "content": {
                    "movementGroups": [
                      {
                        "devicesWithDetail": [
                          {
                            "beginBirthPeriod": "string",
                            "breed": "string",
                            "device": {
                              "freezebrand": "string",
                              "rfid": "string",
                              "tagNumber": "string"
                            },
                            "gender": "string",
                            "endBirthPeriod": "string",
                            "mgtTag": {
                              "identifier": "string"
                            }
                          }
                        ],
                        "devices": [
                          {
                            "freezebrand": "string",
                            "rfid": "string",
                            "tagNumber": "string"
                          }
                        ],
                        "batches": [
                          {
                            "idMark": "string",
                            "stockType": "string",
                            "batchNumber": "string",
                            "animalTotal": 0
                          }
                        ],
                        "fromSubLocation": "string",
                        "vendorHolding": "string",
                        "toSubLocation": "string"
                      }
                    ],
                    "id": 0,
                    "saleDate": "string",
                    "deviceApplication": {
                      "dateOfApplication": "string",
                      "endBirthPeriod": "string",
                      "breed": "string",
                      "beginBirthPeriod": "string"
                    },
                    "requestToBeUndone_ID": 0,
                    "transferDate": "string",
                    "transportHaulierName": "string",
                    "trackingId": "string",
                    "transportVehicleRegistrationNo": "string",
                    "userHolding": "string",
                    "saleId": "string",
                    "species": "string",
                    "destinationHolding": "string",
                    "sourceHolding": "string",
                    "processingFlags": [
                      {
                        "processingFlagId": 0,
                        "name": "string"
                      }
                    ],
                    "movementDocument": {
                      "departureDetail": {
                        "departureHoldingType": "string",
                        "departureDateTime": "string",
                        "departureKeeper": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "animalTotal": 0,
                        "loadingDateTime": "string",
                        "departureOwner": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "expectedDurationOfJourney": {
                          "hours": 0,
                          "days": 0,
                          "minutes": 0
                        }
                      },
                      "fciDetail": {
                        "isAllAnimalsFciCompliant": true,
                        "nonCompliantReason": "string",
                        "holdingRestrictions": "string",
                        "withdrawalPeriodObservedText": "string",
                        "metFCIWithdrawalPeriodCode": "string",
                        "nonCompliantDevices": [
                          {
                            "freezebrand": "string",
                            "rfid": "string",
                            "tagNumber": "string"
                          }
                        ]
                      },
                      "transportDetail": {
                        "transporterAuthNumber": "string",
                        "transporterType": "string",
                        "transportVehicleRegistrationNo": "string",
                        "transporter": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "transportHaulierName": "string"
                      },
                      "destinationDetail": {
                        "unloadingDateTime": "string",
                        "arrivalDateTime": "string",
                        "destinationKeeper": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "destinationHoldingType": "string",
                        "hasKeeperChanged": true,
                        "totalAnimalsReceived": 0
                      },
                      "documentType": "string",
                      "movementDocumentRef": "string"
                    },
                    "animalCount": 0
                  },
                  "requestId": 0,
                  "errors": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "undoSupported": true,
                  "isContentPurged": true,
                  "isFullUndone": true
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.CorrectTransfer.CorrectTransfer"
                },
                "example": "<CLAOData.Models.CorrectTransfer.CorrectTransfer> <updatedDate>string</updatedDate> <requestDate>string</requestDate> <requestStatus>NotAvailable</requestStatus> <userName>string</userName> <warnings> <message>string</message> <code>string</code> <target>string</target> </warnings> <content> <movementGroups> <devicesWithDetail> <beginBirthPeriod>string</beginBirthPeriod> <breed>string</breed> <device> <freezebrand>string</freezebrand> <rfid>string</rfid> <tagNumber>string</tagNumber> </device> <gender>string</gender> <endBirthPeriod>string</endBirthPeriod> <mgtTag> <identifier>string</identifier> </mgtTag> </devicesWithDetail> <devices> <freezebrand>string</freezebrand> <rfid>string</rfid> <tagNumber>string</tagNumber> </devices> <batches> <idMark>string</idMark> <stockType>string</stockType> <batchNumber>string</batchNumber> <animalTotal>0</animalTotal> </batches> <fromSubLocation>string</fromSubLocation> <vendorHolding>string</vendorHolding> <toSubLocation>string</toSubLocation> </movementGroups> <id>0</id> <saleDate>string</saleDate> <deviceApplication> <dateOfApplication>string</dateOfApplication> <endBirthPeriod>string</endBirthPeriod> <breed>string</breed> <beginBirthPeriod>string</beginBirthPeriod> </deviceApplication> <requestToBeUndone_ID>0</requestToBeUndone_ID> <transferDate>string</transferDate> <transportHaulierName>string</transportHaulierName> <trackingId>string</trackingId> <transportVehicleRegistrationNo>string</transportVehicleRegistrationNo> <userHolding>string</userHolding> <saleId>string</saleId> <species>string</species> <destinationHolding>string</destinationHolding> <sourceHolding>string</sourceHolding> <processingFlags> <processingFlagId>0</processingFlagId> <name>string</name> </processingFlags> <movementDocument> <departureDetail> <departureHoldingType>string</departureHoldingType> <departureDateTime>string</departureDateTime> <departureKeeper> <county>string</county> <address2>string</address2> <propertyName>string</propertyName> <address1>string</address1> <title>string</title> <telephoneNumber>string</telephoneNumber> <lastName>string</lastName> <postCode>string</postCode> <town>string</town> <firstName>string</firstName> </departureKeeper> <animalTotal>0</animalTotal> <loadingDateTime>string</loadingDateTime> <departureOwner> <county>string</county> <address2>string</address2> <propertyName>string</propertyName> <address1>string</address1> <title>string</title> <telephoneNumber>string</telephoneNumber> <lastName>string</lastName> <postCode>string</postCode> <town>string</town> <firstName>string</firstName> </departureOwner> <expectedDurationOfJourney> <hours>0</hours> <days>0</days> <minutes>0</minutes> </expectedDurationOfJourney> </departureDetail> <fciDetail> <isAllAnimalsFciCompliant>true</isAllAnimalsFciCompliant> <nonCompliantReason>string</nonCompliantReason> <holdingRestrictions>string</holdingRestrictions> <withdrawalPeriodObservedText>string</withdrawalPeriodObservedText> <metFCIWithdrawalPeriodCode>string</metFCIWithdrawalPeriodCode> <nonCompliantDevices> <freezebrand>string</freezebrand> <rfid>string</rfid> <tagNumber>string</tagNumber> </nonCompliantDevices> </fciDetail> <transportDetail> <transporterAuthNumber>string</transporterAuthNumber> <transporterType>string</transporterType> <transportVehicleRegistrationNo>string</transportVehicleRegistrationNo> <transporter> <county>string</county> <address2>string</address2> <propertyName>string</propertyName> <address1>string</address1> <title>string</title> <telephoneNumber>string</telephoneNumber> <lastName>string</lastName> <postCode>string</postCode> <town>string</town> <firstName>string</firstName> </transporter> <transportHaulierName>string</transportHaulierName> </transportDetail> <destinationDetail> <unloadingDateTime>string</unloadingDateTime> <arrivalDateTime>string</arrivalDateTime> <destinationKeeper> <county>string</county> <address2>string</address2> <propertyName>string</propertyName> <address1>string</address1> <title>string</title> <telephoneNumber>string</telephoneNumber> <lastName>string</lastName> <postCode>string</postCode> <town>string</town> <firstName>string</firstName> </destinationKeeper> <destinationHoldingType>string</destinationHoldingType> <hasKeeperChanged>true</hasKeeperChanged> <totalAnimalsReceived>0</totalAnimalsReceived> </destinationDetail> <documentType>string</documentType> <movementDocumentRef>string</movementDocumentRef> </movementDocument> <animalCount>0</animalCount> </content> <requestId>0</requestId> <errors> <message>string</message> <code>string</code> <target>string</target> </errors> <undoSupported>true</undoSupported> <isContentPurged>true</isContentPurged> <isFullUndone>true</isFullUndone> </CLAOData.Models.CorrectTransfer.CorrectTransfer>"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": "<CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse> <error> <code>string</code> <message>string</message> <target>string</target> <details> <code>string</code> <target>string</target> <message>string</message> </details> </error> </CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse>"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                },
                "example": {
                  "title": "string",
                  "type": "string",
                  "detail": "string",
                  "instance": "string",
                  "status": 0
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                },
                "example": "<Microsoft.AspNetCore.Mvc.ProblemDetails> <type>string</type> <title>string</title> <status>0</status> <detail>string</detail> <instance>string</instance> </Microsoft.AspNetCore.Mvc.ProblemDetails>"
              }
            }
          }
        }
      }
    },
    "/HoldingMovementForReviews/ReviewBySpecies(species={species},holding={holding})": {
      "get": {
        "tags": [
          "HoldingMovementForReviews"
        ],
        "summary": "Gets movements that require review.",
        "description": "Gets holding movements awaiting review by the authenticated user.\n\nThis includes:\n - Movements on or off holdings by other users not connected to it. An example of this is if a market records a movement off the market to a producer holding.\n - Movements where both ends recorded the same movement. Movements where this is the case are highlighted by the `isDuplicate` property.\n - Pre-movements onto holdings by other users not connected to it, where the intended movement date has passed and has not been converted into actual movements or withdrawn.\n\nFor most user roles the authenticated user will only be able to see movements on or off holdings the user is associated with.\n\nSee [ReviewHoldingMovementRequests](#ReviewHoldingMovementRequests) to review the movements returned by this endpoint.",
        "operationId": "get-v1-holdingmovementforreviews-reviewbyspecies-species-species-holding-hol",
        "parameters": [
          {
            "name": "species",
            "in": "path",
            "description": "*Necessity*: Required. \r\n            *Validation*: Must be a valid species from the [Species](#Species) endpoint.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "holding",
            "in": "path",
            "description": "*Necessity*: Required for administration users, optional otherwise.\r\n            *Validation*: Must be a valid holding CPH or MHS number that the user is associated with.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 2.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.HoldingMovementForReviewListResult"
                },
                "example": {
                  "value": [
                    {
                      "isDuplicate": true,
                      "documentType": "string",
                      "reviewDevices": [
                        {
                          "beginBirthPeriod": "string",
                          "rfid": "string",
                          "freezebrand": "string",
                          "breed": "string",
                          "tagNumber": "string",
                          "endBirthPeriod": "string"
                        }
                      ],
                      "sourceHolding": "string",
                      "duplicateRequestIds": [
                        0
                      ],
                      "movementDate": "string",
                      "isAccepted": true,
                      "requestId": 0,
                      "reviewBatches": [
                        {
                          "idMark": "string",
                          "batchMovementId": 0,
                          "batchNumber": "string",
                          "stockType": "string",
                          "animalTotal": 0
                        }
                      ],
                      "documentRef": "string",
                      "species": "string",
                      "destinationHolding": "string",
                      "animalTotal": 0,
                      "transportHaulierName": "string",
                      "userHolding": "string",
                      "transportVehicleRegistrationNo": "string"
                    }
                  ]
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.HoldingMovementForReviewListResult"
                },
                "example": "<CLAOData.Models.ReviewHoldingMovement.HoldingMovementForReviewListResult> <value> <isDuplicate>true</isDuplicate> <documentType>string</documentType> <reviewDevices> <beginBirthPeriod>string</beginBirthPeriod> <rfid>string</rfid> <freezebrand>string</freezebrand> <breed>string</breed> <tagNumber>string</tagNumber> <endBirthPeriod>string</endBirthPeriod> </reviewDevices> <sourceHolding>string</sourceHolding> <duplicateRequestIds>0</duplicateRequestIds> <movementDate>string</movementDate> <isAccepted>true</isAccepted> <requestId>0</requestId> <reviewBatches> <idMark>string</idMark> <batchMovementId>0</batchMovementId> <batchNumber>string</batchNumber> <stockType>string</stockType> <animalTotal>0</animalTotal> </reviewBatches> <documentRef>string</documentRef> <species>string</species> <destinationHolding>string</destinationHolding> <animalTotal>0</animalTotal> <transportHaulierName>string</transportHaulierName> <userHolding>string</userHolding> <transportVehicleRegistrationNo>string</transportVehicleRegistrationNo> </value> </CLAOData.Models.ReviewHoldingMovement.HoldingMovementForReviewListResult>"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": "<CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse> <error> <code>string</code> <message>string</message> <target>string</target> <details> <code>string</code> <target>string</target> <message>string</message> </details> </error> </CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse>"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                },
                "example": {
                  "title": "string",
                  "type": "string",
                  "detail": "string",
                  "instance": "string",
                  "status": 0
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                },
                "example": "<Microsoft.AspNetCore.Mvc.ProblemDetails> <type>string</type> <title>string</title> <status>0</status> <detail>string</detail> <instance>string</instance> </Microsoft.AspNetCore.Mvc.ProblemDetails>"
              }
            }
          }
        }
      }
    },
    "/TransferRequests/$count": {
      "get": {
        "tags": [
          "TransferRequests"
        ],
        "summary": "Gets the count of requests.",
        "description": "Gets the count of requests previously submitted. The authenticated user's system permissions will determine whether the count only includes requests created by the authenticated user.",
        "operationId": "get-v1-transferrequests-count",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/V1TransferRequests-countGet200TextPlainResponse"
                },
                "examples": {
                  "default": {}
                }
              }
            }
          }
        }
      }
    },
    "/UndoRequests({id})": {
      "get": {
        "tags": [
          "UndoRequests"
        ],
        "summary": "Get a specific request to  undo / rollback a request previously recorded",
        "description": "Returns a specific UndoRequests using its request id.\n* For most user roles, user only permitted to query for request id created by authenticated user.",
        "operationId": "get-v1-undorequests-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Format - int32. Format - int32. Request id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 2.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.UndoRequest.UndoRequest"
                },
                "example": {
                  "updatedDate": "string",
                  "requestDate": "string",
                  "requestStatus": "NotAvailable",
                  "userName": "string",
                  "warnings": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "content": {
                    "id": 0,
                    "processingFlags": [
                      {
                        "processingFlagId": 0,
                        "name": "string"
                      }
                    ],
                    "trackingId": "string",
                    "undoRequestId": 0
                  },
                  "requestId": 0,
                  "errors": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "undoSupported": true,
                  "isContentPurged": true,
                  "isFullUndone": true
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.UndoRequest.UndoRequest"
                },
                "example": "<CLAOData.Models.UndoRequest.UndoRequest> <updatedDate>string</updatedDate> <requestDate>string</requestDate> <requestStatus>NotAvailable</requestStatus> <userName>string</userName> <warnings> <message>string</message> <code>string</code> <target>string</target> </warnings> <content> <id>0</id> <processingFlags> <processingFlagId>0</processingFlagId> <name>string</name> </processingFlags> <trackingId>string</trackingId> <undoRequestId>0</undoRequestId> </content> <requestId>0</requestId> <errors> <message>string</message> <code>string</code> <target>string</target> </errors> <undoSupported>true</undoSupported> <isContentPurged>true</isContentPurged> <isFullUndone>true</isFullUndone> </CLAOData.Models.UndoRequest.UndoRequest>"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": "<CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse> <error> <code>string</code> <message>string</message> <target>string</target> <details> <code>string</code> <target>string</target> <message>string</message> </details> </error> </CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse>"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                },
                "example": {
                  "title": "string",
                  "type": "string",
                  "detail": "string",
                  "instance": "string",
                  "status": 0
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                },
                "example": "<Microsoft.AspNetCore.Mvc.ProblemDetails> <type>string</type> <title>string</title> <status>0</status> <detail>string</detail> <instance>string</instance> </Microsoft.AspNetCore.Mvc.ProblemDetails>"
              }
            }
          }
        }
      }
    },
    "/ApprovedMovements({id},{recordedBy})": {
      "get": {
        "tags": [
          "ApprovedMovements"
        ],
        "summary": "Gets the details of the specified movement",
        "description": "The requested movement is only returned if either:\n * The user is not linked to any holdings and movement is non-system.\n * The user is associated with either the departure or destination holding, it is a non-system movement, and has been recorded or accepted by the user or other users associated with the holding.",
        "operationId": "get-v1-approvedmovements-id-recordedby",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Format - int32. Format - int32. approvedMovementId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "recordedBy",
            "in": "path",
            "description": "The role of the holding that recorded the movement.\r\n* *Necessity*: Required\r\n* *Validation*: Accepted values are `Departure` or `Destination`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovement"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovement"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": "<CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse> <error> <code>string</code> <message>string</message> <target>string</target> <details> <code>string</code> <target>string</target> <message>string</message> </details> </error> </CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse>"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                },
                "example": {
                  "title": "string",
                  "type": "string",
                  "detail": "string",
                  "instance": "string",
                  "status": 0
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                },
                "example": "<Microsoft.AspNetCore.Mvc.ProblemDetails> <type>string</type> <title>string</title> <status>0</status> <detail>string</detail> <instance>string</instance> </Microsoft.AspNetCore.Mvc.ProblemDetails>"
              }
            }
          }
        }
      }
    },
    "/TransferRequests({id})": {
      "get": {
        "tags": [
          "TransferRequests"
        ],
        "summary": "Get a specific request to register the movement of animals",
        "description": "Returns a specific TransferRequest using its request id.\n* For most user roles, user only permitted to query for request id created by authenticated user.",
        "operationId": "get-v1-transferrequests-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Format - int32. Format - int32. Request id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 2.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.Transfer.Transfer"
                },
                "example": {
                  "updatedDate": "string",
                  "requestDate": "string",
                  "requestStatus": "NotAvailable",
                  "userName": "string",
                  "warnings": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "content": {
                    "id": 0,
                    "trackingId": "string",
                    "sourceHolding": "string",
                    "animalCount": 0,
                    "movementDocument": {
                      "departureDetail": {
                        "departureHoldingType": "string",
                        "departureDateTime": "string",
                        "departureKeeper": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "animalTotal": 0,
                        "loadingDateTime": "string",
                        "departureOwner": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "expectedDurationOfJourney": {
                          "hours": 0,
                          "days": 0,
                          "minutes": 0
                        }
                      },
                      "fciDetail": {
                        "isAllAnimalsFciCompliant": true,
                        "nonCompliantReason": "string",
                        "holdingRestrictions": "string",
                        "withdrawalPeriodObservedText": "string",
                        "metFCIWithdrawalPeriodCode": "string",
                        "nonCompliantDevices": [
                          {
                            "freezebrand": "string",
                            "rfid": "string",
                            "tagNumber": "string"
                          }
                        ]
                      },
                      "transportDetail": {
                        "transporterAuthNumber": "string",
                        "transporterType": "string",
                        "transportVehicleRegistrationNo": "string",
                        "transporter": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "transportHaulierName": "string"
                      },
                      "destinationDetail": {
                        "unloadingDateTime": "string",
                        "arrivalDateTime": "string",
                        "destinationKeeper": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "destinationHoldingType": "string",
                        "hasKeeperChanged": true,
                        "totalAnimalsReceived": 0
                      },
                      "documentType": "string",
                      "movementDocumentRef": "string"
                    },
                    "deviceApplication": {
                      "dateOfApplication": "string",
                      "endBirthPeriod": "string",
                      "breed": "string",
                      "beginBirthPeriod": "string"
                    },
                    "transferDate": "string",
                    "processingFlags": [
                      {
                        "processingFlagId": 0,
                        "name": "string"
                      }
                    ],
                    "saleDate": "string",
                    "movementGroups": [
                      {
                        "devicesWithDetail": [
                          {
                            "beginBirthPeriod": "string",
                            "breed": "string",
                            "device": {
                              "freezebrand": "string",
                              "rfid": "string",
                              "tagNumber": "string"
                            },
                            "gender": "string",
                            "endBirthPeriod": "string",
                            "mgtTag": {
                              "identifier": "string"
                            }
                          }
                        ],
                        "devices": [
                          {
                            "freezebrand": "string",
                            "rfid": "string",
                            "tagNumber": "string"
                          }
                        ],
                        "batches": [
                          {
                            "idMark": "string",
                            "stockType": "string",
                            "batchNumber": "string",
                            "animalTotal": 0
                          }
                        ],
                        "fromSubLocation": "string",
                        "vendorHolding": "string",
                        "toSubLocation": "string"
                      }
                    ],
                    "species": "string",
                    "destinationHolding": "string",
                    "saleId": "string",
                    "transportHaulierName": "string",
                    "userHolding": "string",
                    "transportVehicleRegistrationNo": "string"
                  },
                  "requestId": 0,
                  "errors": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "undoSupported": true,
                  "isContentPurged": true,
                  "isFullUndone": true
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.Transfer.Transfer"
                },
                "example": "<CLAOData.Models.Transfer.Transfer> <updatedDate>string</updatedDate> <requestDate>string</requestDate> <requestStatus>NotAvailable</requestStatus> <userName>string</userName> <warnings> <message>string</message> <code>string</code> <target>string</target> </warnings> <content> <id>0</id> <trackingId>string</trackingId> <sourceHolding>string</sourceHolding> <animalCount>0</animalCount> <movementDocument> <departureDetail> <departureHoldingType>string</departureHoldingType> <departureDateTime>string</departureDateTime> <departureKeeper> <county>string</county> <address2>string</address2> <propertyName>string</propertyName> <address1>string</address1> <title>string</title> <telephoneNumber>string</telephoneNumber> <lastName>string</lastName> <postCode>string</postCode> <town>string</town> <firstName>string</firstName> </departureKeeper> <animalTotal>0</animalTotal> <loadingDateTime>string</loadingDateTime> <departureOwner> <county>string</county> <address2>string</address2> <propertyName>string</propertyName> <address1>string</address1> <title>string</title> <telephoneNumber>string</telephoneNumber> <lastName>string</lastName> <postCode>string</postCode> <town>string</town> <firstName>string</firstName> </departureOwner> <expectedDurationOfJourney> <hours>0</hours> <days>0</days> <minutes>0</minutes> </expectedDurationOfJourney> </departureDetail> <fciDetail> <isAllAnimalsFciCompliant>true</isAllAnimalsFciCompliant> <nonCompliantReason>string</nonCompliantReason> <holdingRestrictions>string</holdingRestrictions> <withdrawalPeriodObservedText>string</withdrawalPeriodObservedText> <metFCIWithdrawalPeriodCode>string</metFCIWithdrawalPeriodCode> <nonCompliantDevices> <freezebrand>string</freezebrand> <rfid>string</rfid> <tagNumber>string</tagNumber> </nonCompliantDevices> </fciDetail> <transportDetail> <transporterAuthNumber>string</transporterAuthNumber> <transporterType>string</transporterType> <transportVehicleRegistrationNo>string</transportVehicleRegistrationNo> <transporter> <county>string</county> <address2>string</address2> <propertyName>string</propertyName> <address1>string</address1> <title>string</title> <telephoneNumber>string</telephoneNumber> <lastName>string</lastName> <postCode>string</postCode> <town>string</town> <firstName>string</firstName> </transporter> <transportHaulierName>string</transportHaulierName> </transportDetail> <destinationDetail> <unloadingDateTime>string</unloadingDateTime> <arrivalDateTime>string</arrivalDateTime> <destinationKeeper> <county>string</county> <address2>string</address2> <propertyName>string</propertyName> <address1>string</address1> <title>string</title> <telephoneNumber>string</telephoneNumber> <lastName>string</lastName> <postCode>string</postCode> <town>string</town> <firstName>string</firstName> </destinationKeeper> <destinationHoldingType>string</destinationHoldingType> <hasKeeperChanged>true</hasKeeperChanged> <totalAnimalsReceived>0</totalAnimalsReceived> </destinationDetail> <documentType>string</documentType> <movementDocumentRef>string</movementDocumentRef> </movementDocument> <deviceApplication> <dateOfApplication>string</dateOfApplication> <endBirthPeriod>string</endBirthPeriod> <breed>string</breed> <beginBirthPeriod>string</beginBirthPeriod> </deviceApplication> <transferDate>string</transferDate> <processingFlags> <processingFlagId>0</processingFlagId> <name>string</name> </processingFlags> <saleDate>string</saleDate> <movementGroups> <devicesWithDetail> <beginBirthPeriod>string</beginBirthPeriod> <breed>string</breed> <device> <freezebrand>string</freezebrand> <rfid>string</rfid> <tagNumber>string</tagNumber> </device> <gender>string</gender> <endBirthPeriod>string</endBirthPeriod> <mgtTag> <identifier>string</identifier> </mgtTag> </devicesWithDetail> <devices> <freezebrand>string</freezebrand> <rfid>string</rfid> <tagNumber>string</tagNumber> </devices> <batches> <idMark>string</idMark> <stockType>string</stockType> <batchNumber>string</batchNumber> <animalTotal>0</animalTotal> </batches> <fromSubLocation>string</fromSubLocation> <vendorHolding>string</vendorHolding> <toSubLocation>string</toSubLocation> </movementGroups> <species>string</species> <destinationHolding>string</destinationHolding> <saleId>string</saleId> <transportHaulierName>string</transportHaulierName> <userHolding>string</userHolding> <transportVehicleRegistrationNo>string</transportVehicleRegistrationNo> </content> <requestId>0</requestId> <errors> <message>string</message> <code>string</code> <target>string</target> </errors> <undoSupported>true</undoSupported> <isContentPurged>true</isContentPurged> <isFullUndone>true</isFullUndone> </CLAOData.Models.Transfer.Transfer>"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": "<CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse> <error> <code>string</code> <message>string</message> <target>string</target> <details> <code>string</code> <target>string</target> <message>string</message> </details> </error> </CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse>"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                },
                "example": {
                  "title": "string",
                  "type": "string",
                  "detail": "string",
                  "instance": "string",
                  "status": 0
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                },
                "example": "<Microsoft.AspNetCore.Mvc.ProblemDetails> <type>string</type> <title>string</title> <status>0</status> <detail>string</detail> <instance>string</instance> </Microsoft.AspNetCore.Mvc.ProblemDetails>"
              }
            }
          }
        }
      }
    },
    "/UndoRequests/$count": {
      "get": {
        "tags": [
          "UndoRequests"
        ],
        "summary": "Gets the count of requests.",
        "description": "Gets the count of requests previously submitted. The authenticated user's system permissions will determine whether the count only includes requests created by the authenticated user.",
        "operationId": "get-v1-undorequests-count",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/V1UndoRequests-countGet200TextPlainResponse"
                },
                "examples": {
                  "default": {}
                }
              }
            }
          }
        }
      }
    },
    "/UndoRequests": {
      "post": {
        "tags": [
          "UndoRequests"
        ],
        "summary": "Undo / rollback a request previously recorded",
        "description": "UndoRequests allows you to undo / rollback a request that has previously been submitted. This will rollback any actions that the `undoRequestId` request performed such as moving animals or applying tags. \n* The authenticated user must have originally created the request being undone (unless the authenticated user is an administrator).\n* The type of the request being undone must support being undone. This can be verified by checking the [Requests](#Requests) endpoint if property `undoSupported` equals true.\n* The system may not allow the request to be undone if other events have subsequently happened to animals involved in the request.",
        "operationId": "post-v1-undorequests",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CLAOData.Models.UndoRequest.UndoRequest"
              },
              "example": {
                "updatedDate": "string",
                "requestDate": "string",
                "requestStatus": "NotAvailable",
                "userName": "string",
                "warnings": [
                  {
                    "message": "string",
                    "code": "string",
                    "target": "string"
                  }
                ],
                "content": {
                  "id": 0,
                  "processingFlags": [
                    {
                      "processingFlagId": 0,
                      "name": "string"
                    }
                  ],
                  "trackingId": "string",
                  "undoRequestId": 0
                },
                "requestId": 0,
                "errors": [
                  {
                    "message": "string",
                    "code": "string",
                    "target": "string"
                  }
                ],
                "undoSupported": true,
                "isContentPurged": true,
                "isFullUndone": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The request was successfully queued.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.UndoRequest.UndoRequest"
                },
                "example": {
                  "updatedDate": "string",
                  "requestDate": "string",
                  "requestStatus": "NotAvailable",
                  "userName": "string",
                  "warnings": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "content": {
                    "id": 0,
                    "processingFlags": [
                      {
                        "processingFlagId": 0,
                        "name": "string"
                      }
                    ],
                    "trackingId": "string",
                    "undoRequestId": 0
                  },
                  "requestId": 0,
                  "errors": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "undoSupported": true,
                  "isContentPurged": true,
                  "isFullUndone": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "UndoRequests"
        ],
        "summary": "Gets all requests to undo / rollback a request previously recorded",
        "description": "Returns all UndoRequests.\n* For most user roles only returns requests created by authenticated user.",
        "operationId": "get-v1-undorequests",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 2.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions. Only dates with a time part will be accepted.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Format - int32. Format - int32. Limits the number of items returned from a collection.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Format - int32. Format - int32. Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.UndoRequest.UndoRequestListResult"
                },
                "example": {
                  "value": [
                    {
                      "undoSupported": true,
                      "requestStatus": "Success",
                      "content": {
                        "undoRequestId": 12
                      },
                      "updatedDate": "2021-06-07T14:47:03.9975919+00:00",
                      "requestDate": "2021-06-07T14:46:03.9975919+00:00",
                      "requestId": 33
                    },
                    {
                      "undoSupported": true,
                      "errors": [
                        {
                          "code": "14113",
                          "message": "Unable to UNDO request, the animal UK0244220 00007 contains a subsequent movement (after) submitted by request 32."
                        }
                      ],
                      "requestStatus": "CompletedError",
                      "content": {
                        "undoRequestId": 13
                      },
                      "updatedDate": "2021-06-07T14:47:03.9975919+00:00",
                      "requestDate": "2021-06-07T14:46:03.9975919+00:00",
                      "requestId": 34
                    }
                  ]
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.UndoRequest.UndoRequestListResult"
                },
                "example": {
                  "value": [
                    {
                      "undoSupported": true,
                      "requestStatus": "Success",
                      "content": {
                        "undoRequestId": 12
                      },
                      "updatedDate": "2021-06-07T14:47:03.9975919+00:00",
                      "requestDate": "2021-06-07T14:46:03.9975919+00:00",
                      "requestId": 33
                    },
                    {
                      "undoSupported": true,
                      "errors": [
                        {
                          "code": "14113",
                          "message": "Unable to UNDO request, the animal UK0244220 00007 contains a subsequent movement (after) submitted by request 32."
                        }
                      ],
                      "requestStatus": "CompletedError",
                      "content": {
                        "undoRequestId": 13
                      },
                      "updatedDate": "2021-06-07T14:47:03.9975919+00:00",
                      "requestDate": "2021-06-07T14:46:03.9975919+00:00",
                      "requestId": 34
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": "<CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse> <error> <code>string</code> <message>string</message> <target>string</target> <details> <code>string</code> <target>string</target> <message>string</message> </details> </error> </CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse>"
              }
            }
          }
        }
      }
    },
    "/ReviewHoldingMovementRequests": {
      "post": {
        "tags": [
          "ReviewHoldingMovementRequests"
        ],
        "summary": "Review the movement of animals",
        "description": "ReviewHoldingMovementRequests allows the authenticated user to review movements submitted by someone else on or off holdings that they are associated with.\n* Movements available for review can be obtained from the [HoldingMovementForReviews](#HoldingMovementForReviews) endpoint.\n* For a given movement available for review, either:\n  * The whole movement can be accepted as entered by the other keeper.\n  * Partially accepted for some individual or batch identified animals involved, with others rejected as not being included in the movement.\n  * The whole movement can be rejected as not happening.\n* If there are any extra animals that moved but were not included in the movement for review, record a new movement using the [TransferRequests](#TransferRequests) endpoint for just the missing animals.\n* Any movements accepted or partially accepted will appear in the [Holding Register](#HoldingRegisters).",
        "operationId": "post-v1-reviewholdingmovementrequests",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.ReviewHoldingMovement"
              },
              "example": {
                "updatedDate": "string",
                "requestDate": "string",
                "requestStatus": "NotAvailable",
                "userName": "string",
                "warnings": [
                  {
                    "message": "string",
                    "code": "string",
                    "target": "string"
                  }
                ],
                "content": {
                  "reviewMovement": {
                    "rejectedDevices": [
                      {
                        "freezebrand": "string",
                        "rfid": "string",
                        "tagNumber": "string"
                      }
                    ],
                    "rejectedBatches": [
                      {
                        "idMark": "string",
                        "batchMovementId": 0,
                        "batchNumber": "string",
                        "stockType": "string",
                        "animalTotal": 0
                      }
                    ],
                    "acceptedBatches": [
                      {
                        "idMark": "string",
                        "batchMovementId": 0,
                        "batchNumber": "string",
                        "stockType": "string",
                        "animalTotal": 0
                      }
                    ],
                    "isAccepted": true,
                    "requestId": 0,
                    "animalTotal": 1,
                    "arrivalDate": "string",
                    "acceptedDevices": [
                      {
                        "freezebrand": "string",
                        "rfid": "string",
                        "tagNumber": "string"
                      }
                    ]
                  },
                  "id": 0,
                  "processingFlags": [
                    {
                      "processingFlagId": 0,
                      "name": "string"
                    }
                  ],
                  "trackingId": "string",
                  "holding": "string"
                },
                "requestId": 0,
                "errors": [
                  {
                    "message": "string",
                    "code": "string",
                    "target": "string"
                  }
                ],
                "undoSupported": true,
                "isContentPurged": true,
                "isFullUndone": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The request was successfully queued.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.ReviewHoldingMovement"
                },
                "example": {
                  "updatedDate": "string",
                  "requestDate": "string",
                  "requestStatus": "NotAvailable",
                  "userName": "string",
                  "warnings": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "content": {
                    "reviewMovement": {
                      "rejectedBatches": [
                        {
                          "idMark": "string",
                          "batchMovementId": 0,
                          "batchNumber": "string",
                          "stockType": "string",
                          "animalTotal": 0
                        }
                      ],
                      "acceptedBatches": [
                        {
                          "idMark": "string",
                          "batchMovementId": 0,
                          "batchNumber": "string",
                          "stockType": "string",
                          "animalTotal": 0
                        }
                      ],
                      "acceptedDevices": [
                        {
                          "freezebrand": "string",
                          "rfid": "string",
                          "tagNumber": "string"
                        }
                      ],
                      "isAccepted": true,
                      "rejectedDevices": [
                        {
                          "freezebrand": "string",
                          "rfid": "string",
                          "tagNumber": "string"
                        }
                      ],
                      "requestId": 0
                    },
                    "id": 0,
                    "processingFlags": [
                      {
                        "processingFlagId": 0,
                        "name": "string"
                      }
                    ],
                    "trackingId": "string",
                    "holding": "string"
                  },
                  "requestId": 0,
                  "errors": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "undoSupported": true,
                  "isContentPurged": true,
                  "isFullUndone": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ReviewHoldingMovementRequests"
        ],
        "summary": "Gets all requests to review movements of animals",
        "description": "Returns all ReviewHoldingMovementRequests.\n* For most user roles only returns requests created by authenticated user.",
        "operationId": "get-v1-reviewholdingmovementrequests",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 2.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions. Only dates with a time part will be accepted.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Format - int32. Format - int32. Limits the number of items returned from a collection.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Format - int32. Format - int32. Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.ReviewHoldingMovementListResult"
                },
                "example": {
                  "value": [
                    {
                      "undoSupported": true,
                      "requestStatus": "Success",
                      "content": {
                        "reviewMovement": {
                          "acceptedDevices": [
                            {
                              "tagNumber": "UK0244220 00001"
                            },
                            {
                              "tagNumber": "UK0244220 00002"
                            }
                          ],
                          "isAccepted": true,
                          "requestId": 25,
                          "acceptedBatches": [
                            {
                              "batchMovementId": 1001,
                              "batchNumber": "UK244220",
                              "animalTotal": 4
                            }
                          ]
                        },
                        "holding": "26/001/8033"
                      },
                      "updatedDate": "2021-06-07T14:47:03.9965656+00:00",
                      "requestDate": "2021-06-07T14:46:03.9965656+00:00",
                      "requestId": 33
                    },
                    {
                      "content": {
                        "reviewMovement": {
                          "isAccepted": false,
                          "rejectedBatches": [
                            {
                              "batchMovementId": 1010,
                              "batchNumber": "UK244220",
                              "animalTotal": 6
                            }
                          ],
                          "requestId": 27,
                          "rejectedDevices": [
                            {
                              "tagNumber": "UK0244220 00021"
                            },
                            {
                              "tagNumber": "UK0244220 00022"
                            }
                          ]
                        },
                        "holding": "26/001/8033"
                      },
                      "undoSupported": true,
                      "requestDate": "2021-06-07T14:46:03.9965656+00:00",
                      "requestId": 34,
                      "requestStatus": "Pending"
                    }
                  ]
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.ReviewHoldingMovementListResult"
                },
                "example": {
                  "value": [
                    {
                      "undoSupported": true,
                      "requestStatus": "Success",
                      "content": {
                        "reviewMovement": {
                          "acceptedDevices": [
                            {
                              "tagNumber": "UK0244220 00001"
                            },
                            {
                              "tagNumber": "UK0244220 00002"
                            }
                          ],
                          "isAccepted": true,
                          "requestId": 25,
                          "acceptedBatches": [
                            {
                              "batchMovementId": 1001,
                              "batchNumber": "UK244220",
                              "animalTotal": 4
                            }
                          ]
                        },
                        "holding": "26/001/8033"
                      },
                      "updatedDate": "2021-06-07T14:47:03.9965656+00:00",
                      "requestDate": "2021-06-07T14:46:03.9965656+00:00",
                      "requestId": 33
                    },
                    {
                      "content": {
                        "reviewMovement": {
                          "isAccepted": false,
                          "rejectedBatches": [
                            {
                              "batchMovementId": 1010,
                              "batchNumber": "UK244220",
                              "animalTotal": 6
                            }
                          ],
                          "requestId": 27,
                          "rejectedDevices": [
                            {
                              "tagNumber": "UK0244220 00021"
                            },
                            {
                              "tagNumber": "UK0244220 00022"
                            }
                          ]
                        },
                        "holding": "26/001/8033"
                      },
                      "undoSupported": true,
                      "requestDate": "2021-06-07T14:46:03.9965656+00:00",
                      "requestId": 34,
                      "requestStatus": "Pending"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": "<CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse> <error> <code>string</code> <message>string</message> <target>string</target> <details> <code>string</code> <target>string</target> <message>string</message> </details> </error> </CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse>"
              }
            }
          }
        }
      }
    },
    "/ApprovedMovements": {
      "get": {
        "tags": [
          "ApprovedMovements"
        ],
        "summary": "Gets Approved Movements",
        "description": "For users linked to a holding, this returns all movements for holdings the authenticated user is associated with.\nThe movement must be non-system and have been recorded or reviewed and accepted by the authenticated user or other users associated with the holding.\n            \nFor users not linked to a holding this returns all movements that are not system movements.\n            \n A movement is returned twice if both:\n* It was recorded by departure keeper and destination has reviewed and accepted the movement.\n* The authenticated user is not linked to holdings, or is associated with both departure and destination holdings.\n            \nThe recordedBy property is used to indicate if the Departure or Destination end of movement has either:\n * Recorded the movement\n * Reviewed and accepted the movement",
        "operationId": "get-v1-approvedmovements",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions. Only dates with a time part will be accepted.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Format - int32. Format - int32. Limits the number of items returned from a collection.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Format - int32. Format - int32. Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementListResult"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementListResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": "<CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse> <error> <code>string</code> <message>string</message> <target>string</target> <details> <code>string</code> <target>string</target> <message>string</message> </details> </error> </CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse>"
              }
            }
          }
        }
      }
    },
    "/CorrectTransferRequests/$count": {
      "get": {
        "tags": [
          "CorrectTransferRequests"
        ],
        "summary": "Gets the count of requests.",
        "description": "Gets the count of requests previously submitted. The authenticated user's system permissions will determine whether the count only includes requests created by the authenticated user.",
        "operationId": "get-v1-correcttransferrequests-count",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/V1CorrectTransferRequests-countGet200TextPlainResponse"
                },
                "examples": {
                  "default": {}
                }
              }
            }
          }
        }
      }
    },
    "/ReviewHoldingMovementRequests({id})": {
      "get": {
        "tags": [
          "ReviewHoldingMovementRequests"
        ],
        "summary": "Get a specific request to review the movement of animals",
        "description": "Returns a specific ReviewHoldingMovementRequests using its request id.\n* For most user roles, user only permitted to query for request id created by authenticated user.",
        "operationId": "get-v1-reviewholdingmovementrequests-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Format - int32. Format - int32. Request id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 2.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.ReviewHoldingMovement"
                },
                "example": {
                  "updatedDate": "string",
                  "requestDate": "string",
                  "requestStatus": "NotAvailable",
                  "userName": "string",
                  "warnings": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "content": {
                    "reviewMovement": {
                      "rejectedDevices": [
                        {
                          "freezebrand": "string",
                          "rfid": "string",
                          "tagNumber": "string"
                        }
                      ],
                      "rejectedBatches": [
                        {
                          "idMark": "string",
                          "batchMovementId": 0,
                          "batchNumber": "string",
                          "stockType": "string",
                          "animalTotal": 0
                        }
                      ],
                      "acceptedBatches": [
                        {
                          "idMark": "string",
                          "batchMovementId": 0,
                          "batchNumber": "string",
                          "stockType": "string",
                          "animalTotal": 0
                        }
                      ],
                      "isAccepted": true,
                      "requestId": 0,
                      "animalTotal": 1,
                      "arrivalDate": "string",
                      "acceptedDevices": [
                        {
                          "freezebrand": "string",
                          "rfid": "string",
                          "tagNumber": "string"
                        }
                      ]
                    },
                    "id": 0,
                    "processingFlags": [
                      {
                        "processingFlagId": 0,
                        "name": "string"
                      }
                    ],
                    "trackingId": "string",
                    "holding": "string"
                  },
                  "requestId": 0,
                  "errors": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "undoSupported": true,
                  "isContentPurged": true,
                  "isFullUndone": true
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.ReviewHoldingMovement"
                },
                "example": "<CLAOData.Models.ReviewHoldingMovement.ReviewHoldingMovement> <updatedDate>string</updatedDate> <requestDate>string</requestDate> <requestStatus>NotAvailable</requestStatus> <userName>string</userName> <warnings> <message>string</message> <code>string</code> <target>string</target> </warnings> <content> <reviewMovement> <rejectedDevices> <freezebrand>string</freezebrand> <rfid>string</rfid> <tagNumber>string</tagNumber> </rejectedDevices> <rejectedBatches> <idMark>string</idMark> <batchMovementId>0</batchMovementId> <batchNumber>string</batchNumber> <stockType>string</stockType> <animalTotal>0</animalTotal> </rejectedBatches> <acceptedBatches> <idMark>string</idMark> <batchMovementId>0</batchMovementId> <batchNumber>string</batchNumber> <stockType>string</stockType> <animalTotal>0</animalTotal> </acceptedBatches> <isAccepted>true</isAccepted> <requestId>0</requestId> <animalTotal>1</animalTotal> <arrivalDate>string</arrivalDate> <acceptedDevices> <freezebrand>string</freezebrand> <rfid>string</rfid> <tagNumber>string</tagNumber> </acceptedDevices> </reviewMovement> <id>0</id> <processingFlags> <processingFlagId>0</processingFlagId> <name>string</name> </processingFlags> <trackingId>string</trackingId> <holding>string</holding> </content> <requestId>0</requestId> <errors> <message>string</message> <code>string</code> <target>string</target> </errors> <undoSupported>true</undoSupported> <isContentPurged>true</isContentPurged> <isFullUndone>true</isFullUndone> </CLAOData.Models.ReviewHoldingMovement.ReviewHoldingMovement>"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": "<CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse> <error> <code>string</code> <message>string</message> <target>string</target> <details> <code>string</code> <target>string</target> <message>string</message> </details> </error> </CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse>"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                },
                "example": {
                  "title": "string",
                  "type": "string",
                  "detail": "string",
                  "instance": "string",
                  "status": 0
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                },
                "example": "<Microsoft.AspNetCore.Mvc.ProblemDetails> <type>string</type> <title>string</title> <status>0</status> <detail>string</detail> <instance>string</instance> </Microsoft.AspNetCore.Mvc.ProblemDetails>"
              }
            }
          }
        }
      }
    },
    "/TransferRequests": {
      "post": {
        "tags": [
          "TransferRequests"
        ],
        "summary": "Register the movement of animals",
        "description": "TransferRequests register the movement of animals between two holdings.\n\nTransfers can be one of two types depending on the role of the author:\n* If the owner of the source holding submits the transfer then it is an 'OFF' Movement. \n* If the owner of the destination holding submits the transfer then it is an 'ON' Movement.\n\nTransfers:\n* Animals can be identified individually or by batch.\n* For most user roles, the authenticated user must be associated with either the `sourceHolding` or `destinationHolding`.  The `userHolding` must equal the `destinationHolding` for ON or in-business movements or `sourceHolding` for movements OFF.\n* *Movement document*\n  * For the species cattle `movementDocument` cannot be specified, for all other species its optional.\n  * If it is an off movement, then the `departureDateTime` must be specified.\n  * If it is an on movement, then the `departureDateTime` and  `arrivalDateTime` must be specified.\n* *Market off movements* - if a market user is registering a movement off a market holding\n  * `saleDate` and `saleId` must be specified giving details about the sale.\n  * `movementGroups` should be used to group the animals by lot/pen and vendor holding. Each movement group should have these details specified in `fromSubLocation` and `vendorHolding` respectively.\n* *Registering identification / birth at same time as movement*\n  * If off or in-business movement is being registered for animals that were born on the `sourceHolding` and the identification / birth hasn't been registered for all the animals involved in the movement then `deviceApplication` can be used to specify these details at the same time as registering the movement.\n  * `deviceApplication` isn't supported for the species cattle.\n* *Exemptions*\n  * Use `processingFlags` to specify any exemptions that apply to the movement such as 'Pig pyramid move' or 'Breeding bulls / rams / goats kept in an approved isolation facility'.\n  * To get a full list of supported processing flags by species filter the [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint by species and request type.",
        "operationId": "post-v1-transferrequests",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CLAOData.Models.Transfer.Transfer"
              },
              "example": {
                "updatedDate": "string",
                "requestDate": "string",
                "requestStatus": "NotAvailable",
                "userName": "string",
                "warnings": [
                  {
                    "message": "string",
                    "code": "string",
                    "target": "string"
                  }
                ],
                "content": {
                  "id": 0,
                  "trackingId": "string",
                  "sourceHolding": "string",
                  "animalCount": 0,
                  "movementDocument": {
                    "departureDetail": {
                      "departureHoldingType": "string",
                      "departureDateTime": "string",
                      "departureKeeper": {
                        "county": "string",
                        "address2": "string",
                        "propertyName": "string",
                        "address1": "string",
                        "title": "string",
                        "telephoneNumber": "string",
                        "lastName": "string",
                        "postCode": "string",
                        "town": "string",
                        "firstName": "string"
                      },
                      "animalTotal": 0,
                      "loadingDateTime": "string",
                      "departureOwner": {
                        "county": "string",
                        "address2": "string",
                        "propertyName": "string",
                        "address1": "string",
                        "title": "string",
                        "telephoneNumber": "string",
                        "lastName": "string",
                        "postCode": "string",
                        "town": "string",
                        "firstName": "string"
                      },
                      "expectedDurationOfJourney": {
                        "hours": 0,
                        "days": 0,
                        "minutes": 0
                      }
                    },
                    "fciDetail": {
                      "isAllAnimalsFciCompliant": true,
                      "nonCompliantReason": "string",
                      "holdingRestrictions": "string",
                      "withdrawalPeriodObservedText": "string",
                      "metFCIWithdrawalPeriodCode": "string",
                      "nonCompliantDevices": [
                        {
                          "freezebrand": "string",
                          "rfid": "string",
                          "tagNumber": "string"
                        }
                      ]
                    },
                    "transportDetail": {
                      "transporterAuthNumber": "string",
                      "transporterType": "string",
                      "transportVehicleRegistrationNo": "string",
                      "transporter": {
                        "county": "string",
                        "address2": "string",
                        "propertyName": "string",
                        "address1": "string",
                        "title": "string",
                        "telephoneNumber": "string",
                        "lastName": "string",
                        "postCode": "string",
                        "town": "string",
                        "firstName": "string"
                      },
                      "transportHaulierName": "string"
                    },
                    "destinationDetail": {
                      "unloadingDateTime": "string",
                      "arrivalDateTime": "string",
                      "destinationKeeper": {
                        "county": "string",
                        "address2": "string",
                        "propertyName": "string",
                        "address1": "string",
                        "title": "string",
                        "telephoneNumber": "string",
                        "lastName": "string",
                        "postCode": "string",
                        "town": "string",
                        "firstName": "string"
                      },
                      "destinationHoldingType": "string",
                      "hasKeeperChanged": true,
                      "totalAnimalsReceived": 0
                    },
                    "documentType": "string",
                    "movementDocumentRef": "string"
                  },
                  "deviceApplication": {
                    "dateOfApplication": "string",
                    "endBirthPeriod": "string",
                    "breed": "string",
                    "beginBirthPeriod": "string"
                  },
                  "transferDate": "string",
                  "processingFlags": [
                    {
                      "processingFlagId": 0,
                      "name": "string"
                    }
                  ],
                  "saleDate": "string",
                  "movementGroups": [
                    {
                      "devicesWithDetail": [
                        {
                          "beginBirthPeriod": "string",
                          "breed": "string",
                          "device": {
                            "freezebrand": "string",
                            "rfid": "string",
                            "tagNumber": "string"
                          },
                          "gender": "string",
                          "endBirthPeriod": "string",
                          "mgtTag": {
                            "identifier": "string"
                          }
                        }
                      ],
                      "devices": [
                        {
                          "freezebrand": "string",
                          "rfid": "string",
                          "tagNumber": "string"
                        }
                      ],
                      "batches": [
                        {
                          "idMark": "string",
                          "stockType": "string",
                          "batchNumber": "string",
                          "animalTotal": 0
                        }
                      ],
                      "fromSubLocation": "string",
                      "vendorHolding": "string",
                      "toSubLocation": "string"
                    }
                  ],
                  "species": "string",
                  "destinationHolding": "string",
                  "saleId": "string",
                  "transportHaulierName": "string",
                  "userHolding": "string",
                  "transportVehicleRegistrationNo": "string"
                },
                "requestId": 0,
                "errors": [
                  {
                    "message": "string",
                    "code": "string",
                    "target": "string"
                  }
                ],
                "undoSupported": true,
                "isContentPurged": true,
                "isFullUndone": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The request was successfully queued.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.Transfer.Transfer"
                },
                "example": {
                  "updatedDate": "string",
                  "requestDate": "string",
                  "requestStatus": "NotAvailable",
                  "userName": "string",
                  "warnings": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "content": {
                    "id": 0,
                    "trackingId": "string",
                    "sourceHolding": "string",
                    "animalCount": 0,
                    "movementDocument": {
                      "departureDetail": {
                        "departureHoldingType": "string",
                        "departureDateTime": "string",
                        "departureKeeper": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "animalTotal": 0,
                        "loadingDateTime": "string",
                        "departureOwner": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "expectedDurationOfJourney": {
                          "hours": 0,
                          "days": 0,
                          "minutes": 0
                        }
                      },
                      "fciDetail": {
                        "isAllAnimalsFciCompliant": true,
                        "nonCompliantReason": "string",
                        "holdingRestrictions": "string",
                        "withdrawalPeriodObservedText": "string",
                        "metFCIWithdrawalPeriodCode": "string",
                        "nonCompliantDevices": [
                          {
                            "freezebrand": "string",
                            "rfid": "string",
                            "tagNumber": "string"
                          }
                        ]
                      },
                      "transportDetail": {
                        "transporterAuthNumber": "string",
                        "transporterType": "string",
                        "transportVehicleRegistrationNo": "string",
                        "transporter": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "transportHaulierName": "string"
                      },
                      "destinationDetail": {
                        "unloadingDateTime": "string",
                        "arrivalDateTime": "string",
                        "destinationKeeper": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "destinationHoldingType": "string",
                        "hasKeeperChanged": true,
                        "totalAnimalsReceived": 0
                      },
                      "documentType": "string",
                      "movementDocumentRef": "string"
                    },
                    "deviceApplication": {
                      "dateOfApplication": "string",
                      "endBirthPeriod": "string",
                      "breed": "string",
                      "beginBirthPeriod": "string"
                    },
                    "transferDate": "string",
                    "processingFlags": [
                      {
                        "processingFlagId": 0,
                        "name": "string"
                      }
                    ],
                    "saleDate": "string",
                    "movementGroups": [
                      {
                        "devicesWithDetail": [
                          {
                            "beginBirthPeriod": "string",
                            "breed": "string",
                            "device": {
                              "freezebrand": "string",
                              "rfid": "string",
                              "tagNumber": "string"
                            },
                            "gender": "string",
                            "endBirthPeriod": "string",
                            "mgtTag": {
                              "identifier": "string"
                            }
                          }
                        ],
                        "devices": [
                          {
                            "freezebrand": "string",
                            "rfid": "string",
                            "tagNumber": "string"
                          }
                        ],
                        "batches": [
                          {
                            "idMark": "string",
                            "stockType": "string",
                            "batchNumber": "string",
                            "animalTotal": 0
                          }
                        ],
                        "fromSubLocation": "string",
                        "vendorHolding": "string",
                        "toSubLocation": "string"
                      }
                    ],
                    "species": "string",
                    "destinationHolding": "string",
                    "saleId": "string",
                    "transportHaulierName": "string",
                    "userHolding": "string",
                    "transportVehicleRegistrationNo": "string"
                  },
                  "requestId": 0,
                  "errors": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "undoSupported": true,
                  "isContentPurged": true,
                  "isFullUndone": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "TransferRequests"
        ],
        "summary": "Gets all requests to register the movement of animals",
        "description": "Returns all TransferRequests.\n* For most user roles only returns requests created by authenticated user.",
        "operationId": "get-v1-transferrequests",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 2.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions. Only dates with a time part will be accepted.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Format - int32. Format - int32. Limits the number of items returned from a collection.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Format - int32. Format - int32. Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.Transfer.TransferListResult"
                },
                "example": {
                  "value": [
                    {
                      "undoSupported": true,
                      "requestStatus": "Success",
                      "content": {
                        "species": "Cattle",
                        "userHolding": "26/001/8033",
                        "sourceHolding": "11/111/1111",
                        "processingFlags": [],
                        "transferDate": "2021-05-28T14:51:03.9975919+00:00",
                        "transportHaulierName": "Test Haulier",
                        "animalCount": 2,
                        "movementGroups": [
                          {
                            "devices": [
                              {
                                "tagNumber": "UK777777 200001"
                              },
                              {
                                "tagNumber": "UK777777 300002"
                              }
                            ]
                          }
                        ],
                        "transportVehicleRegistrationNo": "TEST 1",
                        "destinationHolding": "26/001/8033"
                      },
                      "updatedDate": "2021-06-07T14:47:03.9975919+00:00",
                      "requestDate": "2021-06-07T14:46:03.9975919+00:00",
                      "requestId": 33
                    },
                    {
                      "undoSupported": true,
                      "errors": [
                        {
                          "message": "The system is unable to transfer animal UK0244220 00005; The transfer date is before the date the tag was despatched from the manufacturer.  Please check and correct the transfer date.",
                          "code": "4039",
                          "target": "content.movementGroups[0].devices[1]"
                        }
                      ],
                      "requestStatus": "CompletedError",
                      "content": {
                        "species": "Sheep",
                        "userHolding": "26/001/8033",
                        "sourceHolding": "26/001/8033",
                        "processingFlags": [],
                        "transferDate": "2021-05-28T14:51:03.9975919+00:00",
                        "animalCount": 9,
                        "movementGroups": [
                          {
                            "batches": [
                              {
                                "animalTotal": 6,
                                "batchNumber": "UK244220"
                              }
                            ],
                            "devices": [
                              {
                                "tagNumber": "UK0244220 00004"
                              },
                              {
                                "tagNumber": "UK0244220 00005"
                              },
                              {
                                "tagNumber": "UK0244220 00006"
                              }
                            ]
                          }
                        ],
                        "movementDocument": {
                          "transportDetail": {
                            "transporterAuthNumber": "1234",
                            "transporterType": "HAULIER",
                            "transportVehicleRegistrationNo": "TEST",
                            "transporter": {
                              "title": "Mr",
                              "firstName": "Test",
                              "lastName": "Haulier",
                              "telephoneNumber": "01987 654321"
                            },
                            "transportHaulierName": "Test Haulier"
                          },
                          "destinationDetail": {
                            "destinationHoldingType": "ABATTOIR",
                            "destinationKeeper": {
                              "propertyName": "The Abattoir",
                              "town": "Towning",
                              "postCode": "",
                              "address1": "The Road"
                            }
                          },
                          "departureDetail": {
                            "departureHoldingType": "PRODUCER",
                            "departureDateTime": "2021-05-28T14:51:03.9975919+00:00",
                            "departureKeeper": {
                              "county": "Somerset",
                              "propertyName": "The Farm",
                              "address1": "The Road",
                              "title": "Mr",
                              "telephoneNumber": "01234 567890",
                              "lastName": "Farmer",
                              "postCode": "",
                              "town": "Towning",
                              "firstName": "Departure"
                            },
                            "animalTotal": 9,
                            "loadingDateTime": "2021-05-28T14:21:03.9975919+00:00",
                            "expectedDurationOfJourney": {
                              "hours": 1,
                              "minutes": 30
                            }
                          },
                          "fciDetail": {
                            "isAllAnimalsFciCompliant": true
                          }
                        },
                        "destinationHolding": "11/111/1111"
                      },
                      "updatedDate": "2021-06-07T14:47:03.9975919+00:00",
                      "requestDate": "2021-06-07T14:46:03.9975919+00:00",
                      "requestId": 34
                    },
                    {
                      "content": {
                        "species": "Sheep",
                        "userHolding": "26/001/8033",
                        "sourceHolding": "22/222/2222",
                        "processingFlags": [],
                        "transferDate": "2021-05-28T14:51:03.9975919+00:00",
                        "animalCount": 9,
                        "movementGroups": [
                          {
                            "batches": [
                              {
                                "animalTotal": 6,
                                "batchNumber": "UK244220"
                              }
                            ],
                            "devices": [
                              {
                                "tagNumber": "UK0244220 00007"
                              },
                              {
                                "tagNumber": "UK0244220 00008"
                              },
                              {
                                "tagNumber": "UK0244220 00009"
                              }
                            ]
                          }
                        ],
                        "movementDocument": {
                          "transportDetail": {
                            "transportVehicleRegistrationNo": "TEST",
                            "transporterType": "DEST",
                            "transporter": {
                              "title": "Mr",
                              "firstName": "Destination",
                              "lastName": "Keeper",
                              "telephoneNumber": "01987 654321"
                            }
                          },
                          "destinationDetail": {
                            "unloadingDateTime": "2021-05-28T18:01:03.9975919+00:00",
                            "arrivalDateTime": "2021-05-28T17:51:03.9975919+00:00",
                            "destinationKeeper": {
                              "firstName": "Destination",
                              "lastName": "Keeper",
                              "postCode": "",
                              "address1": "The Road",
                              "propertyName": "The Farm 2",
                              "town": "Towning",
                              "title": "Mr"
                            },
                            "destinationHoldingType": "PRODUCER",
                            "hasKeeperChanged": true,
                            "totalAnimalsReceived": 9
                          },
                          "departureDetail": {
                            "departureHoldingType": "PRODUCER",
                            "departureDateTime": "2021-05-28T14:51:03.9975919+00:00",
                            "departureKeeper": {
                              "county": "Somerset",
                              "propertyName": "The Farm",
                              "address1": "The Road",
                              "title": "Mr",
                              "telephoneNumber": "01234 567890",
                              "lastName": "Farmer",
                              "postCode": "",
                              "town": "Towning",
                              "firstName": "Departure"
                            },
                            "animalTotal": 9,
                            "loadingDateTime": "2021-05-28T14:21:03.9975919+00:00",
                            "expectedDurationOfJourney": {
                              "hours": 1,
                              "minutes": 30
                            }
                          },
                          "fciDetail": {
                            "nonCompliantReason": "Give extra dose of medicine",
                            "metFCIWithdrawalPeriodCode": "WITHDRAWAL_NOT_MET",
                            "isAllAnimalsFciCompliant": false,
                            "nonCompliantDevices": [
                              {
                                "tagNumber": "UK0244220 00007"
                              }
                            ]
                          }
                        },
                        "destinationHolding": "26/001/8033"
                      },
                      "undoSupported": true,
                      "requestDate": "2021-06-07T14:46:03.9975919+00:00",
                      "requestId": 35,
                      "requestStatus": "Pending"
                    }
                  ]
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.Transfer.TransferListResult"
                },
                "example": {
                  "value": [
                    {
                      "undoSupported": true,
                      "requestStatus": "Success",
                      "content": {
                        "species": "Cattle",
                        "userHolding": "26/001/8033",
                        "sourceHolding": "11/111/1111",
                        "processingFlags": [],
                        "transferDate": "2021-05-28T14:51:03.9975919+00:00",
                        "transportHaulierName": "Test Haulier",
                        "animalCount": 2,
                        "movementGroups": [
                          {
                            "devices": [
                              {
                                "tagNumber": "UK777777 200001"
                              },
                              {
                                "tagNumber": "UK777777 300002"
                              }
                            ]
                          }
                        ],
                        "transportVehicleRegistrationNo": "TEST 1",
                        "destinationHolding": "26/001/8033"
                      },
                      "updatedDate": "2021-06-07T14:47:03.9975919+00:00",
                      "requestDate": "2021-06-07T14:46:03.9975919+00:00",
                      "requestId": 33
                    },
                    {
                      "undoSupported": true,
                      "errors": [
                        {
                          "message": "The system is unable to transfer animal UK0244220 00005; The transfer date is before the date the tag was despatched from the manufacturer.  Please check and correct the transfer date.",
                          "code": "4039",
                          "target": "content.movementGroups[0].devices[1]"
                        }
                      ],
                      "requestStatus": "CompletedError",
                      "content": {
                        "species": "Sheep",
                        "userHolding": "26/001/8033",
                        "sourceHolding": "26/001/8033",
                        "processingFlags": [],
                        "transferDate": "2021-05-28T14:51:03.9975919+00:00",
                        "animalCount": 9,
                        "movementGroups": [
                          {
                            "batches": [
                              {
                                "animalTotal": 6,
                                "batchNumber": "UK244220"
                              }
                            ],
                            "devices": [
                              {
                                "tagNumber": "UK0244220 00004"
                              },
                              {
                                "tagNumber": "UK0244220 00005"
                              },
                              {
                                "tagNumber": "UK0244220 00006"
                              }
                            ]
                          }
                        ],
                        "movementDocument": {
                          "transportDetail": {
                            "transporterAuthNumber": "1234",
                            "transporterType": "HAULIER",
                            "transportVehicleRegistrationNo": "TEST",
                            "transporter": {
                              "title": "Mr",
                              "firstName": "Test",
                              "lastName": "Haulier",
                              "telephoneNumber": "01987 654321"
                            },
                            "transportHaulierName": "Test Haulier"
                          },
                          "destinationDetail": {
                            "destinationHoldingType": "ABATTOIR",
                            "destinationKeeper": {
                              "propertyName": "The Abattoir",
                              "town": "Towning",
                              "postCode": "",
                              "address1": "The Road"
                            }
                          },
                          "departureDetail": {
                            "departureHoldingType": "PRODUCER",
                            "departureDateTime": "2021-05-28T14:51:03.9975919+00:00",
                            "departureKeeper": {
                              "county": "Somerset",
                              "propertyName": "The Farm",
                              "address1": "The Road",
                              "title": "Mr",
                              "telephoneNumber": "01234 567890",
                              "lastName": "Farmer",
                              "postCode": "",
                              "town": "Towning",
                              "firstName": "Departure"
                            },
                            "animalTotal": 9,
                            "loadingDateTime": "2021-05-28T14:21:03.9975919+00:00",
                            "expectedDurationOfJourney": {
                              "hours": 1,
                              "minutes": 30
                            }
                          },
                          "fciDetail": {
                            "isAllAnimalsFciCompliant": true
                          }
                        },
                        "destinationHolding": "11/111/1111"
                      },
                      "updatedDate": "2021-06-07T14:47:03.9975919+00:00",
                      "requestDate": "2021-06-07T14:46:03.9975919+00:00",
                      "requestId": 34
                    },
                    {
                      "content": {
                        "species": "Sheep",
                        "userHolding": "26/001/8033",
                        "sourceHolding": "22/222/2222",
                        "processingFlags": [],
                        "transferDate": "2021-05-28T14:51:03.9975919+00:00",
                        "animalCount": 9,
                        "movementGroups": [
                          {
                            "batches": [
                              {
                                "animalTotal": 6,
                                "batchNumber": "UK244220"
                              }
                            ],
                            "devices": [
                              {
                                "tagNumber": "UK0244220 00007"
                              },
                              {
                                "tagNumber": "UK0244220 00008"
                              },
                              {
                                "tagNumber": "UK0244220 00009"
                              }
                            ]
                          }
                        ],
                        "movementDocument": {
                          "transportDetail": {
                            "transportVehicleRegistrationNo": "TEST",
                            "transporterType": "DEST",
                            "transporter": {
                              "title": "Mr",
                              "firstName": "Destination",
                              "lastName": "Keeper",
                              "telephoneNumber": "01987 654321"
                            }
                          },
                          "destinationDetail": {
                            "unloadingDateTime": "2021-05-28T18:01:03.9975919+00:00",
                            "arrivalDateTime": "2021-05-28T17:51:03.9975919+00:00",
                            "destinationKeeper": {
                              "firstName": "Destination",
                              "lastName": "Keeper",
                              "postCode": "",
                              "address1": "The Road",
                              "propertyName": "The Farm 2",
                              "town": "Towning",
                              "title": "Mr"
                            },
                            "destinationHoldingType": "PRODUCER",
                            "hasKeeperChanged": true,
                            "totalAnimalsReceived": 9
                          },
                          "departureDetail": {
                            "departureHoldingType": "PRODUCER",
                            "departureDateTime": "2021-05-28T14:51:03.9975919+00:00",
                            "departureKeeper": {
                              "county": "Somerset",
                              "propertyName": "The Farm",
                              "address1": "The Road",
                              "title": "Mr",
                              "telephoneNumber": "01234 567890",
                              "lastName": "Farmer",
                              "postCode": "",
                              "town": "Towning",
                              "firstName": "Departure"
                            },
                            "animalTotal": 9,
                            "loadingDateTime": "2021-05-28T14:21:03.9975919+00:00",
                            "expectedDurationOfJourney": {
                              "hours": 1,
                              "minutes": 30
                            }
                          },
                          "fciDetail": {
                            "nonCompliantReason": "Give extra dose of medicine",
                            "metFCIWithdrawalPeriodCode": "WITHDRAWAL_NOT_MET",
                            "isAllAnimalsFciCompliant": false,
                            "nonCompliantDevices": [
                              {
                                "tagNumber": "UK0244220 00007"
                              }
                            ]
                          }
                        },
                        "destinationHolding": "26/001/8033"
                      },
                      "undoSupported": true,
                      "requestDate": "2021-06-07T14:46:03.9975919+00:00",
                      "requestId": 35,
                      "requestStatus": "Pending"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": "<CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse> <error> <code>string</code> <message>string</message> <target>string</target> <details> <code>string</code> <target>string</target> <message>string</message> </details> </error> </CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse>"
              }
            }
          }
        }
      }
    },
    "/ReviewHoldingMovementRequests/$count": {
      "get": {
        "tags": [
          "ReviewHoldingMovementRequests"
        ],
        "summary": "Gets the count of requests.",
        "description": "Gets the count of requests previously submitted. The authenticated user's system permissions will determine whether the count only includes requests created by the authenticated user.",
        "operationId": "get-v1-reviewholdingmovementrequests-count",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/V1ReviewHoldingMovementRequests-countGet200TextPlainResponse"
                },
                "examples": {
                  "default": {}
                }
              }
            }
          }
        }
      }
    },
    "/CorrectTransferRequests": {
      "post": {
        "tags": [
          "CorrectTransferRequests"
        ],
        "summary": "Correct an existing movement of animals",
        "description": "The CorrectTransferRequests allows you to edit an existing movement recorded by the [TransferRequests](#TransferRequests) endpoint.\n* The authenticated user must have originally created the transfer request being corrected (unless the authenticated user is an administrator)\n* The original and corrected movement must be for the same `species`, `sourceHolding` and `destinationHolding`.\n* The system may not allow a transfer request to be corrected if other events have subsequently happened to animals involved in the original transfer request.\n* Use the `requestToBeUndone_ID` to specify the request id of the transfer request to be corrected. This can be obtained from the [TransferRequests](#TransferRequests) endpoint.\n* The content of the request must contain all the details of the movement that the original movement should be replaced with.\n* CorrectTransferRequests validation rules match [TransferRequests](#TransferRequests), see this for further information.",
        "operationId": "post-v1-correcttransferrequests",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CLAOData.Models.CorrectTransfer.CorrectTransfer"
              },
              "example": {
                "updatedDate": "string",
                "requestDate": "string",
                "requestStatus": "NotAvailable",
                "userName": "string",
                "warnings": [
                  {
                    "message": "string",
                    "code": "string",
                    "target": "string"
                  }
                ],
                "content": {
                  "movementGroups": [
                    {
                      "devicesWithDetail": [
                        {
                          "beginBirthPeriod": "string",
                          "breed": "string",
                          "device": {
                            "freezebrand": "string",
                            "rfid": "string",
                            "tagNumber": "string"
                          },
                          "gender": "string",
                          "endBirthPeriod": "string",
                          "mgtTag": {
                            "identifier": "string"
                          }
                        }
                      ],
                      "devices": [
                        {
                          "freezebrand": "string",
                          "rfid": "string",
                          "tagNumber": "string"
                        }
                      ],
                      "batches": [
                        {
                          "idMark": "string",
                          "stockType": "string",
                          "batchNumber": "string",
                          "animalTotal": 0
                        }
                      ],
                      "fromSubLocation": "string",
                      "vendorHolding": "string",
                      "toSubLocation": "string"
                    }
                  ],
                  "id": 0,
                  "saleDate": "string",
                  "deviceApplication": {
                    "dateOfApplication": "string",
                    "endBirthPeriod": "string",
                    "breed": "string",
                    "beginBirthPeriod": "string"
                  },
                  "requestToBeUndone_ID": 0,
                  "transferDate": "string",
                  "transportHaulierName": "string",
                  "trackingId": "string",
                  "transportVehicleRegistrationNo": "string",
                  "userHolding": "string",
                  "saleId": "string",
                  "species": "string",
                  "destinationHolding": "string",
                  "sourceHolding": "string",
                  "processingFlags": [
                    {
                      "processingFlagId": 0,
                      "name": "string"
                    }
                  ],
                  "movementDocument": {
                    "departureDetail": {
                      "departureHoldingType": "string",
                      "departureDateTime": "string",
                      "departureKeeper": {
                        "county": "string",
                        "address2": "string",
                        "propertyName": "string",
                        "address1": "string",
                        "title": "string",
                        "telephoneNumber": "string",
                        "lastName": "string",
                        "postCode": "string",
                        "town": "string",
                        "firstName": "string"
                      },
                      "animalTotal": 0,
                      "loadingDateTime": "string",
                      "departureOwner": {
                        "county": "string",
                        "address2": "string",
                        "propertyName": "string",
                        "address1": "string",
                        "title": "string",
                        "telephoneNumber": "string",
                        "lastName": "string",
                        "postCode": "string",
                        "town": "string",
                        "firstName": "string"
                      },
                      "expectedDurationOfJourney": {
                        "hours": 0,
                        "days": 0,
                        "minutes": 0
                      }
                    },
                    "fciDetail": {
                      "isAllAnimalsFciCompliant": true,
                      "nonCompliantReason": "string",
                      "holdingRestrictions": "string",
                      "withdrawalPeriodObservedText": "string",
                      "metFCIWithdrawalPeriodCode": "string",
                      "nonCompliantDevices": [
                        {
                          "freezebrand": "string",
                          "rfid": "string",
                          "tagNumber": "string"
                        }
                      ]
                    },
                    "transportDetail": {
                      "transporterAuthNumber": "string",
                      "transporterType": "string",
                      "transportVehicleRegistrationNo": "string",
                      "transporter": {
                        "county": "string",
                        "address2": "string",
                        "propertyName": "string",
                        "address1": "string",
                        "title": "string",
                        "telephoneNumber": "string",
                        "lastName": "string",
                        "postCode": "string",
                        "town": "string",
                        "firstName": "string"
                      },
                      "transportHaulierName": "string"
                    },
                    "destinationDetail": {
                      "unloadingDateTime": "string",
                      "arrivalDateTime": "string",
                      "destinationKeeper": {
                        "county": "string",
                        "address2": "string",
                        "propertyName": "string",
                        "address1": "string",
                        "title": "string",
                        "telephoneNumber": "string",
                        "lastName": "string",
                        "postCode": "string",
                        "town": "string",
                        "firstName": "string"
                      },
                      "destinationHoldingType": "string",
                      "hasKeeperChanged": true,
                      "totalAnimalsReceived": 0
                    },
                    "documentType": "string",
                    "movementDocumentRef": "string"
                  },
                  "animalCount": 0
                },
                "requestId": 0,
                "errors": [
                  {
                    "message": "string",
                    "code": "string",
                    "target": "string"
                  }
                ],
                "undoSupported": true,
                "isContentPurged": true,
                "isFullUndone": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The request was successfully queued.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.CorrectTransfer.CorrectTransfer"
                },
                "example": {
                  "updatedDate": "string",
                  "requestDate": "string",
                  "requestStatus": "NotAvailable",
                  "userName": "string",
                  "warnings": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "content": {
                    "movementGroups": [
                      {
                        "devicesWithDetail": [
                          {
                            "beginBirthPeriod": "string",
                            "breed": "string",
                            "device": {
                              "freezebrand": "string",
                              "rfid": "string",
                              "tagNumber": "string"
                            },
                            "gender": "string",
                            "endBirthPeriod": "string",
                            "mgtTag": {
                              "identifier": "string"
                            }
                          }
                        ],
                        "devices": [
                          {
                            "freezebrand": "string",
                            "rfid": "string",
                            "tagNumber": "string"
                          }
                        ],
                        "batches": [
                          {
                            "idMark": "string",
                            "stockType": "string",
                            "batchNumber": "string",
                            "animalTotal": 0
                          }
                        ],
                        "fromSubLocation": "string",
                        "vendorHolding": "string",
                        "toSubLocation": "string"
                      }
                    ],
                    "id": 0,
                    "saleDate": "string",
                    "deviceApplication": {
                      "dateOfApplication": "string",
                      "endBirthPeriod": "string",
                      "breed": "string",
                      "beginBirthPeriod": "string"
                    },
                    "requestToBeUndone_ID": 0,
                    "transferDate": "string",
                    "transportHaulierName": "string",
                    "trackingId": "string",
                    "transportVehicleRegistrationNo": "string",
                    "userHolding": "string",
                    "saleId": "string",
                    "species": "string",
                    "destinationHolding": "string",
                    "sourceHolding": "string",
                    "processingFlags": [
                      {
                        "processingFlagId": 0,
                        "name": "string"
                      }
                    ],
                    "movementDocument": {
                      "departureDetail": {
                        "departureHoldingType": "string",
                        "departureDateTime": "string",
                        "departureKeeper": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "animalTotal": 0,
                        "loadingDateTime": "string",
                        "departureOwner": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "expectedDurationOfJourney": {
                          "hours": 0,
                          "days": 0,
                          "minutes": 0
                        }
                      },
                      "fciDetail": {
                        "isAllAnimalsFciCompliant": true,
                        "nonCompliantReason": "string",
                        "holdingRestrictions": "string",
                        "withdrawalPeriodObservedText": "string",
                        "metFCIWithdrawalPeriodCode": "string",
                        "nonCompliantDevices": [
                          {
                            "freezebrand": "string",
                            "rfid": "string",
                            "tagNumber": "string"
                          }
                        ]
                      },
                      "transportDetail": {
                        "transporterAuthNumber": "string",
                        "transporterType": "string",
                        "transportVehicleRegistrationNo": "string",
                        "transporter": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "transportHaulierName": "string"
                      },
                      "destinationDetail": {
                        "unloadingDateTime": "string",
                        "arrivalDateTime": "string",
                        "destinationKeeper": {
                          "county": "string",
                          "address2": "string",
                          "propertyName": "string",
                          "address1": "string",
                          "title": "string",
                          "telephoneNumber": "string",
                          "lastName": "string",
                          "postCode": "string",
                          "town": "string",
                          "firstName": "string"
                        },
                        "destinationHoldingType": "string",
                        "hasKeeperChanged": true,
                        "totalAnimalsReceived": 0
                      },
                      "documentType": "string",
                      "movementDocumentRef": "string"
                    },
                    "animalCount": 0
                  },
                  "requestId": 0,
                  "errors": [
                    {
                      "message": "string",
                      "code": "string",
                      "target": "string"
                    }
                  ],
                  "undoSupported": true,
                  "isContentPurged": true,
                  "isFullUndone": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CorrectTransferRequests"
        ],
        "summary": "Gets all requests to correct an existing movement of animals",
        "description": "Returns all CorrectTransferRequests.\n* For most user roles only returns requests created by authenticated user.",
        "operationId": "get-v1-correcttransferrequests",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 2.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions. Only dates with a time part will be accepted.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Format - int32. Format - int32. Limits the number of items returned from a collection.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Format - int32. Format - int32. Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.CorrectTransfer.CorrectTransferListResult"
                },
                "example": {
                  "value": [
                    {
                      "undoSupported": true,
                      "requestStatus": "Success",
                      "content": {
                        "species": "Cattle",
                        "userHolding": "26/001/8033",
                        "sourceHolding": "11/111/1111",
                        "processingFlags": [],
                        "transferDate": "2021-05-28T14:51:03.9915903+00:00",
                        "transportHaulierName": "Test Haulier",
                        "animalCount": 2,
                        "movementGroups": [
                          {
                            "devices": [
                              {
                                "tagNumber": "UK777777 200001"
                              },
                              {
                                "tagNumber": "UK777777 300002"
                              }
                            ]
                          }
                        ],
                        "transportVehicleRegistrationNo": "TEST 1",
                        "destinationHolding": "26/001/8033",
                        "requestToBeUndone_ID": 12
                      },
                      "updatedDate": "2021-06-07T14:47:03.9915903+00:00",
                      "requestDate": "2021-06-07T14:46:03.9915903+00:00",
                      "requestId": 33
                    },
                    {
                      "undoSupported": true,
                      "errors": [
                        {
                          "code": "14113",
                          "message": "Unable to UNDO request, the animal UK0244220 00007 contains a subsequent movement (after) submitted by request 32."
                        },
                        {
                          "code": "4076",
                          "message": "Could not edit the movement, due to errors undoing the original movement."
                        }
                      ],
                      "requestStatus": "CompletedError",
                      "content": {
                        "species": "Sheep",
                        "userHolding": "26/001/8033",
                        "sourceHolding": "22/222/2222",
                        "processingFlags": [],
                        "transferDate": "2021-05-28T14:51:03.9915903+00:00",
                        "animalCount": 9,
                        "movementGroups": [
                          {
                            "batches": [
                              {
                                "animalTotal": 6,
                                "batchNumber": "UK244220"
                              }
                            ],
                            "devices": [
                              {
                                "tagNumber": "UK0244220 00007"
                              },
                              {
                                "tagNumber": "UK0244220 00008"
                              },
                              {
                                "tagNumber": "UK0244220 00009"
                              }
                            ]
                          }
                        ],
                        "movementDocument": {
                          "transportDetail": {
                            "transportVehicleRegistrationNo": "TEST",
                            "transporterType": "DEST",
                            "transporter": {
                              "title": "Mr",
                              "firstName": "Destination",
                              "lastName": "Keeper",
                              "telephoneNumber": "01987 654321"
                            }
                          },
                          "destinationDetail": {
                            "unloadingDateTime": "2021-05-28T18:01:03.9915903+00:00",
                            "arrivalDateTime": "2021-05-28T17:51:03.9915903+00:00",
                            "destinationKeeper": {
                              "firstName": "Destination",
                              "lastName": "Keeper",
                              "postCode": "",
                              "address1": "The Road",
                              "propertyName": "The Farm 2",
                              "town": "Towning",
                              "title": "Mr"
                            },
                            "destinationHoldingType": "PRODUCER",
                            "hasKeeperChanged": true,
                            "totalAnimalsReceived": 9
                          },
                          "departureDetail": {
                            "departureHoldingType": "PRODUCER",
                            "departureDateTime": "2021-05-28T14:51:03.9915903+00:00",
                            "departureKeeper": {
                              "county": "Somerset",
                              "propertyName": "The Farm",
                              "address1": "The Road",
                              "title": "Mr",
                              "telephoneNumber": "01234 567890",
                              "lastName": "Farmer",
                              "postCode": "",
                              "town": "Towning",
                              "firstName": "Departure"
                            },
                            "animalTotal": 9,
                            "loadingDateTime": "2021-05-28T14:21:03.9915903+00:00",
                            "expectedDurationOfJourney": {
                              "hours": 1,
                              "minutes": 30
                            }
                          },
                          "fciDetail": {
                            "nonCompliantReason": "Give extra dose of medicine",
                            "metFCIWithdrawalPeriodCode": "WITHDRAWAL_NOT_MET",
                            "isAllAnimalsFciCompliant": false,
                            "nonCompliantDevices": [
                              {
                                "tagNumber": "UK0244220 00007"
                              }
                            ]
                          }
                        },
                        "destinationHolding": "26/001/8033",
                        "requestToBeUndone_ID": 13
                      },
                      "updatedDate": "2021-06-07T14:47:03.9915903+00:00",
                      "requestDate": "2021-06-07T14:46:03.9915903+00:00",
                      "requestId": 34
                    }
                  ]
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.CorrectTransfer.CorrectTransferListResult"
                },
                "example": {
                  "value": [
                    {
                      "undoSupported": true,
                      "requestStatus": "Success",
                      "content": {
                        "species": "Cattle",
                        "userHolding": "26/001/8033",
                        "sourceHolding": "11/111/1111",
                        "processingFlags": [],
                        "transferDate": "2021-05-28T14:51:03.9915903+00:00",
                        "transportHaulierName": "Test Haulier",
                        "animalCount": 2,
                        "movementGroups": [
                          {
                            "devices": [
                              {
                                "tagNumber": "UK777777 200001"
                              },
                              {
                                "tagNumber": "UK777777 300002"
                              }
                            ]
                          }
                        ],
                        "transportVehicleRegistrationNo": "TEST 1",
                        "destinationHolding": "26/001/8033",
                        "requestToBeUndone_ID": 12
                      },
                      "updatedDate": "2021-06-07T14:47:03.9915903+00:00",
                      "requestDate": "2021-06-07T14:46:03.9915903+00:00",
                      "requestId": 33
                    },
                    {
                      "undoSupported": true,
                      "errors": [
                        {
                          "code": "14113",
                          "message": "Unable to UNDO request, the animal UK0244220 00007 contains a subsequent movement (after) submitted by request 32."
                        },
                        {
                          "code": "4076",
                          "message": "Could not edit the movement, due to errors undoing the original movement."
                        }
                      ],
                      "requestStatus": "CompletedError",
                      "content": {
                        "species": "Sheep",
                        "userHolding": "26/001/8033",
                        "sourceHolding": "22/222/2222",
                        "processingFlags": [],
                        "transferDate": "2021-05-28T14:51:03.9915903+00:00",
                        "animalCount": 9,
                        "movementGroups": [
                          {
                            "batches": [
                              {
                                "animalTotal": 6,
                                "batchNumber": "UK244220"
                              }
                            ],
                            "devices": [
                              {
                                "tagNumber": "UK0244220 00007"
                              },
                              {
                                "tagNumber": "UK0244220 00008"
                              },
                              {
                                "tagNumber": "UK0244220 00009"
                              }
                            ]
                          }
                        ],
                        "movementDocument": {
                          "transportDetail": {
                            "transportVehicleRegistrationNo": "TEST",
                            "transporterType": "DEST",
                            "transporter": {
                              "title": "Mr",
                              "firstName": "Destination",
                              "lastName": "Keeper",
                              "telephoneNumber": "01987 654321"
                            }
                          },
                          "destinationDetail": {
                            "unloadingDateTime": "2021-05-28T18:01:03.9915903+00:00",
                            "arrivalDateTime": "2021-05-28T17:51:03.9915903+00:00",
                            "destinationKeeper": {
                              "firstName": "Destination",
                              "lastName": "Keeper",
                              "postCode": "",
                              "address1": "The Road",
                              "propertyName": "The Farm 2",
                              "town": "Towning",
                              "title": "Mr"
                            },
                            "destinationHoldingType": "PRODUCER",
                            "hasKeeperChanged": true,
                            "totalAnimalsReceived": 9
                          },
                          "departureDetail": {
                            "departureHoldingType": "PRODUCER",
                            "departureDateTime": "2021-05-28T14:51:03.9915903+00:00",
                            "departureKeeper": {
                              "county": "Somerset",
                              "propertyName": "The Farm",
                              "address1": "The Road",
                              "title": "Mr",
                              "telephoneNumber": "01234 567890",
                              "lastName": "Farmer",
                              "postCode": "",
                              "town": "Towning",
                              "firstName": "Departure"
                            },
                            "animalTotal": 9,
                            "loadingDateTime": "2021-05-28T14:21:03.9915903+00:00",
                            "expectedDurationOfJourney": {
                              "hours": 1,
                              "minutes": 30
                            }
                          },
                          "fciDetail": {
                            "nonCompliantReason": "Give extra dose of medicine",
                            "metFCIWithdrawalPeriodCode": "WITHDRAWAL_NOT_MET",
                            "isAllAnimalsFciCompliant": false,
                            "nonCompliantDevices": [
                              {
                                "tagNumber": "UK0244220 00007"
                              }
                            ]
                          }
                        },
                        "destinationHolding": "26/001/8033",
                        "requestToBeUndone_ID": 13
                      },
                      "updatedDate": "2021-06-07T14:47:03.9915903+00:00",
                      "requestDate": "2021-06-07T14:46:03.9915903+00:00",
                      "requestId": 34
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": "<CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse> <error> <code>string</code> <message>string</message> <target>string</target> <details> <code>string</code> <target>string</target> <message>string</message> </details> </error> </CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse>"
              }
            }
          }
        }
      }
    },
    "/ApprovedMovements/ByTransferDateRange(speciesId={speciesId},startTransferDate={startTransferDate},endTransferDate={endTransferDate},departureHolding={departureHolding},destinationHolding={destinationHolding})": {
      "get": {
        "tags": [
          "ApprovedMovements"
        ],
        "summary": "Gets Approved Movements by TransferDate",
        "description": "For users linked to a holding, this returns all movements for holdings the authenticated user is associated with.\nThe movement must be non-system and have been recorded or reviewed and accepted by the authenticated user or other users associated with the holding.\n            \nFor users not linked to a holding this returns all movements that are not system movements.\n            \n A movement is returned twice if both:\n* It was recorded by departure keeper and destination has reviewed and accepted the movement.\n* The authenticated user is not linked to holdings, or is associated with both departure and destination holdings.\n            \nThe recordedBy property is used to indicate if the Departure or Destination end of movement has either:\n * Recorded the movement\n * Reviewed and accepted the movement",
        "operationId": "get-v1-approvedmovements-bytransferdaterange-speciesid-speciesid-starttransf",
        "parameters": [
          {
            "name": "speciesId",
            "in": "path",
            "description": "Format - int32. Format - int32. Id of species\r\n            \r\n* *Necessity*: Required.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "startTransferDate",
            "in": "path",
            "description": "Format - date-time (as date-time in RFC3339). Format - date-time (as date-time in RFC3339). Start date of the transferDate range\r\n            \r\n* *Necessity*: Required.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endTransferDate",
            "in": "path",
            "description": "Format - date-time (as date-time in RFC3339). Format - date-time (as date-time in RFC3339). End date of the transferDate range\r\n            \r\n* *Necessity*: Required.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departureHolding",
            "in": "path",
            "description": "CPH of departureHolding\r\n            \r\n*Necessity*: Either departureHolding or DestinationHolding is required, but can be null or empty string for authenticated users associated with holdings.\r\n            \r\n*Validation*: Must be a valid holding that exists. For most user roles authenticated user must be associated with it.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationHolding",
            "in": "path",
            "description": "CPH of destinationHolding\r\n            \r\n*Necessity*: Either departureHolding or DestinationHolding is required, but can be null or empty string for authenticated users associated with holdings.\r\n            \r\n*Validation*: Must be a valid holding that exists. For most user roles authenticated user must be associated with it.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions. Only dates with a time part will be accepted.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Format - int32. Format - int32. Limits the number of items returned from a collection.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Format - int32. Format - int32. Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementListResult"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementListResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": {
                  "error": {
                    "message": "string",
                    "code": "string",
                    "target": "string",
                    "details": [
                      {
                        "message": "string",
                        "code": "string",
                        "target": "string"
                      }
                    ]
                  }
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse"
                },
                "example": "<CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse> <error> <code>string</code> <message>string</message> <target>string</target> <details> <code>string</code> <target>string</target> <message>string</message> </details> </error> </CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse>"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CLAOData.Models.HoldingDetails.HoldingDetails": {
        "type": "object",
        "properties": {
          "holdingTypeId": {
            "type": "integer",
            "description": "</br>Entity id for holdingType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "town": {
            "type": "string",
            "description": "Address town\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 50",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "Person's first name or Christian name\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 32",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Person's last name or surname\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 32",
            "nullable": true
          },
          "county": {
            "type": "string",
            "description": "Address County\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits name values returned by [Counties](#Counties) endpoint",
            "nullable": true
          },
          "holdingType": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingType"
          },
          "propertyName": {
            "type": "string",
            "description": "Address property name or street number\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Person's name prefix\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits name values returned by [Titles](#Titles) endpoint",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Id of holding this being the CPH number\r\n* *Necessity*: Required\r\n* *Validation*: String is in valid holding CPH format (see API guide for supported holding number formats).",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "description": "Address postcode\r\n* *Necessity*: Optional\r\n* *Validation*: Valid format UK postcode",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "description": "Address line 1\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 128",
            "nullable": true
          },
          "telephoneNumber": {
            "type": "string",
            "description": "Telephone number\r\n* *Necessity*: Optional\r\n* *Validation*:\r\n  * Should only contain numbers and space characters\r\n  * Maximum length 13",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address line 2\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 128",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1AddAnnualInventoryRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.PendingMovement.PendingMovementTransportDetail": {
        "type": "object",
        "properties": {
          "transporterId": {
            "type": "integer",
            "description": "</br>Entity id for transporter to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "transporterTypeId": {
            "type": "integer",
            "description": "</br>Entity id for transporterType to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "transporterType": {
            "$ref": "#/components/schemas/CLAOData.Models.Transfer.TransporterType"
          },
          "transporter": {
            "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementContact"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "transporterAuthNumber": {
            "type": "string",
            "nullable": true
          },
          "transportHaulierName": {
            "type": "string",
            "nullable": true
          },
          "transportVehicleRegistrationNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This represents transport details for a pending movement.\r\n\r\nThe model is analogous to the TransportDetail model. See the TransportDetail schema for details"
      },
      "CLAOData.Models.PaperMovement.Batch": {
        "type": "object",
        "properties": {
          "idMark": {
            "maxLength": 50,
            "type": "string",
            "description": "Description of the batch of animals\r\n* *Necessity*: Optional\r\n* *Validation*: String maximum length 50",
            "nullable": true
          },
          "stockType": {
            "maxLength": 50,
            "type": "string",
            "description": "Stock type of the batch of animals\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits stock type name values returned by [StockTypes](#StockTypes) endpoint for species",
            "nullable": true
          },
          "batchNumber": {
            "maxLength": 20,
            "type": "string",
            "description": "Batch number of group of animals (i.e the herd or flock number)\r\n* *Necessity*: Required\r\n* *Validation*: String is in the batch number format supported for the species (see API guide for supported batch number formats)",
            "nullable": true
          },
          "animalTotal": {
            "maxLength": 10,
            "type": "string",
            "description": "Total animals in batch\r\n* *Necessity*: Required\r\n* *Validation*: Integer greater than 0",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.ProgramRegion": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "programRegionCounties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramRegionCounty"
            },
            "description": "List of counties belonging to the region",
            "nullable": true
          },
          "isVisible": {
            "type": "boolean",
            "description": "Program Region Is Visible"
          },
          "name": {
            "maxLength": 32,
            "pattern": "^[A-Za-z0-9\\s]*$",
            "type": "string",
            "description": "Program Region Name"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Gender": {
        "type": "object",
        "properties": {
          "genderSpecies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.GenderSpecies"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Gender code\r\n* *Necessity* Required\r\n* *Validation* String, maximum length 1, Examples are F for female and M for male",
            "nullable": true
          },
          "typeCode": {
            "type": "string",
            "description": "Short code to identify gender\r\n* *Necessity* Required\r\n* *Validation* String, maximum length 10",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gender name\r\n* *Necessity* Required\r\n* *Validation* String, maximum length 30",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Gender Information"
      },
      "CLAOData.Models.PaperMovement.PaperMovementProcessingFlag": {
        "type": "object",
        "properties": {
          "processingFlagId": {
            "type": "integer",
            "description": "Processing flag Id\r\n* *Necessity*: Optional",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Processing flag name\r\n* *Necessity*: Required\r\n* *Validation*: Only permits processing flag name values returned by [ProcessingFlags](#ProcessingFlags) endpoint",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.ProgramRegionCounty": {
        "type": "object",
        "properties": {
          "countyId": {
            "type": "integer",
            "description": "</br>Entity id for county to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "programRegion": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramRegion"
          },
          "programRegionId": {
            "type": "integer",
            "description": "</br>Entity id for programRegion to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "county": {
            "$ref": "#/components/schemas/CLAOData.Models.County"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ReviewHoldingMovement.ReviewHoldingMovementModel": {
        "type": "object",
        "properties": {
          "reviewMovement": {
            "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.ReviewMovement"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "holding": {
            "type": "string",
            "description": "Holding CPH movement is being reviewed for.\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH format (see API guide for supported tag number formats).\r\n  * For most user roles authenticated user must be associated with the holding.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Review movement request content\r\n* `holding` and `reviewMovement` must have a value specified."
      },
      "CLAOData.Models.BusinessRulesConfig.RequestTypeProcessingRuleHoldingType": {
        "required": [
          "holdingTypeId"
        ],
        "type": "object",
        "properties": {
          "holdingType": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingType"
          },
          "requestTypeProcessingRuleHolding": {
            "$ref": "#/components/schemas/CLAOData.Models.BusinessRulesConfig.RequestTypeProcessingRuleHolding"
          },
          "requestTypeProcessingRuleHoldingId": {
            "type": "integer",
            "format": "int32"
          },
          "holdingTypeId": {
            "type": "integer",
            "description": "</br>Entity id for holdingType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Transfer.MovementGroup": {
        "type": "object",
        "properties": {
          "devicesWithDetail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.DeviceWithDetail"
            },
            "description": "Collection of individual identified animals moved along with animal details that should be set at the same time\r\n* *Necessity*: Either `devices`, `devicesWithDetail` or `batches` must contain one or more items",
            "nullable": true
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Device"
            },
            "description": "Collection of individual identified animals moved\r\n* *Necessity*: Either `devices`, `devicesWithDetail` or `batches` must contain one or more items",
            "nullable": true
          },
          "batches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Batch"
            },
            "description": "Collection of batch identified animals moved\r\n* *Necessity*: Either `devices`, `devicesWithDetail` or `batches` must contain one or more items",
            "nullable": true
          },
          "fromSubLocation": {
            "type": "string",
            "description": "Pen or Lot or other identifier to indicate a location within a holding from which animals moved from. This should only be used by market to specify pen/lot.\r\n* *Necessity*: Only should be specified if a market holding type is recording an off movement\r\n* *Validation*:\r\n  * Maximum length 32 characters\r\n  * Must be empty if isn't a market recording an off movement",
            "nullable": true
          },
          "vendorHolding": {
            "type": "string",
            "description": "Vendor holding CPH that the group of animals were purchased from\r\n* *Necessity*: Only should be specified if a market holding type is recording an off movement\r\n* *Validation*:\r\n  * String is in valid holding CPH format (see API guide for supported holding number formats).\r\n  * Must be empty if isn't a market recording an off movement",
            "nullable": true
          },
          "toSubLocation": {
            "type": "string",
            "description": "Pen or Lot or other identifier to indicate a location within a holding where animals moved to such as an isolation unit\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 32 characters",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingDetailsAndPartyModify.HoldingModify": {
        "type": "object",
        "properties": {
          "vetNetCoreId": {
            "type": "string",
            "description": "vetNetCoreId\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "keeperAddressPk": {
            "type": "string",
            "description": "keeperAddressPk\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "northing": {
            "type": "string",
            "description": "northing\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "party": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingDetailsAndPartyModify.Party"
          },
          "propertyName": {
            "type": "string",
            "description": "propertyName\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "cph": {
            "type": "string",
            "description": "cph\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "easting": {
            "type": "string",
            "description": "easting\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "featurePk": {
            "type": "string",
            "description": "featurePk\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "holdingType": {
            "type": "string",
            "description": "holdingType\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "holdingId": {
            "type": "integer",
            "description": "holdingId\r\n* *Necessity*: \r\n* *Validation*:",
            "format": "int32"
          },
          "osMapReference": {
            "type": "string",
            "description": "osMapReference\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "operation": {
            "type": "string",
            "description": "operation\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "keeper": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingDetailsAndPartyModify.Keeper"
          }
        },
        "additionalProperties": false,
        "description": "holding"
      },
      "CLAOData.Models.County": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The county name\r\n* *Necessity* Required\r\n* *Validation* String, maximum length 50",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Counties"
      },
      "CLAOData.Models.Sighting.SightingModel": {
        "type": "object",
        "properties": {
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sightingDate": {
            "type": "string",
            "description": "Date animals were sighted.\r\n* *Necessity*: Required\r\n* *Validation*: Must not be in the future.",
            "format": "date-time"
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Device"
            },
            "description": "Collection of individual identified animals that were sighted.\r\n* *Necessity*: Required\r\n* *Validation*: Must contain one or more items.",
            "nullable": true
          },
          "holding": {
            "type": "string",
            "description": "Identifier of holding where the animals were sighted.\r\n* *Necessity*: Required\r\n* *Validation*: String is in valid holding CPH or abattoir MHS number format (see API guide for supported holding number formats).",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "The species name of animals that were sighted.\r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sighting request content.\r\n\r\nThe devices collection must have entries."
      },
      "System.StringResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HerdModify.HerdModify": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.HerdModify.HerdModifyModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.RequestTypeModelListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestTypeModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1UpdateMultipleAnimalsRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.HerdIntegration.Herd": {
        "required": [
          "herdId"
        ],
        "type": "object",
        "properties": {
          "herdId": {
            "type": "string",
            "description": "The unique id for the herd.\r\n* *Necessity*: Required"
          }
        },
        "additionalProperties": false,
        "description": "Herd request content"
      },
      "Microsoft.OData.ODataErrorDetail": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.PendingMovement.PendingMovementBatch": {
        "type": "object",
        "properties": {
          "animalCount": {
            "type": "integer",
            "description": "Total animals in batch",
            "format": "int32"
          },
          "idMark": {
            "type": "string",
            "description": "Description of the batch of animals",
            "nullable": true
          },
          "batchNumber": {
            "type": "string",
            "description": "Batch number of group of animals (i.e the herd or flock number)",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "pendingMovementId": {
            "type": "integer",
            "description": "</br>Entity id for pendingMovement to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "pendingMovement": {
            "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementDetails"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.AnnualInventory.AddAnnualInventoryListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.AnnualInventory.AddAnnualInventory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Animals.AnimalOnHolding": {
        "type": "object",
        "properties": {
          "endBirthPeriod": {
            "type": "string",
            "description": "Date of latest possible birth date of animal",
            "format": "date-time",
            "nullable": true
          },
          "geneticDamTagNumber": {
            "type": "string",
            "description": "Genetic Dam of animal",
            "nullable": true
          },
          "genderId": {
            "type": "integer",
            "description": "Gender id of animal",
            "format": "int32",
            "nullable": true
          },
          "freezebrand": {
            "type": "integer",
            "description": "Freezebrand on the animal",
            "format": "int32",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "The species id of the animal",
            "format": "int32"
          },
          "breedName": {
            "type": "string",
            "description": "Breed name of animal",
            "nullable": true
          },
          "breedId": {
            "type": "integer",
            "description": "Breed id of animal",
            "format": "int32",
            "nullable": true
          },
          "genderSpeciesName": {
            "type": "string",
            "description": "Gender by species name for animal",
            "nullable": true
          },
          "damTagNumber": {
            "type": "string",
            "description": "Birth dam of animal",
            "nullable": true
          },
          "beginBirthPeriod": {
            "type": "string",
            "description": "Date of earliest possible birth date of animal",
            "format": "date-time",
            "nullable": true
          },
          "rfid": {
            "type": "string",
            "description": "Radio Frequency Identifier (RFID) / Electronic Identification number (EID) of tag",
            "nullable": true
          },
          "holding": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "isKilled": {
            "type": "boolean",
            "description": "Indication if the animal has died subsequently."
          },
          "tagNumber": {
            "type": "string",
            "description": "Official visual tag number",
            "nullable": true
          },
          "wasEmbryoTransfer": {
            "type": "boolean",
            "description": "Was embryo transferred from genetic dam to birth dam",
            "nullable": true
          },
          "sireTagNumber": {
            "type": "string",
            "description": "Sire of animal",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents an Animal on a holding"
      },
      "CLAOData.Models.MetFCIWithdrawalPeriodListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.MetFCIWithdrawalPeriod"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ProcessingFlagListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ProcessingFlag"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingRegister.HoldingRegisterProductionType": {
        "type": "object",
        "properties": {
          "productionType": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.ProductionType"
          },
          "holdingRegisterId": {
            "type": "string",
            "description": "The id of the holding register to which the production type is linked.</br>Entity id for holdingRegister to be specified for the POST/PUT supported methods.",
            "nullable": true
          },
          "productionTypeId": {
            "type": "integer",
            "description": "The id of the production type linked to the holding register.</br>Entity id for productionType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "holdingRegister": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingRegister"
          }
        },
        "additionalProperties": false,
        "description": "A production type for a holding register."
      },
      "CLAOData.Models.Animals.AnimalDetail": {
        "required": [
          "tagNumber"
        ],
        "type": "object",
        "properties": {
          "rfid": {
            "maxLength": 16,
            "pattern": "^[A-Za-z0-9_\\. ]*$",
            "type": "string",
            "description": "Radio Frequency Identifier (RFID) / Electronic Identification number (EID) of tag",
            "nullable": true
          },
          "progenies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalProgeny"
            },
            "nullable": true
          },
          "breedId": {
            "type": "integer",
            "description": "Breed id of animal</br>Entity id for breed to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "isLT": {
            "type": "boolean",
            "description": "Whether the animal is lifetime traceable in the system.\r\n            \r\nLifetime traceability status is an indication if the animal has a complete history of movements with no gaps."
          },
          "locationHistoryList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalLocationHistory"
            },
            "nullable": true
          },
          "genderId": {
            "type": "integer",
            "description": "Gender id of animal",
            "format": "int32",
            "nullable": true
          },
          "animalState": {
            "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalState"
          },
          "death": {
            "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalDeath"
          },
          "tagReplacements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalTagReplacement"
            },
            "nullable": true
          },
          "wasEmbryoTransfer": {
            "type": "boolean",
            "description": "Was embryo transferred from genetic dam to birth dam",
            "nullable": true
          },
          "tagNumber": {
            "maxLength": 16,
            "pattern": "^[A-Za-z0-9_\\. ]*$",
            "type": "string",
            "description": "Official visual tag number"
          },
          "systemDateApplied": {
            "type": "string",
            "description": "Date the system applied the tag to an animal.  \r\nIf this was due to user recording tag application / birth then it will equal 'date applied'.  \r\nIf the first time the system saw the tag being used was in another context like a movement then this will equal the first movement date. \r\nIf the tag hasn't been used/applied to an animal yet, this will be null.",
            "format": "date-time",
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "description": "System generated identifier for an animal. It is part of a composite key together with `speciesId` that uniquely identifies an animal details.",
            "format": "int32"
          },
          "movements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalMovement"
            },
            "nullable": true
          },
          "geneticDamTagNumber": {
            "maxLength": 16,
            "pattern": "^[A-Za-z0-9_\\. ]*$",
            "type": "string",
            "description": "Genetic Dam of animal",
            "nullable": true
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "endBirthPeriod": {
            "type": "string",
            "description": "Date of latest possible birth date",
            "format": "date-time",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "The species id of the animal</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "damTagNumber": {
            "maxLength": 16,
            "pattern": "^[A-Za-z0-9_\\. ]*$",
            "type": "string",
            "description": "Birth dam of animal",
            "nullable": true
          },
          "breed": {
            "$ref": "#/components/schemas/CLAOData.Models.Breed"
          },
          "sireTagNumber": {
            "maxLength": 16,
            "pattern": "^[A-Za-z0-9_\\. ]*$",
            "type": "string",
            "description": "Sire of animal",
            "nullable": true
          },
          "beginBirthPeriod": {
            "type": "string",
            "description": "Date of earliest possible birth date",
            "format": "date-time",
            "nullable": true
          },
          "genderSpecies": {
            "$ref": "#/components/schemas/CLAOData.Models.AnimalDetailsGenderSpecies"
          },
          "despatchDate": {
            "type": "string",
            "description": "Date when tag was issued by manufacturer.",
            "format": "date-time"
          },
          "programStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalProgramStatus"
            },
            "nullable": true
          },
          "freezebrand": {
            "type": "integer",
            "description": "Freezebrand on the animal",
            "format": "int32",
            "nullable": true
          },
          "dateApplied": {
            "type": "string",
            "description": "Date user recorded tag as being applied to animal. \r\n            \r\nThis can maybe null as user may have not recorded the tag application / birth.",
            "format": "date-time",
            "nullable": true
          },
          "lt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalLT"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents an Animal"
      },
      "CLAOData.Models.SightingMove.SightingMove": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.SightingMove.SightingMoveModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "A Sighting is carried out by users such as animal health officer or local authority officer generally as part of an inspection when an animal is recognised as not residing on the holding that they are currently recorded against."
      },
      "V1DeleteAnnualInventoryRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.Admin.Program.ProgramStatusDisclosureRuleListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatusDisclosureRule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ApprovedMovement.ApprovedMovementProcessingFlag": {
        "type": "object",
        "properties": {
          "processingFlag": {
            "$ref": "#/components/schemas/CLAOData.Models.ProcessingFlag"
          },
          "processingFlagId": {
            "type": "integer",
            "description": "</br>Entity id for processingFlag to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "approvedMovementRecordedBy": {
            "type": "string",
            "description": "Indicates whether the 'Departure' or 'Destination' holding has either recorded the movement, or reviewed and accepted the movement.",
            "nullable": true
          },
          "approvedMovementId": {
            "type": "integer",
            "description": "</br>Entity id for approvedMovement to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "approvedMovement": {
            "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovement"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.InterfaceListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Interface"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingDisable.Holding": {
        "type": "object",
        "properties": {
          "holdingId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingRegister.RunningTotalItem": {
        "type": "object",
        "properties": {
          "gender": {
            "type": "string",
            "description": "Gender of this group of animals",
            "nullable": true
          },
          "runningTotal": {
            "type": "integer",
            "description": "Running Total for this gender after this request has occurred.",
            "format": "int32",
            "nullable": true
          },
          "totalIndividual": {
            "type": "integer",
            "description": "Total number of Individual animals (devices) added or removed in this request",
            "format": "int32",
            "nullable": true
          },
          "totalBatch": {
            "type": "integer",
            "description": "Total number of Batch animals added or removed in this request",
            "format": "int32",
            "nullable": true
          },
          "displayDescription": {
            "type": "string",
            "description": "Description of the change in animals made by this request.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a gender grouping of animals changed as part of the event/request"
      },
      "CLAOData.Models.Admin.DeviceAttributes.ReadSchemaAttribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "deviceAttributeReadSchema": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.DeviceAttributeReadSchema"
          },
          "attribute": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.Attribute"
          },
          "deviceAttributeReadSchemaId": {
            "type": "integer",
            "description": "</br>Entity id for deviceAttributeReadSchema to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "attributeId": {
            "type": "integer",
            "description": "</br>Entity id for attribute to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Links DeviceAttributeReadSchemas to Attributes in a many:many relationship."
      },
      "CLAOData.Models.Interface": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "methodName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of a interface"
      },
      "CLAOData.Models.Transfer.TransporterTypeListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Transfer.TransporterType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Animals.AnimalDeath": {
        "type": "object",
        "properties": {
          "killId": {
            "type": "integer",
            "description": "System generated identifier for an animal death.",
            "format": "int64"
          },
          "isOnFarmKill": {
            "type": "boolean",
            "description": "Whether the animal was killed on a farm."
          },
          "killHolding": {
            "type": "string",
            "description": "The holding CPH on which the death occurred.",
            "nullable": true
          },
          "deathReason": {
            "$ref": "#/components/schemas/CLAOData.Models.DeathReason.DeathReason"
          },
          "comment": {
            "type": "string",
            "description": "Any comment associated with the request that registered the death.",
            "nullable": true
          },
          "approvedDisposalRoute": {
            "type": "string",
            "description": "The approved disposal route used to dispose of the dead animal.",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "The species id of the animal.",
            "format": "int32"
          },
          "requestId": {
            "type": "integer",
            "description": "The request that recorded the death.",
            "format": "int32"
          },
          "deathReasonId": {
            "type": "integer",
            "description": "The id of the death reason.</br>Entity id for deathReason to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "disposalDate": {
            "type": "string",
            "description": "The date when the dead animal was disposed of.",
            "format": "date-time",
            "nullable": true
          },
          "killDate": {
            "type": "string",
            "description": "The date when the death occurred.",
            "format": "date-time"
          },
          "animal": {
            "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalDetail"
          },
          "deathReasonOther": {
            "type": "string",
            "description": "Any other recorded death reason.",
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "description": "System generated identifier for an animal.",
            "format": "int32",
            "nullable": true
          },
          "disposalHolding": {
            "type": "string",
            "description": "The holding CPH on which the disposal of the dead animal occurred.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1OnFarmKillRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.BulkImports.Movements.BulkAddMovement": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.BulkImports.Movements.BulkAddMovementModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.DeviceAttributes.AttributeListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.Attribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MovementDocumentValidation.Default.ValidateMovementDocumentParameters": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.MovementDocumentValidation.ValidationRequest"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Kill.Body": {
        "required": [
          "bodyNumber",
          "chainNumber",
          "killDateTime",
          "species"
        ],
        "type": "object",
        "properties": {
          "species": {
            "type": "string",
            "description": "The species name of animal slaughtered \r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint."
          },
          "chainNumber": {
            "type": "integer",
            "description": "The chain number of carcase \r\n* *Necessity*: Required\r\n* *Validation*: Number between 1 and 999999.",
            "format": "int32"
          },
          "batchNumber": {
            "type": "string",
            "description": "If animal was batch identified, the flock / herd number of animal\r\n* *Necessity*: Optional\r\n* *Validation*: String is in the batch number format supported for the species (see API guide for supported batch number formats).",
            "nullable": true
          },
          "rfid": {
            "type": "string",
            "description": "Radio Frequency Identifier (RFID) / Electronic Identification number (EID) of tag\r\n* *Necessity*: Either `tagNumber`, `rfid` or `freezebrand` must be specified\r\n* *Validation*: String containing Rfid in format; decimal, ISO Decimal, Hex or UK WYSIWYG (see API guide for supported Rfid formats)\r\n* If `rfid` and `tagNumber` are both specified they should be equivalent values.",
            "nullable": true
          },
          "killDateTime": {
            "type": "string",
            "description": "Date/time animal was killed\r\n* *Necessity*: Required\r\n* *Validation*: Date must not be in the future.",
            "format": "date-time"
          },
          "consignmentHolding": {
            "type": "string",
            "description": "Holding which the body / animal moved from\r\n* *Necessity*: Optional\r\n* *Validation*: String is in valid holding CPH format (see API guide for supported holding number formats).",
            "nullable": true
          },
          "freezebrand": {
            "type": "string",
            "description": "Freezebrand of tag\r\n* *Necessity*: Either `tagNumber`, `rfid` or `freezebrand` must be specified",
            "nullable": true
          },
          "tagNumber": {
            "type": "string",
            "description": "Official visual tag number\r\n* *Necessity*: Either `tagNumber`, `rfid` or `freezebrand` must be specified\r\n* *Validation*: String is in the tag number format supported for the species  (see API guide for supported tag number formats)\r\n* If `tagNumber` and `rfid` are both specified they should be equivalent values.",
            "nullable": true
          },
          "bodyNumber": {
            "type": "integer",
            "description": "The body number of carcase \r\n* *Necessity*: Required\r\n* *Validation*: Number between 1 and 99999.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.DeviceAttributes.AttributeSchemaModel": {
        "type": "object",
        "properties": {
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "batchAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.BatchAttributeData"
            },
            "description": "Collection of batches with attribute information.\r\n\r\n* *Necessity*: Not required.\r\n* *Validation*: \r\n    * At least one entry is required in either `deviceAttributes` or `batchAttributes`.\r\n    * If batch attributes are included, the attribute package must support batches.",
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "deviceAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.DeviceAttributeData"
            },
            "description": "Collection of devices with attribute information.\r\n\r\n* *Necessity*: Not required.\r\n* *Validation*: \r\n    * At least one entry is required in either `deviceAttributes` or `batchAttributes`.\r\n    * If device attributes are included, the attribute package must support devices.\r\n    * Duplicate devices are not permitted.",
            "nullable": true
          },
          "attributePackageName": {
            "type": "string",
            "description": "The name of the Attribute Package containing the attributes being updated.\r\n\r\n* *Necessity*: Required.\r\n* *Validation*: \r\n    * Must be a valid attribute write package returned from the [DeviceAttributeWriteSchemas](#/DeviceAttributeWriteSchemas) endpoint.\r\n    * Attribute package must support Holding's HoldingType.\r\n    * Attribute package must support the species.\r\n    * User must be permitted to use the attribute package.",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "The species of animals having their attributes updated.\r\n\r\n* *Necessity*: Required.\r\n* *Validation*: Must be a valid species returned from the [species](#/Species) endpoint.",
            "nullable": true
          },
          "holding": {
            "type": "string",
            "description": "The holding where the animals being updated are.\r\n\r\n* *Necessity*: Required.\r\n* *Validation*: User must be associated with holding.",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A request to update attributes of animals."
      },
      "CLAOData.Models.Admin.Program.RecognisedProgramStatus": {
        "required": [
          "recognisedProgramStatusId"
        ],
        "type": "object",
        "properties": {
          "programStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "recognisedProgramStatusId": {
            "type": "integer",
            "description": "Must be a Program Status that exists and is in the same Program as this Program Status.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ReviewHoldingMovement.ReviewHoldingMovement": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.ReviewHoldingMovementModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "Review movement request"
      },
      "CLAOData.Models.DeviceWithDetail": {
        "type": "object",
        "properties": {
          "beginBirthPeriod": {
            "type": "string",
            "description": " Date of earliest possible birth date to apply to animal details. If not specified the existing birth period for animal won't be changed.\r\n* *Necessity*: Optional, required if `endBirthPeriod` is specified\r\n* *Validation*:  Must not be in the future or after the date of the event being recorded. The number of days between `beginBirthPeriod` and `endBirthPeriod` must less then 1 day for species cattle or else 31 days for other species",
            "format": "date-time",
            "nullable": true
          },
          "breed": {
            "type": "string",
            "description": " Breed name of breed to apply to animal details. If not specified the existing breed for animal won't be changed\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits breed name values returned by [Breeds](#Breeds) endpoint for species",
            "nullable": true
          },
          "device": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "gender": {
            "type": "string",
            "description": "GenderName Or GenderSpecieName to apply to animal details. If not specified the existing gender for animal won't be changed.\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits gender species name values returned by [GenderSpecies](#GenderSpecies) endpoint for species OR Only permits gender name values returned by [Genders](#Genders) endpoint",
            "nullable": true
          },
          "endBirthPeriod": {
            "type": "string",
            "description": " Date of latest possible birth date to apply to animal details. If not specified the existing birth period for animal won't be changed.\r\n* *Necessity*: Optional, required if `beginBirthPeriod` is specified\r\n* *Validation*:  Must not be in the future or after the date of the event being recorded. The number of days between `beginBirthPeriod` and `endBirthPeriod` must less then 1 day for species cattle or else 31 days for other species",
            "format": "date-time",
            "nullable": true
          },
          "mgtTag": {
            "$ref": "#/components/schemas/CLAOData.Models.ManagementIdentifier"
          }
        },
        "additionalProperties": false,
        "description": "A device along with animal details to set or update.\r\n* `device` must be specified and contain a valid `tagNumber`, `rfid` or `freezebrand`."
      },
      "CLAOData.Models.AnimalDetailsMaintenance.AnimalDetailsMaintenance": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.AnimalDetailsMaintenance.AnimalDetailsMaintenanceModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "Animal Details Maintenance request"
      },
      "CLAOData.Models.RequestTypeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the request type.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ConfirmWithEditPreMovement.ConfirmWithEditPreMovementListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ConfirmWithEditPreMovement.ConfirmWithEditPreMovement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.PaperMovement.PaperMovement": {
        "type": "object",
        "properties": {
          "documentSource": {
            "maxLength": 50,
            "type": "string",
            "description": "The origin of the movement document e.g. Keeper\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Must be a non-empty value",
            "nullable": true,
            "example": "Keeper"
          },
          "movementDocument": {
            "$ref": "#/components/schemas/CLAOData.Models.MovementDocumentValidation.MovementDocument"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.PaperMovement.PaperMovementError"
            },
            "description": "Errors that were found when validating or processing the paper movement\r\n* *Necessity*: Should not be populated when POSTing or PUTing",
            "nullable": true
          },
          "scannedDocumentId": {
            "maxLength": 15,
            "type": "string",
            "description": "Identifier of the scanned document id from the back office system\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Must be a non-empty value and existing paper document must not exist with same id.",
            "nullable": true
          },
          "documentSourceFormat": {
            "maxLength": 50,
            "type": "string",
            "description": "The format of the original document that this request represents e.g. Paper\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Must be a non-empty value",
            "nullable": true,
            "example": "Paper"
          },
          "status": {
            "$ref": "#/components/schemas/CLAOData.Models.PaperMovement.PaperMovementStatus"
          },
          "receivedDate": {
            "type": "string",
            "description": "The date and time at which the original document was received\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Value must be supplied\r\n  * Value may not be in the future",
            "format": "date-time"
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.PaperMovement.PaperMovementProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "movementGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.PaperMovement.MovementGroup"
            },
            "description": "The groups of animals included in this movement",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "The species of animals moved in the movement document\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Must be a non-empty value and only permits species name values returned by [Species](#Species) endpoint",
            "nullable": true,
            "example": "Sheep"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.PaperMovement.Note"
            },
            "description": "A collection of notes associated with the paper movement\r\n* *Necessity*: Optional",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.PaperMovement.PaperMovementWarning"
            },
            "description": "Warnings that were found when validating or processing the paper movement\r\n* *Necessity*: Should not be populated when POSTing or PUTing",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Model representing a paper movement\r\n* `MovementDocument` - Movement Document details\r\n  * *Necessity*: Required"
      },
      "V1ExtendedDeviceApplicationRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.KillData.BodyKillData": {
        "required": [
          "bodyNumber",
          "chainNumber",
          "killDateTime",
          "species"
        ],
        "type": "object",
        "properties": {
          "trimming": {
            "type": "number",
            "description": "Trimming fee\r\n* *Necessity*: Optional\r\n* *Validation*: Decimal number between 0 and 100.00.",
            "format": "double",
            "nullable": true
          },
          "liveWeight": {
            "type": "number",
            "description": "Live weight of body\r\n* *Necessity*: Optional\r\n* *Validation*: Decimal number between 0 and 2000.00.",
            "format": "double",
            "nullable": true
          },
          "rfid": {
            "type": "string",
            "description": "Radio Frequency Identifier (RFID) / Electronic Identification number (EID) of tag\r\n* *Necessity*: Either `tagNumber`, `rfid` or `freezebrand` must be specified\r\n* *Validation*: String containing Rfid in format; decimal, ISO Decimal, Hex or UK WYSIWYG (see API guide for supported Rfid formats)\r\n* If `rfid` and `tagNumber` are both specified they should be equivalent values.",
            "nullable": true
          },
          "coldWeight": {
            "type": "number",
            "description": "Cold weight of body\r\n* *Necessity*: Optional\r\n* *Validation*: Decimal number between 0 and 2000.00.",
            "format": "double",
            "nullable": true
          },
          "meatInspection": {
            "type": "number",
            "description": "Meat inspection fee\r\n* *Necessity*: Optional\r\n* *Validation*: Decimal number between 0 and 100.00.",
            "format": "double",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "The species name of animal slaughtered \r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint."
          },
          "commission": {
            "type": "number",
            "description": "Commission fee\r\n* *Necessity*: Optional\r\n* *Validation*: Decimal number between 0 and 100.00.",
            "format": "double",
            "nullable": true
          },
          "rebateWeight": {
            "type": "number",
            "description": "Carcase rebate weight\r\n* *Necessity*: Optional\r\n* *Validation*: Decimal number between 0 and 100.00.",
            "format": "double",
            "nullable": true
          },
          "slaughterLevy": {
            "type": "number",
            "description": "Slaughter levy\r\n* *Necessity*: Optional\r\n* *Validation*: Decimal number between 0 and 100.00.",
            "format": "double",
            "nullable": true
          },
          "tagNumber": {
            "type": "string",
            "description": "Official visual tag number\r\n* *Necessity*: Either `tagNumber`, `rfid` or `freezebrand` must be specified\r\n* *Validation*: String is in the tag number format supported for the species  (see API guide for supported tag number formats)\r\n* If `tagNumber` and `rfid` are both specified they should be equivalent values.",
            "nullable": true
          },
          "bodyNumber": {
            "type": "integer",
            "description": "The body number of carcase \r\n* *Necessity*: Required\r\n* *Validation*: Number between 1 and 99999.",
            "format": "int32"
          },
          "killCategory": {
            "type": "string",
            "description": "Kill category of animal slaughtered, commonly used categories: NSL (New Season Lamb), OSL (Old Season Lamb), MS (Mature Sheep)\r\n* *Necessity*: Optional\r\n* *Validation*: String maximum length 20.",
            "nullable": true
          },
          "meatAssuranceScheme": {
            "type": "string",
            "description": "Meet assurance scheme animal satisfies\r\n* *Necessity*: Optional\r\n* *Validation*: String maximum length 20.",
            "nullable": true
          },
          "freezebrand": {
            "type": "string",
            "description": "Freezebrand of tag\r\n* *Necessity*: Either `tagNumber`, `rfid` or `freezebrand` must be specified",
            "nullable": true
          },
          "batchNumber": {
            "type": "string",
            "description": "If animal was batch identified, the flock / herd number of animal\r\n* *Necessity*: Optional\r\n* *Validation*: String is in the batch number format supported for the species (see API guide for supported batch number formats).",
            "nullable": true
          },
          "mlcLevy": {
            "type": "number",
            "description": "MLC (Meat & Livestock Commission) levy\r\n* *Necessity*: Optional\r\n* *Validation*: Decimal number between 0 and 100.00.",
            "format": "double",
            "nullable": true
          },
          "confClass": {
            "type": "string",
            "description": "Body conformation classification\r\n* *Necessity*: Optional\r\n* *Validation*: String maximum length 5.",
            "nullable": true
          },
          "otherDeductions": {
            "type": "number",
            "description": "Any other deductions\r\n* *Necessity*: Optional\r\n* *Validation*: Decimal number between 0 and 100.00.",
            "format": "double",
            "nullable": true
          },
          "haulage": {
            "type": "number",
            "description": "Haulage fee\r\n* *Necessity*: Optional\r\n* *Validation*: Decimal number between 0 and 100.00.",
            "format": "double",
            "nullable": true
          },
          "cleanDisinfect": {
            "type": "number",
            "description": "Cleaning and disinfect fee\r\n* *Necessity*: Optional\r\n* *Validation*: Decimal number between 0 and 100.00.",
            "format": "double",
            "nullable": true
          },
          "chainNumber": {
            "type": "integer",
            "description": "The chain number of carcase \r\n* *Necessity*: Required\r\n* *Validation*: Number between 1 and 999999.",
            "format": "int32"
          },
          "consignmentHolding": {
            "type": "string",
            "description": "Holding which the body / animal moved from\r\n* *Necessity*: Optional\r\n* *Validation*: String is in valid holding CPH format (see API guide for supported holding number formats).",
            "nullable": true
          },
          "killDateTime": {
            "type": "string",
            "description": "Date/time animal was killed\r\n* *Necessity*: Required\r\n* *Validation*: Date must not be in the future.",
            "format": "date-time"
          },
          "vatAmount": {
            "type": "number",
            "description": "VAT cost\r\n* *Necessity*: Optional\r\n* *Validation*: Decimal number between 0 and 1000.00.",
            "format": "double",
            "nullable": true
          },
          "carcasePrice": {
            "type": "number",
            "description": "Carcase price before deductions and fees\r\n* *Necessity*: Optional\r\n* *Validation*: Decimal number between 0 and 1000.00.",
            "format": "double",
            "nullable": true
          },
          "fatClass": {
            "type": "string",
            "description": "Body fat classification\r\n* *Necessity*: Optional\r\n* *Validation*: String maximum length 5.",
            "nullable": true
          },
          "classification": {
            "type": "number",
            "description": "Classification fee\r\n* *Necessity*: Optional\r\n* *Validation*: Decimal number between 0 and 100.00.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.SightingMove.SightingMoveModel": {
        "type": "object",
        "properties": {
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sightingDate": {
            "type": "string",
            "description": "Date animals were sighted.\r\n* *Necessity*: Required\r\n* *Validation*: Must not be in the future.",
            "format": "date-time"
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Device"
            },
            "description": "Collection of individual identified animals that were sighted.\r\n* *Necessity*: Required\r\n* *Validation*: Must contain one or more items.",
            "nullable": true
          },
          "holding": {
            "type": "string",
            "description": "Identifier of holding where the animals were sighted.\r\n* *Necessity*: Required\r\n* *Validation*: String is in valid holding CPH or abattoir MHS number format (see API guide for supported holding number formats).",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "The species name of animals that were sighted.\r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sighting move request content.\r\n\r\nThe devices collection must have entries."
      },
      "CLAOData.Models.Admin.Program.StandstillConfigExemptHoldingLinkTypeListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.StandstillConfigExemptHoldingLinkType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.AnnualInventory.AddAnnualInventoryModel": {
        "type": "object",
        "properties": {
          "annualInventorySpecies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.AnnualInventory.AnnualInventorySpecies"
            },
            "description": "List of Species recorded in the annual inventory",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ApprovedMovement.ApprovedMovement": {
        "type": "object",
        "properties": {
          "destinationHolding": {
            "type": "string",
            "description": "The holding the animals were moved to",
            "nullable": true
          },
          "approvedMovementProcessingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementProcessingFlag"
            },
            "description": "Flags that will indicate ApprovedMovement processing state.",
            "nullable": true
          },
          "movementDocument": {
            "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementDocument"
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementDevice"
            },
            "description": "Individual devices that were moved.",
            "nullable": true
          },
          "sourceHolding": {
            "type": "string",
            "description": "The holding the animals were moved from",
            "nullable": true
          },
          "recordedBy": {
            "type": "string",
            "description": "Indicates whether the 'Departure' or 'Destination' holding has either recorded the movement, or reviewed and accepted the movement.",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "Species this movement concerns</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "movementDocumentId": {
            "type": "integer",
            "description": "</br>Entity id for movementDocument to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "transferDate": {
            "type": "string",
            "description": "Date the animals were moved.",
            "format": "date-time"
          },
          "batches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementBatch"
            },
            "description": "Batches of animals that were moved.",
            "nullable": true
          },
          "animalTotal": {
            "type": "integer",
            "description": "The total number of animals in the movement.\r\n\r\nThis includes both batches and individual devices.",
            "format": "int32"
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "transportHaulierName": {
            "type": "string",
            "description": "Name of the haulier that transported the animals.",
            "nullable": true
          },
          "transportVehicleRegistrationNo": {
            "type": "string",
            "description": "Registration number of the vehicle that transported the animals.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ReplacementReasonListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ReplacementReason"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.HoldingLinkTypeListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.HoldingLinkType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.TagUpload.DeviceInfo": {
        "type": "object",
        "properties": {
          "rfid": {
            "type": "string",
            "description": "RFID",
            "nullable": true
          },
          "retagCount": {
            "type": "integer",
            "description": "Retag Count - For replacement tags",
            "format": "int32"
          },
          "tagNumber": {
            "type": "string",
            "description": "Tag Number",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Device Info structure contains information provided by Device Manufacturers."
      },
      "CLAOData.Models.OnFarmKill.OnFarmKill": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.OnFarmKill.OnFarmKillModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Infrastructure.ErrorHandling.CLAErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAError"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.MovementDocumentValidation.ValidationResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Errors that were found when validating the movement document.",
            "nullable": true
          },
          "information": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Informative messages found when validating the movement document.",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Warnings that were found when validating the movement document.",
            "nullable": true
          },
          "movementId": {
            "type": "string",
            "description": "The movementId from the validation request that this is in response to.",
            "nullable": true
          },
          "documentId": {
            "type": "string",
            "description": "The documentId from the validation request that this is in response to.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The response from a request to validate a movement document."
      },
      "V1WithdrawPreMovementRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.RequestListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Request"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1ConfirmWithEditPreMovementRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "V1UndoRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.StockType": {
        "type": "object",
        "properties": {
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "name": {
            "type": "string",
            "description": "The name of the stock type e.g. 'Ewes'",
            "nullable": true,
            "example": "Ewes"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "speciesId": {
            "type": "integer",
            "description": "The id of the species of which this StockType is a subset.</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true,
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": "A type of animal stock, e.g. 'Total Sheep' or 'Ewes'"
      },
      "CLAOData.Models.HoldingPartyModify.HoldingModify": {
        "type": "object",
        "properties": {
          "party": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingPartyModify.Party"
          },
          "holdingId": {
            "type": "integer",
            "description": "holdingId\r\n* *Necessity*: \r\n* *Validation*:",
            "format": "int32"
          },
          "keeperAddressPk": {
            "type": "string",
            "description": "keeperAddressPk\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "holding"
      },
      "V1ReviewHoldingMovementRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.AnnualInventory.AnnualInventoryStock": {
        "type": "object",
        "properties": {
          "stockType": {
            "type": "string",
            "description": "Stock type name\r\n* *Necessity*: Required\r\n* *Validation*: Must be a valid Stock Type returned by [StockTypes](#StockTypes) that is also supported for the holding's annual inventory and Species as determined by [GetAnnualInventoryStockTypeConfig](#HoldingRegisterFunctions/get_v1_GetAnnualInventoryStockTypeConfig_holding__holding__species__species__)",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "Total of animals for stock type\r\n* *Necessity*: Required\r\n* *Validation*: Cannot be negative",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1Async-requestId-WarningsGet200ApplicationJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Microsoft.OData.ODataErrorDetail"
        }
      },
      "CLAOData.Models.KillData.KillDetailsModel": {
        "required": [
          "abattoirHolding"
        ],
        "type": "object",
        "properties": {
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "abattoirHolding": {
            "type": "string",
            "description": " Holding at which the animals were slaughtered at\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH format (see API guide for supported holding number formats).\r\n  * Holding type must be an abattoir or knackery.\r\n  * For most user roles authenticated user must be associated with the holding."
          },
          "bodies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.KillData.BodyKillData"
            },
            "description": "Collection of bodies killed\r\n* *Necessity*: Required\r\n* *Validation*: Must contain one or more items",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Kill request content"
      },
      "CLAOData.Models.Transfer.DocumentType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.WithdrawPreMovement.WithdrawPreMovementModel": {
        "type": "object",
        "properties": {
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "preMovementRequestId": {
            "type": "integer",
            "description": "The original request id for the creation of the pre-movement\r\n* *Necessity*: Optional. Either `preMovementRequestId` must be specified or `movementDocumentRef` must be specified. If both `preMovementRequestId` and `movementDocumentRef` are specified, `preMovementRequestId` takes precedence and `movementDocumentRef` is not used.\r\n* *Validation*: Only permits request id values returned by [PreMovementRequests](#PreMovementRequests) endpoint",
            "format": "int32",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "movementDocumentRef": {
            "type": "string",
            "description": "The movement document reference of the pre-movement.\r\n* *Necessity*: Optional. Either `preMovementRequestId` must be specified or `movementDocumentRef` must be specified. If both `preMovementRequestId` and `movementDocumentRef` are specified, `preMovementRequestId` takes precedence and `movementDocumentRef` is not used.\r\n* *Validation*: Only permits movement document reference values returned by [PendingMovementDetails](#PendingMovementDetails) endpoint in the `movementDocument.movementDocumentRef` property.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ConfirmWithEditPreMovement.ConfirmWithEditPreMovementModel": {
        "required": [
          "animalCount",
          "destinationHolding",
          "movementGroups",
          "sourceHolding",
          "transferDate",
          "userHolding"
        ],
        "type": "object",
        "properties": {
          "movementGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Transfer.MovementGroup"
            },
            "description": "Collection of groups of animals moved\r\n* *Necessity*: Required\r\n* *Validation*: Collection must contain one or more items"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "saleDate": {
            "type": "string",
            "description": "Sale date\r\n* *Necessity*: Only should be specified if a market holding type is recording an off movement\r\n* *Validation*:\r\n  * Must be less then or equal to `transferDate`\r\n  * Must be empty if isn't a market recording an off movement",
            "format": "date-time",
            "nullable": true
          },
          "deviceApplication": {
            "$ref": "#/components/schemas/CLAOData.Models.DeviceApplicationDetails"
          },
          "transferDate": {
            "type": "string",
            "description": "Date/time of the movement.\r\n* *Necessity*: Required",
            "format": "date-time"
          },
          "transportHaulierName": {
            "type": "string",
            "description": "Name of person responsible for moving animals\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 50 characters",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "transportVehicleRegistrationNo": {
            "type": "string",
            "description": "Registration number of vehicle being used to transport animals\r\n* *Necessity*: Optional\r\n* *Validation*: If specified must be between 2 and 10 upper or lower case letters or numbers",
            "nullable": true
          },
          "userHolding": {
            "type": "string",
            "description": "A holding associated with the user. It must be equal to `destinationHolding` for movements ON or `sourceHolding` for movements OFF.\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH format (see API guide for supported holding number formats).\r\n  * If it is On movement or in-business movement the `userHolding` should equal `destinationHolding`\r\n  * If it is Off movement the `userHolding` should equal `sourceHolding`\r\n  * For most user roles authenticated user must be associated with the `userHolding`."
          },
          "saleId": {
            "type": "string",
            "description": "Sale identifier, the markets internal identifier for the sale\r\n* *Necessity*: Only should be specified if a market holding type is recording an off movement\r\n* *Validation*:\r\n  * Maximum length 32 characters\r\n  * Must be empty if isn't a market recording an off movement",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "The species name of animals moved\r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint",
            "nullable": true
          },
          "destinationHolding": {
            "type": "string",
            "description": "Destination holding animals moved to\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH or abattoir MHS number format (see API guide for supported holding number formats).\r\n  * If destination holding isn't known or animal is lost use the value `UNKNOWN`.\r\n  * For most user roles authenticated user must be associated with either the `sourceHolding` or `destinationHolding`."
          },
          "sourceHolding": {
            "type": "string",
            "description": "Departure holding animals moved from\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH format (see API guide for supported holding number formats).\r\n  * If the departure holding isn't known or animal is found use the value `UNKNOWN`\r\n  * For most user roles authenticated user must be associated with either the `sourceHolding` or `destinationHolding`."
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "preMovementRequestId": {
            "type": "integer",
            "description": "The original request id for the creation of the pre-movement\r\n* *Necessity*: Optional. Either `preMovementRequestId` must be specified or `documentId` must be specified.\r\n* *Validation*: Only permits request id values returned by [PreMovementRequests](#PreMovementRequests) endpoint",
            "format": "int32",
            "nullable": true
          },
          "movementDocument": {
            "$ref": "#/components/schemas/CLAOData.Models.Transfer.MovementDocument"
          },
          "animalCount": {
            "type": "integer",
            "description": "Total individual and batch identified animals moved\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Value is between 1 and 99999\r\n  * Value equal the count of `movementGroups.devices` plus sum of `movementGroups.batches.animalTotal`",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.UpdateHoldingStatus.HoldingStatus": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean",
            "description": "Indication if status is being set, `true` if status is to be set.\r\n* *Necessity*: Optional\r\n* *Validation*: Either `set` or `clear` should equal `true`, but both should not have the same value."
          },
          "holding": {
            "type": "string",
            "description": "Identifier of holding to have status set or cleared.\r\n* *Necessity*: Required\r\n* *Validation*: String is in valid holding CPH or abattoir MHS number format (see API guide for supported holding number formats).",
            "nullable": true
          },
          "clear": {
            "type": "boolean",
            "description": "Indication if status is being cleared, `true` if status is to be cleared.\r\n* *Necessity*: Optional\r\n* *Validation*: Either `clear` or `set` should equal `true`, but both should not have the same value."
          }
        },
        "additionalProperties": false,
        "description": "Holding status information to be set or clear."
      },
      "CLAOData.Models.ConfirmPreMovement.ConfirmPreMovementListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ConfirmPreMovement.ConfirmPreMovement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingDisable.HoldingDisableModel": {
        "type": "object",
        "properties": {
          "holdings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingDisable.Holding"
            },
            "description": "Holdings to disable\r\n* *Necessity*: Required\r\n* *Validation*:",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.DeviceAttributes.DeviceAttributeForReport": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.DeviceAttributeValueRecord"
            },
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.AttributeDataType"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of a single attribute returned from a call to\r\n[QueryDeviceAttributes](#/DeviceAttributes/get_v1_QueryDeviceAttributes_readPackageName__readPackageName__holdingCPH__holdingCPH__startDate__startDate__endDate__endDate__species__species__deviceIdentifiers___deviceIdentifiers___)."
      },
      "CLAOData.Models.SystemTag.SystemTagApplication": {
        "type": "object",
        "properties": {
          "systemAppliedTagNumber": {
            "type": "string",
            "nullable": true
          },
          "currentRfid": {
            "type": "string",
            "nullable": true
          },
          "causedByRequestId": {
            "type": "integer",
            "format": "int32"
          },
          "systemAppliedRfid": {
            "type": "string",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "Species this system tag applies to.</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "causedByRequestType": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestTypeModel"
          },
          "currentTagNumber": {
            "type": "string",
            "nullable": true
          },
          "currentFreezebrand": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "systemAppliedDate": {
            "type": "string",
            "format": "date-time"
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "systemAppliedFreezebrand": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "causedByRequestTypeId": {
            "type": "integer",
            "description": "</br>Entity id for causedByRequestType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "systemAppliedAtHolding": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of a system tag application"
      },
      "CLAOData.Models.NotAppliedTag.NotAppliedTagListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.NotAppliedTag.NotAppliedTag"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.PaperMovement.Note": {
        "required": [
          "noteDate",
          "notes"
        ],
        "type": "object",
        "properties": {
          "notes": {
            "type": "string",
            "description": "Text content of the note\r\n* *Necessity*: Required"
          },
          "noteDate": {
            "type": "string",
            "description": "Date the note was taken\r\n* *Necessity*: Required\r\n * *Validation*: Validate date/time that is not in the future",
            "format": "date-time"
          },
          "user": {
            "type": "string",
            "description": "Identity of the user who recorded the note\r\n* *Necessity*: Should not be populated when POSTing or PUTing",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A note associated with a paper movement"
      },
      "CLAOData.Models.HoldingRegister.RunningTotalRequestDetailData": {
        "type": "object",
        "properties": {
          "attributeCode": {
            "type": "string",
            "description": "Attribute code.\r\n\r\nIf the submitted 'eventCode' parameter equals ON_MOVE or OFF_MOVE, the following value is returned:\r\n * FromPic \ufffd `displayValue` contains movement source holding\r\n * ToPic \ufffd `displayValue` contains movement destination holding\r\n * MoveDate \ufffd `displayValue` contains movement from holding\r\n * EventCode \ufffd `displayValue` contains the event code\r\n \r\nIf the submitted 'eventCode' parameter equals KILL or KILL_UNTAGGED, the following value is returned:\r\n* KillDate \ufffd displayValue contains death date\r\n* DeathReason \ufffd displayValue contains death reason\r\n* EventCode \ufffd displayValue contains the event code\r\n\r\nFor all other `eventCode` values, the following is returned:\r\n* EventCode \ufffd displayValue contains the event code",
            "nullable": true
          },
          "displayValue": {
            "type": "string",
            "description": "Value of attribute.\r\n\r\nThis is dependent on the `attributeCode`",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingProgramStatus.HoldingProgramStatusListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingProgramStatus.HoldingProgramStatus"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.DeviceAttributes.AttributeSchema": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.AttributeSchemaModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BusinessRulesConfig.RequestTypeValidationRuleListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.BusinessRulesConfig.RequestTypeValidationRule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Transfer.TransporterType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "The short code for the type of transport",
            "nullable": true,
            "example": "DEP"
          },
          "name": {
            "type": "string",
            "description": "The full name of the type of transport",
            "nullable": true,
            "example": "Departure Keeper"
          }
        },
        "additionalProperties": false,
        "description": "A valid type of transport used to transfer animals"
      },
      "CLAOData.Models.SingleError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A more detailed error message.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "The error code for the error.",
            "nullable": true
          },
          "target": {
            "type": "string",
            "description": "If populated, this is the JSON property path to the part of the request content that caused the error.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of a single error."
      },
      "CLAOData.Models.Admin.Program.ProgramRegionListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramRegion"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.OnFarmKill.OnFarmKillListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.OnFarmKill.OnFarmKill"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.AnimalDetailsMaintenance.AnimalDetailsMaintenanceModel": {
        "type": "object",
        "properties": {
          "gender": {
            "type": "string",
            "description": "The gender species name of the animal.\r\n* *Necessity*: Optional.\r\n* *Validation*: Only permits gender species name values returned by [GenderSpecies](#GenderSpecies) endpoint for species. Gender can only be changed to an opposite sex if the animal is not already registered as dam, sire or genetic dam for another animal.",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "wasEmbryoTransfer": {
            "type": "boolean",
            "description": "Was embryo transferred from genetic dam to birth dam\r\n* *Necessity*: Optional\r\n* *Validation*: Value must equal true if `geneticDam` is specified",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "dam": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "geneticDam": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "device": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "mgtTag": {
            "$ref": "#/components/schemas/CLAOData.Models.ManagementIdentifier"
          },
          "species": {
            "type": "string",
            "description": "The animal species\r\n* *Necessity*: Required.\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint",
            "nullable": true
          },
          "endBirthPeriod": {
            "type": "string",
            "description": "Date of latest possible birth date of animal\r\n* *Necessity*: Optional for species sheep, goats and pigs. Required if `beginBirthPeriod` is specified\r\n* *Validation*: Must not be in the future or after the tag was applied to animal. The number of days between `beginBirthPeriod` and `endBirthPeriod` must less then 1 day for species cattle or else 31 days for other species.",
            "format": "date-time",
            "nullable": true
          },
          "dateSet": {
            "type": "string",
            "description": "Date/Time to set the new animal details from. Can only be used by administrators.\r\n* *Necessity*: Optional",
            "format": "date-time",
            "nullable": true
          },
          "sire": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "breed": {
            "type": "string",
            "description": "The breed name of the animal.\r\n* *Necessity*: Required for species Cattle, optional for other species.\r\n* *Validation*: Only permits breed name values returned by [Breeds](#Breeds) endpoint for the species of the animal",
            "nullable": true
          },
          "beginBirthPeriod": {
            "type": "string",
            "description": "Date of earliest possible birth date of animal\r\n* *Necessity*: Optional for species sheep, goats and pigs. Required if `endBirthPeriod` is specified\r\n* *Validation*: Must not be in the future or after the tag was applied to animal. The number of days between `beginBirthPeriod` and `endBirthPeriod` must less then 1 day for species cattle or else 31 days for other species.",
            "format": "date-time",
            "nullable": true
          },
          "genderAppliedFrom": {
            "type": "string",
            "description": "The Date/Time when the gender of the animal became applicable.\r\n* *Necessity*: Optional.\r\n* *Validation*: Must be after the animal was born (`beginBirthPeriod`) and it must not be in the future.",
            "format": "date-time",
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "isBreeding": {
            "type": "boolean",
            "description": "Breeding status\r\n* *Necessity*: Optional",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The animal whose details to update must be specified in `device` property."
      },
      "V1AnimalDetailsMaintenanceRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.Admin.Program.ProgramStatusNotificationHoldingType": {
        "type": "object",
        "properties": {
          "programStatusNotificationId": {
            "type": "integer",
            "format": "int32"
          },
          "holdingType": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingType"
          },
          "holdingTypeId": {
            "type": "integer",
            "description": "</br>Entity id for holdingType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ReplaceDevice.ReplaceDeviceModel": {
        "type": "object",
        "properties": {
          "holding": {
            "type": "string",
            "description": "The Holding where the tag replacement took place.\r\n* *Necessity*: Required\r\n* *Validation*: Must be in valid holding CPH format (see API User Guide for supported holding number formats). For most user roles the authenticated user must be associated with the holding.",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "The species name of animals tagged\r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "replacementDate": {
            "type": "string",
            "description": "Date on which the replacement took place. Time component will be ignored.\r\n* *Necessity*: Required\r\n* *Validation*: Must not be in the future",
            "format": "date-time"
          },
          "comment": {
            "type": "string",
            "description": "Free text comments",
            "nullable": true
          },
          "replacementReason": {
            "type": "string",
            "description": "Reason for the replacement\r\n* *Necessity*: Required\r\n* *Validation*: Only permits replacement reasons returned from the [ReplacementReasons](#ReplacementReasons) endpoint.\r\n    If reason is 'Upgrade' then upgrade must be supported for the species",
            "nullable": true
          },
          "breed": {
            "type": "string",
            "description": "Breed name of animals\r\n* *Necessity*: Must not be set when ReplacementReason is not 'Upgrade'\r\n* *Validation*: Only permits breed name values returned by [Breeds](#Breeds) endpoint for species.",
            "nullable": true
          },
          "replaceItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ReplaceDevice.ReplaceItem"
            },
            "description": "Collection of replacement specifications.\r\n* *Necessity*: Required to have at least one ReplaceItem\r\n* *Validation*: \r\n    * Any batches specified must be valid batches for the specified Species\r\n    * Any devices specified must be valid devices for the specified Species\r\n    * The same device must not be replaced in multiple ReplaceItems\r\n    * The same device must not be used as the replacement in multiple ReplaceItems\r\n    * If ReplacementReason is 'Upgrade' then either DeviceReplaced or BatchReplaced must be specified.",
            "nullable": true
          },
          "dateOfBirthRangeStart": {
            "type": "string",
            "description": "Date of earliest possible birth date of animals being upgraded to individual tags\r\n* *Necessity*: Must not be set when ReplacementReason is not 'Upgrade'\r\n* *Validation*: Must not be in the future or after the `replacementDate`. The number of days between `dateOfBirthRangeStart` and `dateOfBirthRangeEnd` must be less than 31 days",
            "format": "date-time",
            "nullable": true
          },
          "dateOfBirthRangeEnd": {
            "type": "string",
            "description": "Date of latest possible birth date of animals being upgraded to individual tags\r\n* *Necessity*: Must not be set when ReplacementReason is not 'Upgrade'\r\n* *Validation*: Must not be in the future or after the `replacementDate`.  The number of days between `dateOfBirthRangeStart` and `dateOfBirthRangeEnd` must be less than 31 days",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Device": {
        "type": "object",
        "properties": {
          "freezebrand": {
            "type": "string",
            "description": "Freezebrand of tag\r\n* *Necessity*: Either `tagNumber`, `rfid` or `freezebrand` must be specified",
            "nullable": true
          },
          "rfid": {
            "type": "string",
            "description": "Radio Frequency Identifier (RFID) / Electronic Identification number (EID) of tag\r\n* *Necessity*: Either `tagNumber`, `rfid` or `freezebrand` must be specified\r\n* *Validation*: String containing Rfid in format; decimal, ISO Decimal, Hex or UK WYSIWYG (see API guide for supported Rfid formats)\r\n* If `rfid` and `tagNumber` are both specified they should be equivalent values.",
            "nullable": true
          },
          "tagNumber": {
            "type": "string",
            "description": "Official visual tag number\r\n* *Necessity*: Either `tagNumber`, `rfid` or `freezebrand` must be specified\r\n* *Validation*: String is in the tag number format supported for the species  (see API guide for supported tag number formats)\r\n* If `tagNumber` and `rfid` are both specified they should be equivalent values.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BusinessRulesConfig.ProcessingRuleSourceFieldCodeEnum": {
        "enum": [
          "SourceHolding",
          "DestinationHolding",
          "RequestHolding",
          "DisposalHolding",
          "EventDate",
          "DateOfBirth"
        ],
        "type": "string"
      },
      "CLAOData.Models.DeathReason.DeathReasonListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.DeathReason.DeathReason"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1HerdModifyRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.HoldingRegister.HoldingRegister": {
        "type": "object",
        "properties": {
          "holdingRegisterHoldingBatchNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingRegisterHoldingBatchNumber"
            },
            "nullable": true
          },
          "holdingMHS": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingRegisterMHSNumber"
            },
            "description": "Abattoir MHS numbers attached to this Holding Register.",
            "nullable": true
          },
          "holdingTypeId": {
            "type": "integer",
            "description": "Id of the holding type of the holding this Holding Register is for.\r\n\r\nAll available holding types can be fetched from the [holdingTypes](#/HoldingTypes/get_v1_HoldingTypes) endpoint.</br>Entity id for holdingType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "holdingRegisterReplacementUpgrades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingRegisterReplacementUpgrade"
            },
            "nullable": true
          },
          "holdingAnnualInventories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingAnnualInventory"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "The id of the entity.",
            "nullable": true
          },
          "holdingRegisterDeaths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingRegisterDeath"
            },
            "nullable": true
          },
          "holdingRegisterProductionTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingRegisterProductionType"
            },
            "nullable": true
          },
          "holdingType": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingType"
          },
          "holdingRegisterBirths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingRegisterBirth"
            },
            "nullable": true
          },
          "holdingRegisterMovements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingRegisterMovement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Holding register details for a single Holding."
      },
      "CLAOData.Models.Admin.Program.ProgramStatusExemptHoldingType": {
        "type": "object",
        "properties": {
          "holdingType": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingType"
          },
          "programStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "holdingTypeId": {
            "type": "integer",
            "description": "</br>Entity id for holdingType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Microsoft.AspNetCore.Mvc.ProblemDetails": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "CLAOData.Models.PaperMovement.MovementGroup": {
        "type": "object",
        "properties": {
          "batches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.PaperMovement.Batch"
            },
            "description": "The batches of the animals being moved",
            "nullable": true
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.PaperMovement.Device"
            },
            "description": "The tags of individually identified animals being moved\r\n* *Validation*: Devices should be uniue within a movement group and across a collection of movement groups.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A group of animals being moved in a paper movement"
      },
      "CLAOData.Models.BulkImports.Animals.BulkAnimalImportListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.BulkImports.Animals.BulkAnimalImport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingDisable.HoldingDisable": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingDisable.HoldingDisableModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.PreMovement.PreMovementModel": {
        "required": [
          "animalCount",
          "destinationHolding",
          "movementGroups",
          "sourceHolding",
          "transferDate",
          "userHolding"
        ],
        "type": "object",
        "properties": {
          "movementGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Transfer.MovementGroup"
            },
            "description": "Collection of groups of animals moved\r\n* *Necessity*: Required\r\n* *Validation*: Collection must contain one or more items"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "saleDate": {
            "type": "string",
            "description": "Sale date\r\n* *Necessity*: Only should be specified if a market holding type is recording an off movement\r\n* *Validation*:\r\n  * Must be less then or equal to `transferDate`\r\n  * Must be empty if isn't a market recording an off movement",
            "format": "date-time",
            "nullable": true
          },
          "deviceApplication": {
            "$ref": "#/components/schemas/CLAOData.Models.DeviceApplicationDetails"
          },
          "preMovementId": {
            "type": "integer",
            "description": "Not used for PreMovementRequests.",
            "format": "int32",
            "nullable": true
          },
          "transferDate": {
            "type": "string",
            "description": "Date/time of the movement.\r\n* *Necessity*: Required",
            "format": "date-time"
          },
          "transportHaulierName": {
            "type": "string",
            "description": "Name of person responsible for moving animals\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 50 characters",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "transportVehicleRegistrationNo": {
            "type": "string",
            "description": "Registration number of vehicle being used to transport animals\r\n* *Necessity*: Optional\r\n* *Validation*: If specified must be between 2 and 10 upper or lower case letters or numbers",
            "nullable": true
          },
          "userHolding": {
            "type": "string",
            "description": "A holding associated with the user. It must be equal to `destinationHolding` for movements ON or `sourceHolding` for movements OFF.\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH format (see API guide for supported holding number formats).\r\n  * If it is On movement or in-business movement the `userHolding` should equal `destinationHolding`\r\n  * If it is Off movement the `userHolding` should equal `sourceHolding`\r\n  * For most user roles authenticated user must be associated with the `userHolding`."
          },
          "saleId": {
            "type": "string",
            "description": "Sale identifier, the markets internal identifier for the sale\r\n* *Necessity*: Only should be specified if a market holding type is recording an off movement\r\n* *Validation*:\r\n  * Maximum length 32 characters\r\n  * Must be empty if isn't a market recording an off movement",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "The species name of animals moved\r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint",
            "nullable": true
          },
          "destinationHolding": {
            "type": "string",
            "description": "Destination holding animals moved to\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH or abattoir MHS number format (see API guide for supported holding number formats).\r\n  * If destination holding isn't known or animal is lost use the value `UNKNOWN`.\r\n  * For most user roles authenticated user must be associated with either the `sourceHolding` or `destinationHolding`."
          },
          "sourceHolding": {
            "type": "string",
            "description": "Departure holding animals moved from\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH format (see API guide for supported holding number formats).\r\n  * If the departure holding isn't known or animal is found use the value `UNKNOWN`\r\n  * For most user roles authenticated user must be associated with either the `sourceHolding` or `destinationHolding`."
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "movementDocument": {
            "$ref": "#/components/schemas/CLAOData.Models.Transfer.MovementDocument"
          },
          "animalCount": {
            "type": "integer",
            "description": "Total individual and batch identified animals moved\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Value is between 1 and 99999\r\n  * Value equal the count of `movementGroups.devices` plus sum of `movementGroups.batches.animalTotal`",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.SystemTag.SystemTagCreation": {
        "type": "object",
        "properties": {
          "systemCreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "currentRfid": {
            "type": "string",
            "nullable": true
          },
          "systemCreatedAtHolding": {
            "type": "string",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "Species this system tag applies to.</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "causedByRequestType": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestTypeModel"
          },
          "currentTagNumber": {
            "type": "string",
            "nullable": true
          },
          "currentFreezebrand": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "causedByRequestTypeId": {
            "type": "integer",
            "description": "</br>Entity id for causedByRequestType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "causedByRequestId": {
            "type": "integer",
            "format": "int32"
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "systemCreatedRfid": {
            "type": "string",
            "nullable": true
          },
          "systemCreatedTagNumber": {
            "type": "string",
            "nullable": true
          },
          "systemCreatedFreezebrand": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of tags which were system created but not issued by tag manufacturer"
      },
      "CLAOData.Models.SpeciesListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Species"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingDetailsAndPartyModify.Keeper": {
        "type": "object",
        "properties": {
          "county": {
            "type": "string",
            "description": "Address County\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits name values returned by [Counties](#Counties) endpoint",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address line 2\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 128",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "description": "Address property name or street number\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 32",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "description": "Address line 1\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 128",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Person's name prefix\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits name values returned by [Titles](#Titles) endpoint",
            "nullable": true
          },
          "telephoneNumber": {
            "type": "string",
            "description": "Telephone number\r\n* *Necessity*: Optional\r\n* *Validation*:\r\n  * Should only contain numbers and space characters\r\n  * Maximum length 13",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Person's last name or surname\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 32",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "description": "Address postcode\r\n* *Necessity*: Optional\r\n* *Validation*: Valid format UK postcode",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "description": "mobilePhone\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "town": {
            "type": "string",
            "description": "Address town\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 50",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "Person's first name or Christian name\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "keeper"
      },
      "CLAOData.Models.CorrectTransfer.CorrectTransfer": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.CorrectTransfer.CorrectTransferModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Infrastructure.ErrorHandling.CLAErrorDetails": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ApprovedMovement.ApprovedMovementDocumentTransportDetail": {
        "type": "object",
        "properties": {
          "transporterId": {
            "type": "integer",
            "description": "</br>Entity id for transporter to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "transporterTypeId": {
            "type": "integer",
            "description": "</br>Entity id for transporterType to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "transporterType": {
            "$ref": "#/components/schemas/CLAOData.Models.Transfer.TransporterType"
          },
          "transporter": {
            "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementContact"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "transporterAuthNumber": {
            "type": "string",
            "nullable": true
          },
          "transportHaulierName": {
            "type": "string",
            "nullable": true
          },
          "transportVehicleRegistrationNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Title": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The 'title' value as a string.",
            "nullable": true,
            "example": "Dr"
          }
        },
        "additionalProperties": false,
        "description": "Represents a person's title."
      },
      "CLAOData.Models.HoldingRegister.HoldingRegisterReplacementUpgrade": {
        "type": "object",
        "properties": {
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "replacementDate": {
            "type": "string",
            "description": "The date of the replacement or upgrade.",
            "format": "date-time"
          },
          "holdingRegisterId": {
            "type": "string",
            "description": "The id of the holding register for this tag replacement or upgrade.</br>Entity id for holdingRegister to be specified for the POST/PUT supported methods.",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "The id of the species of the animal whose tag was replaced or upgraded.</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "replacementReasonId": {
            "type": "integer",
            "description": "The id of the reason for the replacement. See [ReplacementReasons](#/ReplacementReasons/get_v1_ReplacementReasons)\r\nfor the list of available values.</br>Entity id for replacementReason to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "replacedAnimalIdentifier": {
            "type": "string",
            "description": "The batch number, tag number, RFID/EID, or freeze brand that was replaced.",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Any comment attached to the replacement or upgrade.",
            "nullable": true
          },
          "replacementReason": {
            "$ref": "#/components/schemas/CLAOData.Models.ReplacementReason"
          },
          "requestId": {
            "type": "integer",
            "description": "The id of the request that recorded the movement. See [ReplaceDeviceRequests({id})](#/ReplaceDeviceRequests/get_v1_ReplaceDeviceRequests__id__)\r\nto get the details of this request.",
            "format": "int32",
            "nullable": true
          },
          "replacingAnimalIdentifier": {
            "type": "string",
            "description": "The batch number, tag number, RFID/EID, or freeze brand that replaced or upgraded the old tag.",
            "nullable": true
          },
          "holdingRegister": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingRegister"
          }
        },
        "additionalProperties": false,
        "description": "A replacement or upgrade of a device on a Holding Register's holding"
      },
      "CLAOData.Models.Holding": {
        "type": "object",
        "properties": {
          "holdingType": {
            "type": "string",
            "nullable": true
          },
          "cph": {
            "type": "string",
            "nullable": true
          },
          "contact": {
            "$ref": "#/components/schemas/CLAOData.Models.Contact"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1SightingRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.ApprovedMovement.ApprovedMovementDevice": {
        "type": "object",
        "properties": {
          "rfid": {
            "type": "string",
            "description": "Radio Frequency Identifier (RFID) / Electronic Identification number (EID) of tag",
            "nullable": true
          },
          "approvedMovementRecordedBy": {
            "type": "string",
            "description": "The role of the holding that recorded the movement.\r\n\r\nValues are `Departure` or `Destination`",
            "nullable": true
          },
          "approvedMovementId": {
            "type": "integer",
            "description": "Movement Id</br>Entity id for approvedMovement to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "freezebrand": {
            "type": "string",
            "description": "Freezebrand of animal",
            "nullable": true
          },
          "approvedMovement": {
            "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovement"
          },
          "tagNumber": {
            "type": "string",
            "description": "Official visual tag number",
            "nullable": true
          },
          "deviceLocationId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.PendingMovement.PendingMovementDestinationDetail": {
        "type": "object",
        "properties": {
          "destinationHoldingType": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingType"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "destinationHoldingTypeId": {
            "type": "integer",
            "description": "</br>Entity id for destinationHoldingType to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "hasKeeperChanged": {
            "type": "boolean",
            "nullable": true
          },
          "destinationKeeper": {
            "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementContact"
          },
          "destinationKeeperId": {
            "type": "integer",
            "description": "</br>Entity id for destinationKeeper to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "totalAnimalsReceived": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unloadingDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "arrivalDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This represents destination details for a pending movement.\r\n\r\nThe model is analogous to the DestinationDetail model. See the DestinationDetail schema for details"
      },
      "CLAOData.Models.HoldingPartyModify.Party": {
        "type": "object",
        "properties": {
          "singleBusinessIdentifier": {
            "type": "string",
            "description": "singleBusinessIdentifier\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "email\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "partyId": {
            "type": "string",
            "description": "partyId\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "party"
      },
      "CLAOData.Models.Admin.Program.HoldingMHSNumber": {
        "type": "object",
        "properties": {
          "mhsNumber": {
            "type": "string",
            "description": "A MHS number",
            "nullable": true
          },
          "holdingMHS": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.HoldingMHS"
          },
          "holdingMHSId": {
            "type": "integer",
            "description": "</br>Entity id for holdingMHS to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "V1Async-requestId-ErrorsGet200ApplicationJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Microsoft.OData.ODataErrorDetail"
        }
      },
      "CLAOData.Models.TagUpload.TagUpload": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.TagUpload.TagUploadModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "Collection of Tag order items used for uploading devices from manufacturer."
      },
      "CLAOData.Models.UndoRequest.UndoPartialRequest": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.UndoRequest.UndoPartialRequestModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "Partial undo request"
      },
      "CLAOData.Models.MovementDocumentValidation.Batch": {
        "type": "object",
        "properties": {
          "idMark": {
            "type": "string",
            "description": "Any ID mark to identify the animals being moved",
            "nullable": true
          },
          "stockType": {
            "type": "string",
            "description": "The stock type of the animals being moved e.g. Ewes",
            "nullable": true,
            "example": "Ewes"
          },
          "batchNumber": {
            "type": "string",
            "description": "The batch identifier for the animals being moved\r\n* *Necessity*: Required\r\n* *Validation*: String is in the batch number format supported for the species (see API guide for supported batch number formats)",
            "nullable": true,
            "example": "UK244220"
          },
          "animalTotal": {
            "type": "string",
            "description": "The total number of animals from the batch that are included in the movement\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Must be a non-empty integer string",
            "nullable": true,
            "example": "1"
          }
        },
        "additionalProperties": false,
        "description": "A batch of animals included in a movement"
      },
      "CLAOData.Models.Animals.AnimalOnHoldingListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalOnHolding"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.MovementDocumentValidation.DestinationDetail": {
        "type": "object",
        "properties": {
          "arrivalDate": {
            "$ref": "#/components/schemas/CLAOData.Models.MovementDocumentValidation.Date"
          },
          "totalAnimalsReceived": {
            "maxLength": 10,
            "type": "string",
            "description": "The total number of animals received by the destination holding\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Must be a non-empty integer string, between 1 and 99,999",
            "nullable": true,
            "example": "1"
          },
          "manualEntryHoldingAddress": {
            "type": "string",
            "description": "The address of the destination holding",
            "nullable": true
          },
          "holding": {
            "maxLength": 50,
            "type": "string",
            "description": "The identifier of the destination holding e.g. the holding CPH",
            "nullable": true,
            "example": "26/001/8033"
          }
        },
        "additionalProperties": false,
        "description": "Details of the destination holding for a movement\r\n* `ArrivalDate` - Date animals arrived on the holding\r\n  * *Necessity*: Required\r\n  * *Validation*: Must be a valid date"
      },
      "CLAOData.Models.TitemLTMaintenanceModel": {
        "type": "object",
        "properties": {
          "isLT": {
            "type": "boolean",
            "description": "Lifetime traceability status.\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * `true` - The animals are lifetime traceable.\r\n  * `false` - The animals are not lifetime traceable."
          },
          "comment": {
            "type": "string",
            "description": "Comment detailing reason for change.\r\n* *Necessity*: Required",
            "nullable": true
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Device"
            },
            "description": "Collection of individual identified animals that are having their lifetime traceability status updated.\r\n* *Necessity*: Required\r\n* *Validation*: Must contain one or more items.",
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "The species name of animals involved.\r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint.",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "requestType": {
            "type": "string",
            "description": "Request Type, should not be specified when POSTing request.\r\n* *Necessity*: Optional",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Update lifetime traceability status request content."
      },
      "CLAOData.Models.ApprovedMovement.ApprovedMovementDocumentDepartureDetail": {
        "type": "object",
        "properties": {
          "departureHoldingType": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingType"
          },
          "animalCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "departureOwnerId": {
            "type": "integer",
            "description": "</br>Entity id for departureOwner to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "expectedDurationOfJourney": {
            "$ref": "#/components/schemas/CLAOData.Models.Duration"
          },
          "departureHoldingTypeId": {
            "type": "integer",
            "description": "</br>Entity id for departureHoldingType to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "departureOwner": {
            "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementContact"
          },
          "departureDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "departureKeeper": {
            "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementContact"
          },
          "loadingDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "departureKeeperId": {
            "type": "integer",
            "description": "</br>Entity id for departureKeeper to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.CorrectTransfer.CorrectTransferModel": {
        "required": [
          "animalCount",
          "destinationHolding",
          "movementGroups",
          "sourceHolding",
          "transferDate",
          "userHolding"
        ],
        "type": "object",
        "properties": {
          "movementGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Transfer.MovementGroup"
            },
            "description": "Collection of groups of animals moved\r\n* *Necessity*: Required\r\n* *Validation*: Collection must contain one or more items"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "saleDate": {
            "type": "string",
            "description": "Sale date\r\n* *Necessity*: Only should be specified if a market holding type is recording an off movement\r\n* *Validation*:\r\n  * Must be less then or equal to `transferDate`\r\n  * Must be empty if isn't a market recording an off movement",
            "format": "date-time",
            "nullable": true
          },
          "deviceApplication": {
            "$ref": "#/components/schemas/CLAOData.Models.DeviceApplicationDetails"
          },
          "requestToBeUndone_ID": {
            "type": "integer",
            "description": "Request id of the original transfer request to be corrected, this can be obtained from the [TransferRequests](#TransferRequests) endpoint.\r\n* *Necessity*: Required\r\n* *Validation*: The authenticated user must have originally created the transfer request being corrected (unless the authenticated user is an administrator).",
            "format": "int32",
            "nullable": true
          },
          "transferDate": {
            "type": "string",
            "description": "Date/time of the movement.\r\n* *Necessity*: Required",
            "format": "date-time"
          },
          "transportHaulierName": {
            "type": "string",
            "description": "Name of person responsible for moving animals\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 50 characters",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "transportVehicleRegistrationNo": {
            "type": "string",
            "description": "Registration number of vehicle being used to transport animals\r\n* *Necessity*: Optional\r\n* *Validation*: If specified must be between 2 and 10 upper or lower case letters or numbers",
            "nullable": true
          },
          "userHolding": {
            "type": "string",
            "description": "A holding associated with the user. It must be equal to `destinationHolding` for movements ON or `sourceHolding` for movements OFF.\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH format (see API guide for supported holding number formats).\r\n  * If it is On movement or in-business movement the `userHolding` should equal `destinationHolding`\r\n  * If it is Off movement the `userHolding` should equal `sourceHolding`\r\n  * For most user roles authenticated user must be associated with the `userHolding`."
          },
          "saleId": {
            "type": "string",
            "description": "Sale identifier, the markets internal identifier for the sale\r\n* *Necessity*: Only should be specified if a market holding type is recording an off movement\r\n* *Validation*:\r\n  * Maximum length 32 characters\r\n  * Must be empty if isn't a market recording an off movement",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "The species name of animals moved\r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint",
            "nullable": true
          },
          "destinationHolding": {
            "type": "string",
            "description": "Destination holding animals moved to\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH or abattoir MHS number format (see API guide for supported holding number formats).\r\n  * If destination holding isn't known or animal is lost use the value `UNKNOWN`.\r\n  * For most user roles authenticated user must be associated with either the `sourceHolding` or `destinationHolding`."
          },
          "sourceHolding": {
            "type": "string",
            "description": "Departure holding animals moved from\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH format (see API guide for supported holding number formats).\r\n  * If the departure holding isn't known or animal is found use the value `UNKNOWN`\r\n  * For most user roles authenticated user must be associated with either the `sourceHolding` or `destinationHolding`."
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "movementDocument": {
            "$ref": "#/components/schemas/CLAOData.Models.Transfer.MovementDocument"
          },
          "animalCount": {
            "type": "integer",
            "description": "Total individual and batch identified animals moved\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Value is between 1 and 99999\r\n  * Value equal the count of `movementGroups.devices` plus sum of `movementGroups.batches.animalTotal`",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Correct Transfer request content"
      },
      "CLAOData.Models.HoldingPartyModify.HoldingPartyModify": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingPartyModify.HoldingPartyModifyModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "holdingPartyModify"
      },
      "CLAOData.Models.Transfer.DocumentTypeListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Transfer.DocumentType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.StandstillConfigHoldingLinkType": {
        "type": "object",
        "properties": {
          "holdingLinkType": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.HoldingLinkType"
          },
          "standstillConfig": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.StandstillConfig"
          },
          "standstillConfigId": {
            "type": "integer",
            "description": "</br>Entity id for standstillConfig to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "holdingLinkTypeId": {
            "type": "integer",
            "description": "</br>Entity id for holdingLinkType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ReplaceDevice.ReplaceItem": {
        "type": "object",
        "properties": {
          "deviceReplacing": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "batchReplacing": {
            "$ref": "#/components/schemas/CLAOData.Models.Batch"
          },
          "batchReplaced": {
            "$ref": "#/components/schemas/CLAOData.Models.Batch"
          },
          "deviceReplaced": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          }
        },
        "additionalProperties": false,
        "description": "A single replacement specification as part of a ReplaceDeviceRequest.\r\n\r\n* When ReplacementReason on the ReplaceDeviceModel is 'Upgrade' then either DeviceReplaced or BatchReplaced must be specified, and DeviceReplacing must be specified.\r\n* When ReplacementReason on the ReplaceDeviceModel is *not* 'Upgrade', then the specified Replaced and Replacing properties should be of the same type i.e. both should be Batch or both should be Device\r\n* At most one of the Replaced properties should be specified\r\n* Exactly one of the Replacing properties should be specified\r\n* If a batch is being replaced with another batch, the AnimalTotal in both batches must match\r\n* If a batch is being upgraded to a device, the AnimalTotal in BatchReplaced must be 1\r\n* If a device is being replaced with a batch, the AnimalTotal in BatchReplacing must be 1"
      },
      "CLAOData.Models.EditPreMovement.EditPreMovementModel": {
        "required": [
          "animalCount",
          "destinationHolding",
          "movementGroups",
          "sourceHolding",
          "transferDate",
          "userHolding"
        ],
        "type": "object",
        "properties": {
          "movementGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Transfer.MovementGroup"
            },
            "description": "Collection of groups of animals moved\r\n* *Necessity*: Required\r\n* *Validation*: Collection must contain one or more items"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "saleDate": {
            "type": "string",
            "description": "Sale date\r\n* *Necessity*: Only should be specified if a market holding type is recording an off movement\r\n* *Validation*:\r\n  * Must be less then or equal to `transferDate`\r\n  * Must be empty if isn't a market recording an off movement",
            "format": "date-time",
            "nullable": true
          },
          "deviceApplication": {
            "$ref": "#/components/schemas/CLAOData.Models.DeviceApplicationDetails"
          },
          "transferDate": {
            "type": "string",
            "description": "Date/time of the movement.\r\n* *Necessity*: Required",
            "format": "date-time"
          },
          "transportHaulierName": {
            "type": "string",
            "description": "Name of person responsible for moving animals\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 50 characters",
            "nullable": true
          },
          "requestId": {
            "type": "integer",
            "description": "The original request id for the creation of the pre-movement\r\n* *Necessity*: Optional. Either `requestId` must be specified or `documentId` must be specified.\r\n* *Validation*: Only permits request id values returned by [PreMovementRequests](#PreMovementRequests) endpoint",
            "format": "int32",
            "nullable": true
          },
          "transportVehicleRegistrationNo": {
            "type": "string",
            "description": "Registration number of vehicle being used to transport animals\r\n* *Necessity*: Optional\r\n* *Validation*: If specified must be between 2 and 10 upper or lower case letters or numbers",
            "nullable": true
          },
          "userHolding": {
            "type": "string",
            "description": "A holding associated with the user. It must be equal to `destinationHolding` for movements ON or `sourceHolding` for movements OFF.\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH format (see API guide for supported holding number formats).\r\n  * If it is On movement or in-business movement the `userHolding` should equal `destinationHolding`\r\n  * If it is Off movement the `userHolding` should equal `sourceHolding`\r\n  * For most user roles authenticated user must be associated with the `userHolding`."
          },
          "saleId": {
            "type": "string",
            "description": "Sale identifier, the markets internal identifier for the sale\r\n* *Necessity*: Only should be specified if a market holding type is recording an off movement\r\n* *Validation*:\r\n  * Maximum length 32 characters\r\n  * Must be empty if isn't a market recording an off movement",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "The species name of animals moved\r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint",
            "nullable": true
          },
          "destinationHolding": {
            "type": "string",
            "description": "Destination holding animals moved to\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH or abattoir MHS number format (see API guide for supported holding number formats).\r\n  * If destination holding isn't known or animal is lost use the value `UNKNOWN`.\r\n  * For most user roles authenticated user must be associated with either the `sourceHolding` or `destinationHolding`."
          },
          "sourceHolding": {
            "type": "string",
            "description": "Departure holding animals moved from\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH format (see API guide for supported holding number formats).\r\n  * If the departure holding isn't known or animal is found use the value `UNKNOWN`\r\n  * For most user roles authenticated user must be associated with either the `sourceHolding` or `destinationHolding`."
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "movementDocument": {
            "$ref": "#/components/schemas/CLAOData.Models.Transfer.MovementDocument"
          },
          "animalCount": {
            "type": "integer",
            "description": "Total individual and batch identified animals moved\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Value is between 1 and 99999\r\n  * Value equal the count of `movementGroups.devices` plus sum of `movementGroups.batches.animalTotal`",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.AnnualInventory.DeleteAnnualInventoryListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.AnnualInventory.DeleteAnnualInventory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ReviewHoldingMovement.ReviewHoldingMovementListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.ReviewHoldingMovement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.ProgramStatusSpecies": {
        "type": "object",
        "properties": {
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "nextProgramStatusId": {
            "type": "integer",
            "description": "If specified must be a Program Status that exists and is in the same Program as this Program Status.",
            "format": "int32",
            "nullable": true
          },
          "programStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "speciesId": {
            "type": "integer",
            "description": "Species this Program Status applies to.</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.PaperMovement.Device": {
        "type": "object",
        "properties": {
          "freezebrand": {
            "maxLength": 50,
            "type": "string",
            "description": "Freezebrand of tag\r\n* *Necessity*: Either `tagNumber`, `rfid` or `freezebrand` must be specified",
            "nullable": true
          },
          "rfid": {
            "maxLength": 50,
            "type": "string",
            "description": "Radio Frequency Identifier (RFID) / Electronic Identification number (EID) of tag\r\n* *Necessity*: Either `tagNumber`, `rfid` or `freezebrand` must be specified\r\n* *Validation*: String containing Rfid in format; decimal, ISO Decimal, Hex or UK WYSIWYG (see API guide for supported Rfid formats)\r\n* If `rfid` and `tagNumber` are both specified they should be equivalent values.",
            "nullable": true
          },
          "tagNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "Official visual tag number\r\n* *Necessity*: Either `tagNumber`, `rfid` or `freezebrand` must be specified\r\n* *Validation*: String is in the tag number format supported for the species  (see API guide for supported tag number formats)\r\n* If `tagNumber` and `rfid` are both specified they should be equivalent values.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BusinessRulesConfig.RequestTypeProcessingRuleHolding": {
        "required": [
          "requestTypeProcessingRuleId"
        ],
        "type": "object",
        "properties": {
          "isAssociatedWithUser": {
            "type": "boolean",
            "nullable": true
          },
          "processingRuleSourceField": {
            "$ref": "#/components/schemas/CLAOData.Models.BusinessRulesConfig.ProcessingRuleSourceFieldCodeEnum"
          },
          "requestTypeProcessingRuleHoldingId": {
            "type": "integer",
            "format": "int32"
          },
          "holdingTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.BusinessRulesConfig.RequestTypeProcessingRuleHoldingType"
            },
            "nullable": true
          },
          "programStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatus"
          },
          "programStatusId": {
            "type": "integer",
            "description": "</br>Entity id for programStatus to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "requestTypeProcessingRuleId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.DeviceProgramStatus.DeviceProgramStatus": {
        "type": "object",
        "properties": {
          "programStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatus"
          },
          "programStatusCode": {
            "type": "string",
            "nullable": true
          },
          "freezebrand": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "program": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.Program"
          },
          "programStatusId": {
            "type": "integer",
            "description": "</br>Entity id for programStatus to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "rfid": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "programCode": {
            "type": "string",
            "nullable": true
          },
          "tagNumber": {
            "type": "string",
            "nullable": true
          },
          "programStatusName": {
            "type": "string",
            "nullable": true
          },
          "setReason": {
            "type": "string",
            "nullable": true
          },
          "programId": {
            "type": "integer",
            "description": "</br>Entity id for program to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Program status details currently set for a device."
      },
      "CLAOData.Models.Admin.DeviceAttributes.AttributesListValue": {
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "attribute": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.Attribute"
          },
          "attributesListValueId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeId": {
            "type": "integer",
            "description": "</br>Entity id for attribute to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.MovementDocumentValidation.MovementDocument": {
        "type": "object",
        "properties": {
          "transportDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.MovementDocumentValidation.TransportDetail"
          },
          "destinationDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.MovementDocumentValidation.DestinationDetail"
          },
          "departureDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.MovementDocumentValidation.DepartureDetail"
          }
        },
        "additionalProperties": false,
        "description": "A movement document for validation and submission through the [MovementDocumentValidation](#/MovementDocumentValidation) endpoints\r\n* `DepartureDetail` - Details of the departure holding for the movement\r\n  * *Necessity*: Required\r\n* `DestinationDetail` - Details of the destination holding for the movement\r\n  * *Necessity*: Required"
      },
      "CLAOData.Models.Admin.DeviceAttributes.DeviceAttributeData": {
        "type": "object",
        "properties": {
          "rfid": {
            "type": "string",
            "description": "The RFID of the device.\r\n\r\n* *Necessity*: Not required.\r\n* *Validation*: Either the tag number or RFID must be supplied.",
            "nullable": true
          },
          "dateTimeCollected": {
            "type": "string",
            "description": "Date and time the attribute values were collected.\r\n\r\n* *Necessity*: Required.\r\n* *Validation*: Must not be in the future.",
            "format": "date-time"
          },
          "attributeValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.AttributeValue"
            },
            "description": "The attribute values to update for the device.\r\n\r\n* *Necessity*: Required.\r\n* *Validation*:\r\n    * Must provide at least one attribute value.\r\n    * Multiple attributes with the same id are not permitted.",
            "nullable": true
          },
          "tagNumber": {
            "type": "string",
            "description": "The tag number of the device.\r\n\r\n* *Necessity*: Not required.\r\n* *Validation*: Either the tag number or RFID must be supplied.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A device that should have its Attributes updated."
      },
      "CLAOData.Models.UpdateDeviceStatus.UpdateDeviceStatusListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.UpdateDeviceStatus.UpdateDeviceStatus"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1TagUploadRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.ApprovedMovement.ApprovedMovementBatch": {
        "type": "object",
        "properties": {
          "batchMovementId": {
            "type": "integer",
            "format": "int32"
          },
          "batchNumber": {
            "type": "string",
            "description": "Batch number of group of animals (i.e the herd or flock number)",
            "nullable": true
          },
          "animalTotal": {
            "type": "integer",
            "description": "Total animals in batch",
            "format": "int32"
          },
          "stockTypeId": {
            "type": "integer",
            "description": "Id of the batch stock type\r\n\r\nSee [StockTypes](#StockTypes)",
            "format": "int32",
            "nullable": true
          },
          "approvedMovementRecordedBy": {
            "type": "string",
            "description": "The role of the holding that recorded the movement.\r\n\r\nValues are `Departure` or `Destination`",
            "nullable": true
          },
          "idMark": {
            "type": "string",
            "description": "Description of the batch of animals",
            "nullable": true
          },
          "stockType": {
            "type": "string",
            "description": "Stock type of the batch of animals\r\n\r\nSee [StockTypes](#StockTypes)",
            "nullable": true
          },
          "approvedMovement": {
            "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovement"
          },
          "approvedMovementId": {
            "type": "integer",
            "description": "Id of the movement</br>Entity id for approvedMovement to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "V1TitemLTMaintenanceRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.BusinessRulesConfig.ProcessingRuleActionEnum": {
        "enum": [
          "Allow",
          "Reject",
          "SetHoldingProgramStatus",
          "SetDeviceProgramStatus",
          "ClearHoldingProgramStatus",
          "ClearDeviceProgramStatus",
          "HideHoldingProgramStatusNotify",
          "HideDeviceProgramStatusNotify",
          "PreventStandstill",
          "RejectBatch",
          "RejectIndividual",
          "StopLTLossSysMoveAnyHolding",
          "StopLTLossSysMoveAssociateHolding",
          "StopLTLossSysMoveLinkedHolding"
        ],
        "type": "string"
      },
      "CLAOData.Models.AnimalDetailsMaintenance.AnimalDetailsMaintenanceListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.AnimalDetailsMaintenance.AnimalDetailsMaintenance"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Animals.AnimalProgeny": {
        "type": "object",
        "properties": {
          "endBirthPeriod": {
            "type": "string",
            "description": "Date of latest possible birth date",
            "format": "date-time"
          },
          "animal": {
            "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalDetail"
          },
          "genderId": {
            "type": "integer",
            "description": "The gender id of the progeny",
            "format": "int32"
          },
          "freezebrand": {
            "type": "integer",
            "description": "Freezebrand of tag",
            "format": "int32",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "The species id of the parent of the progeny.",
            "format": "int32"
          },
          "breedId": {
            "type": "integer",
            "description": "The breed id of the progeny",
            "format": "int32",
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "description": "System generated identifier for the parent of the progeny.",
            "format": "int32"
          },
          "beginBirthPeriod": {
            "type": "string",
            "description": "Date of earliest possible birth date",
            "format": "date-time"
          },
          "rfid": {
            "type": "string",
            "description": "Radio Frequency Identifier (RFID) / Electronic Identification number (EID) of tag",
            "nullable": true
          },
          "breed": {
            "$ref": "#/components/schemas/CLAOData.Models.Breed"
          },
          "genderSpecies": {
            "$ref": "#/components/schemas/CLAOData.Models.GenderSpecies"
          },
          "tagNumber": {
            "type": "string",
            "description": "Official visual tag number",
            "nullable": true
          },
          "untaggedAnimalKillId": {
            "type": "integer",
            "description": "System generated identifier for the death of an untagged animal.",
            "format": "int64"
          },
          "progenyDeviceId": {
            "type": "integer",
            "description": "System generated identifier for the progeny animal.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.DeviceApplicationDetails": {
        "type": "object",
        "properties": {
          "dateOfApplication": {
            "type": "string",
            "description": "Date tags were applied\r\n* *Necessity*: Required \r\n* *Validation*: Must not be in the future or after the date of the main event being recorded",
            "format": "date-time"
          },
          "endBirthPeriod": {
            "type": "string",
            "description": "Date of latest possible birth date of animals tagged\r\n* *Necessity*: Optional, required if `beginBirthPeriod` is specified.\r\n* *Validation*: Must not be in the future or after the `dateOfApplication`.  The number of days between `beginBirthPeriod` and `endBirthPeriod` must less then 1 day for species cattle or else 31 days for other species.",
            "format": "date-time",
            "nullable": true
          },
          "breed": {
            "type": "string",
            "description": "Breed name of animals\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits breed name values returned by [Breeds](#Breeds) endpoint for species",
            "nullable": true
          },
          "beginBirthPeriod": {
            "type": "string",
            "description": "Date of earliest possible birth date of animals tagged\r\n* *Necessity*: Optional, required if `endBirthPeriod` is specified.\r\n* *Validation*: Must not be in the future or after the `dateOfApplication`. The number of days between `beginBirthPeriod` and `endBirthPeriod` must less then 1 day for species cattle or else 31 days for other species.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Device application details if tag application should be automatically recorded"
      },
      "CLAOData.Models.MovementDocumentValidation.Date": {
        "type": "object",
        "properties": {
          "year": {
            "maxLength": 10,
            "type": "string",
            "description": "The 4 digit year\r\n* *Necessity*: Required\r\n* *Validation*: Valid integer. Can be a double (yy) or quadruple (yyyy) digit year.",
            "nullable": true
          },
          "day": {
            "maxLength": 10,
            "type": "string",
            "description": "The day of the month\r\n* *Necessity*: Required\r\n* *Validation*: Valid integer. Can be a single or double digit.",
            "nullable": true,
            "example": "5"
          },
          "month": {
            "maxLength": 10,
            "type": "string",
            "description": "The month, from 01 through 12. \r\n* *Necessity*: Required\r\n* *Validation*: Valid integer. Can be a single or double digit.",
            "nullable": true,
            "example": "10"
          }
        },
        "additionalProperties": false,
        "description": "A date, allowing invalid entry for transcription from paper documents etc."
      },
      "CLAOData.Models.Admin.Program.ProgramStatus": {
        "required": [
          "code",
          "name",
          "species"
        ],
        "type": "object",
        "properties": {
          "inheritFromHolding": {
            "type": "boolean",
            "description": "Inherit from holding flag.\r\nIf this flag is true then isHolding must be true."
          },
          "isNegative": {
            "type": "boolean",
            "nullable": true
          },
          "clearCurrentWhenMultiple": {
            "type": "boolean",
            "description": "Ensures this program status must be cleared when other program statuses are linked to a holding.\r\nIf AllowMultiple = true this value must be null",
            "nullable": true
          },
          "exemptHoldingTypeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatusExemptHoldingType"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Program status active flag, attached program must also be active/in active."
          },
          "holding": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatusHolding"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "distinctProgramStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.DistinctProgramStatus"
            },
            "description": "No duplicate Program Status ids must exist in this distinctProgramStatuses list.",
            "nullable": true
          },
          "isSourceOrganisationRequired": {
            "type": "boolean"
          },
          "deviceTitem": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatusDeviceTitem"
          },
          "allowMultiple": {
            "type": "boolean",
            "description": "Allows a holding to link other program statuses when it is already linked to this one"
          },
          "isPositive": {
            "type": "boolean",
            "nullable": true
          },
          "allowUndoClearedStatus": {
            "type": "boolean"
          },
          "species": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatusSpecies"
            }
          },
          "programId": {
            "type": "integer",
            "description": "The Program the status belongs to.</br>Entity id for program to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "name": {
            "maxLength": 128,
            "pattern": "^[A-Za-z0-9\\s]*$",
            "type": "string",
            "description": "Name of the program status"
          },
          "recognisedProgramStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.RecognisedProgramStatus"
            },
            "description": "No duplicate Program Status ids must exist in this recognisedProgramStatuses list.",
            "nullable": true
          },
          "isDevice": {
            "type": "boolean",
            "description": "Indicates that the Program Status applies to a device.\r\nIf value is true then deviceTitem object must be populated.\r\nIf value is false then deviceTitem object must not be populated.\r\nIf isDevice is true then isTitem must be false.",
            "nullable": true
          },
          "program": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.Program"
          },
          "isHolding": {
            "type": "boolean",
            "description": "Indicates that the Program Status applies to a holding.\r\nIf value is true then holding object must be populated.\r\nIf value is false then holding object must not be populated."
          },
          "code": {
            "maxLength": 8,
            "pattern": "^[A-Za-z0-9_\\.]+$",
            "type": "string",
            "description": "Code of the program status"
          },
          "isTitem": {
            "type": "boolean",
            "description": "Indicates that the Program Status applies to a titem (animal).\r\nIf value is true then deviceTitem object must be populated.\r\nIf value is false then deviceTitem object must not be populated.\r\nIf IsTitem is true then isDevice must be false."
          }
        },
        "additionalProperties": false,
        "description": "OData program status model.\r\nNOTE : isHolding, isDevice and isTitem can not all be false."
      },
      "CLAOData.Models.Admin.Program.ProgramListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.Program"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ReviewHoldingMovement.HoldingMovementForReview": {
        "type": "object",
        "properties": {
          "isDuplicate": {
            "type": "boolean",
            "description": "Is this movement a duplicate of any other movements that need to be reviewed"
          },
          "documentType": {
            "type": "string",
            "description": "Type of movement document",
            "nullable": true
          },
          "reviewDevices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.ReviewDevice"
            },
            "description": "Devices to review",
            "nullable": true
          },
          "sourceHolding": {
            "type": "string",
            "description": "The holding the animals were moved from",
            "nullable": true
          },
          "duplicateRequestIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of request Ids for any movements that are a duplicate of this movement",
            "nullable": true
          },
          "movementDate": {
            "type": "string",
            "description": "The date of the movement",
            "format": "date-time"
          },
          "isAccepted": {
            "type": "boolean",
            "description": "Indication of whether the movement is accepted or rejected",
            "nullable": true
          },
          "requestId": {
            "type": "integer",
            "description": "Request Id of the movement to be reviewed",
            "format": "int32"
          },
          "reviewBatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.ReviewBatch"
            },
            "description": "Batches to review",
            "nullable": true
          },
          "documentRef": {
            "type": "string",
            "description": "Reference of the movement document",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "The species this movement concerns",
            "nullable": true
          },
          "destinationHolding": {
            "type": "string",
            "description": "The holding the animals were moved to",
            "nullable": true
          },
          "animalTotal": {
            "type": "integer",
            "description": "Total number of animals included in batches and devices that were moved",
            "format": "int32"
          },
          "transportHaulierName": {
            "type": "string",
            "description": "The name of the transport haulier",
            "nullable": true
          },
          "userHolding": {
            "type": "string",
            "description": "The main holding associated with the user that originally created the movement",
            "nullable": true
          },
          "transportVehicleRegistrationNo": {
            "type": "string",
            "description": "The registration number of the transport vehicle",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.ProgramStatusNotification": {
        "required": [
          "programStatusId"
        ],
        "type": "object",
        "properties": {
          "notificationTypeId": {
            "type": "integer",
            "description": "</br>Entity id for notificationType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "programStatusNotificationRequestTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatusNotificationRequestType"
            },
            "nullable": true
          },
          "notificationType": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatusNotificationType"
          },
          "programStatusId": {
            "type": "integer",
            "description": "</br>Entity id for programStatus to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "programStatusNotificationSpecies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatusNotificationSpecies"
            },
            "nullable": true
          },
          "programStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatus"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "programStatusNotificationHoldingTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatusNotificationHoldingType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingDetailsAndPartyModify.Party": {
        "type": "object",
        "properties": {
          "singleBusinessIdentifier": {
            "type": "string",
            "description": "singleBusinessIdentifier\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "email\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "partyId": {
            "type": "string",
            "description": "partyId\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "party"
      },
      "CLAOData.Models.Error.ErrorType": {
        "enum": [
          "Success",
          "Error",
          "Warning",
          "Notification"
        ],
        "type": "string"
      },
      "CLAOData.Models.Transfer.MovementDocument": {
        "type": "object",
        "properties": {
          "departureDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.Transfer.DepartureDetail"
          },
          "fciDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.Transfer.FciDetail"
          },
          "transportDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.Transfer.TransportDetail"
          },
          "destinationDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.Transfer.DestinationDetail"
          },
          "documentType": {
            "type": "string",
            "description": "Document type, used to indicate the type of movement document being specified\r\n* *Necessity*: Optional, should be specified if a `movementDocumentRef` is also specified\r\n* *Validation*: Only permits document type values returned by [DocumentTypes](#DocumentTypes) endpoint",
            "nullable": true
          },
          "movementDocumentRef": {
            "type": "string",
            "description": "Movement document reference, used to indicate the movement document id that movement is part of. If editing or confirming pre-movement this is the movement document id of the existing pre-movement.\r\n* *Necessity*: Optional, should be specified if a `documentType` is also specified\r\n* *Validation*: Document exists and authenticated user is permitted to access it",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Movement document\r\n* `departureDetail` - details captured from the departure holding\r\n  * *Necessity*: Required"
      },
      "CLAOData.Models.HoldingsIntegration.Holding": {
        "type": "object",
        "properties": {
          "holdingId": {
            "type": "integer",
            "description": "The holding unique id.",
            "format": "int32"
          },
          "cph": {
            "type": "string",
            "description": "The cph.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Holding request content"
      },
      "CLAOData.Models.CorrectTransfer.CorrectTransferListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.CorrectTransfer.CorrectTransfer"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.WithdrawPreMovement.WithdrawPreMovementListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.WithdrawPreMovement.WithdrawPreMovement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ApprovedMovement.ApprovedMovementListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BusinessRulesConfig.RequestTypeProcessingRuleSpecies": {
        "required": [
          "requestTypeProcessingRuleId",
          "speciesId"
        ],
        "type": "object",
        "properties": {
          "isIdentifiedBatch": {
            "type": "boolean",
            "nullable": true
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "requestTypeProcessingRuleId": {
            "type": "integer",
            "format": "int32"
          },
          "isIdentifiedIndividually": {
            "type": "boolean",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.DeviceApplication.DeviceApplicationExtendedModel": {
        "required": [
          "dateOfApplication",
          "holding",
          "species"
        ],
        "type": "object",
        "properties": {
          "holding": {
            "type": "string",
            "description": "The CPH of the holding where the animals were tagged\r\n* *Necessity*: Required\r\n* *Validation*: User must be associated with holding"
          },
          "species": {
            "type": "string",
            "description": "The species name of animals tagged\r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint"
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Comment for own use \r\n* *Necessity*: Optional\r\n* *Validation*: String, no limit on length",
            "nullable": true
          },
          "applicationItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.DeviceApplication.DeviceApplicationItemModel"
            },
            "description": "Collection of devices with identification / birth details\r\n* *Necessity*: Required\r\n* *Validation*: Must contain one or more items",
            "nullable": true
          },
          "genotype": {
            "type": "string",
            "description": "Genotype of animals tagged\r\n* *Necessity*: Optional\r\n* *Validation*: String, no limit on length",
            "nullable": true
          },
          "dateOfApplication": {
            "type": "string",
            "description": "Date tags were applied\r\n* *Necessity*: Required\r\n* *Validation*: Must not be in the future",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BulkImports.Animals.BulkRefreshAnimal": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.BulkImports.Animals.BulkRefreshAnimalModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.DeviceProgramStatus.DeviceProgramStatusListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.DeviceProgramStatus.DeviceProgramStatus"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1TransferRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.EditPreMovement.EditPreMovement": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.EditPreMovement.EditPreMovementModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ConfirmPreMovement.ConfirmPreMovementModel": {
        "type": "object",
        "properties": {
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "preMovementRequestId": {
            "type": "integer",
            "description": "The original request id for the creation of the pre-movement\r\n* *Necessity*: Optional. Either `preMovementRequestId` must be specified or `movementDocumentRef` must be specified. If both `preMovementRequestId` and `movementDocumentRef` are specified, `preMovementRequestId` takes precedence and `movementDocumentRef` is not used.\r\n* *Validation*: Only permits request id values returned by [PreMovementRequests](#PreMovementRequests) endpoint",
            "format": "int32",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "movementDocumentRef": {
            "type": "string",
            "description": "The movement document reference of the pre-movement.\r\n* *Necessity*: Optional. Either `preMovementRequestId` must be specified or `movementDocumentRef` must be specified. If both `preMovementRequestId` and `movementDocumentRef` are specified, `preMovementRequestId` takes precedence and `movementDocumentRef` is not used.\r\n* *Validation*: Only permits movement document reference values returned by [PendingMovementDetails](#PendingMovementDetails) endpoint in the `movementDocument.movementDocumentRef` property.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingRegister.HoldingRegisterHoldingBatchNumber": {
        "type": "object",
        "properties": {
          "holdingRegisterId": {
            "type": "string",
            "description": "The id of the Holding Register to which the batch number is linked</br>Entity id for holdingRegister to be specified for the POST/PUT supported methods.",
            "nullable": true
          },
          "holdingBatchNumber": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingBatchNumber"
          },
          "holdingBatchNumberId": {
            "type": "integer",
            "description": "The id of the batch number record that is linked to the Holding Register</br>Entity id for holdingBatchNumber to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "holdingRegister": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingRegister"
          }
        },
        "additionalProperties": false,
        "description": "Links a Holding Batch Number to a Holding Register"
      },
      "CLAOData.Models.SightingMove.SightingMoveListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SightingMove.SightingMove"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Contact": {
        "type": "object",
        "properties": {
          "county": {
            "type": "string",
            "description": "Address County\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits name values returned by [Counties](#Counties) endpoint",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address line 2\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 128",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "description": "Address property name or street number\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 32",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "description": "Address line 1\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 128",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Person's name prefix\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits name values returned by [Titles](#Titles) endpoint",
            "nullable": true
          },
          "telephoneNumber": {
            "type": "string",
            "description": "Telephone number\r\n* *Necessity*: Optional\r\n* *Validation*:\r\n  * Should only contain numbers and space characters\r\n  * Maximum length 13",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Person's last name or surname\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 32",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "description": "Address postcode\r\n* *Necessity*: Optional\r\n* *Validation*: Valid format UK postcode",
            "nullable": true
          },
          "town": {
            "type": "string",
            "description": "Address town\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 50",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "Person's first name or Christian name\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.AnnualInventory.DeleteAnnualInventory": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.AnnualInventory.DeleteAnnualInventoryModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Notification.RequestStatusNotificationListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Notification.RequestStatusNotification"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingRegister.RunningTotalData": {
        "type": "object",
        "properties": {
          "rowId": {
            "type": "integer",
            "description": "Unique id of the row, reflects the order events were created in",
            "format": "int32"
          },
          "stockCategory": {
            "type": "string",
            "description": "A description of the stock altered in the event",
            "nullable": true
          },
          "eventCode": {
            "type": "string",
            "description": "Type of event.\r\nPossible values are AI, AI_SYSTEM, APPLY, OFF_MOVE, ON_MOVE, CHANGE, KILL, KILL_UNTAGGED, UPGRADE",
            "nullable": true
          },
          "genderMaleCAST": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.RunningTotalItem"
          },
          "eventDate": {
            "type": "string",
            "description": "Date the event occurred",
            "format": "date-time"
          },
          "requestId": {
            "type": "integer",
            "description": "The Id of the event request",
            "format": "int32"
          },
          "genderOthers": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.RunningTotalItem"
          },
          "genderMale": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.RunningTotalItem"
          },
          "total": {
            "type": "integer",
            "description": "The total number of animals on the holding after this event.",
            "format": "int32"
          },
          "genderFemaleNGB": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.RunningTotalItem"
          },
          "genderUnknown": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.RunningTotalItem"
          },
          "genderFemale": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.RunningTotalItem"
          },
          "event": {
            "type": "string",
            "description": "Description of the event",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a event/request that contributes to the holding's total of animals"
      },
      "CLAOData.Models.Admin.DeviceAttributes.DeviceAttributesListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.DeviceAttributes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.DeviceAttributes.DeviceAttributes": {
        "type": "object",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.DeviceAttributeForReport"
            },
            "nullable": true
          },
          "batch": {
            "$ref": "#/components/schemas/CLAOData.Models.Batch"
          },
          "itemId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Attributes for a single batch or device returned from \r\n[QueryDeviceAttributes](#/DeviceAttributes/get_v1_QueryDeviceAttributes_readPackageName__readPackageName__holdingCPH__holdingCPH__startDate__startDate__endDate__endDate__species__species__deviceIdentifiers___deviceIdentifiers___)."
      },
      "CLAOData.Models.Transfer.Transfer": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.Transfer.TransferModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "Transfer request"
      },
      "CLAOData.Models.Admin.Program.ProgramStatusNotificationListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatusNotification"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.OnFarmKill.OnFarmKillModel": {
        "type": "object",
        "properties": {
          "approvedDisposalRoute": {
            "type": "string",
            "description": "Approved Disposal Route.\r\n* *Necessity*: Optional\r\n* *Validation*: Free text string",
            "nullable": true
          },
          "disposalHolding": {
            "type": "string",
            "description": "The Identifier for the property where the carcass was disposed (knackers)\r\n* *Necessity*: Optional\r\n* *Validation*: Must be a valid CPH",
            "nullable": true
          },
          "disposalDate": {
            "type": "string",
            "description": "The date of the disposal\r\n* *Necessity*: Optional\r\n* *Validation*: Required if `disposalHolding` is specified. Must not be in the future and must be after the `killDate`",
            "format": "date-time",
            "nullable": true
          },
          "deathofUntaggedAnimals": {
            "$ref": "#/components/schemas/CLAOData.Models.OnFarmKill.DeathOfUntaggedAnimals"
          },
          "breed": {
            "type": "string",
            "description": "Breed of animals killed\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits breed name values returned by [Breeds](#Breeds) endpoint for species",
            "nullable": true
          },
          "deathReason": {
            "type": "string",
            "description": "Death reason\r\n* *Necessity*: Optional\r\n* *Validation*: Either Death Reason values returned by [DeathReasons](#DeathReasons) or the user can specify items not in this list (maximum length of 50)",
            "nullable": true
          },
          "disposalHoldingDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.Holding"
          },
          "killedDevices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Device"
            },
            "description": "Collection of killed devices. Devices must be valid and must not contain duplicates.\r\n* *Necessity*: Required if recording the death of one or more devices\r\n* *Validation*: Any devices specified must be valid device for the specified species",
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "killDate": {
            "type": "string",
            "description": " Date the animals died\r\n* *Necessity*: Required\r\n* *Validation*: Must not be in the future",
            "format": "date-time"
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "description": "Comments.\r\n* *Necessity*: Optional\r\n* *Validation*: Free text string",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "The species name of animals tagged\r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint",
            "nullable": true
          },
          "holding": {
            "type": "string",
            "description": "The Holding where the animals died\r\n* *Necessity*: Required\r\n* *Validation*: String is in valid holding CPH format (see API guide for supported holding number formats), For most user roles authenticated user must be associated with the holding",
            "nullable": true
          },
          "batchDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Batch"
            },
            "description": "Collection of details of batches killed.\r\n* *Necessity*: Required if recording the death of one or more batches\r\n* *Validation*: \r\n    * Batches must be supported for specified species\r\n    * Any batches specified must be valid batches for the specified species",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "OData OnFarmKill request model"
      },
      "CLAOData.Models.PendingMovement.PendingMovementNonCompliantDevice": {
        "type": "object",
        "properties": {
          "rfid": {
            "type": "string",
            "nullable": true
          },
          "fciDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementFCIDetail"
          },
          "pendingMovementNonCompliantDeviceId": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "fciDetailId": {
            "type": "integer",
            "description": "</br>Entity id for fciDetail to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "tagNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1BulkAddMovementRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.BusinessRulesConfig.RequestTypeValidationRule": {
        "required": [
          "ruleKey",
          "ruleValue"
        ],
        "type": "object",
        "properties": {
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "ruleValue": {
            "maxLength": 50,
            "type": "string"
          },
          "ruleKey": {
            "maxLength": 50,
            "pattern": "^[A-Za-z0-9_\\.]+$",
            "type": "string"
          },
          "speciesId": {
            "type": "integer",
            "description": "</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "requestType": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestTypeModel"
          },
          "ruleType": {
            "$ref": "#/components/schemas/CLAOData.Models.BusinessRulesConfig.ValidationRuleTypeEnum"
          },
          "requestTypeId": {
            "type": "integer",
            "description": "</br>Entity id for requestType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "processingFlag": {
            "$ref": "#/components/schemas/CLAOData.Models.ProcessingFlag"
          },
          "processingFlagId": {
            "type": "integer",
            "description": "</br>Entity id for processingFlag to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingPartyModify.HoldingPartyModifyModel": {
        "type": "object",
        "properties": {
          "holdings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingPartyModify.HoldingModify"
            },
            "description": "holdings and party to create or update\r\n* *Necessity*: \r\n* *Validation*:",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BulkImports.Movements.DeviceWithMovement": {
        "type": "object",
        "properties": {
          "moveType": {
            "$ref": "#/components/schemas/CLAOData.Models.DeviceMovementType"
          },
          "fromHolding": {
            "type": "string",
            "nullable": true
          },
          "moveDate": {
            "type": "string",
            "format": "date-time"
          },
          "device": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "toHolding": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.MovementDetails.MovementDetails": {
        "type": "object",
        "properties": {
          "toHolding": {
            "type": "string",
            "description": "The holding the animal was moved to.\r\nCan be CPH or MHS number.",
            "nullable": true
          },
          "animalTotal": {
            "type": "integer",
            "description": "Quantity of animals moved",
            "format": "int32"
          },
          "movementDetailsProcessingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.MovementDetails.MovementDetailsProcessingFlag"
            },
            "description": "Flags that will indicate animal movement details processing state.",
            "nullable": true
          },
          "fromHolding": {
            "type": "string",
            "description": "The holding the animal was moved from.\r\nCan be CPH or MHS number.",
            "nullable": true
          },
          "movementDocument": {
            "$ref": "#/components/schemas/CLAOData.Models.Transfer.MovementDocument"
          },
          "movementDate": {
            "type": "string",
            "description": "Date the animals were moved.",
            "format": "date-time"
          },
          "batches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Batch"
            },
            "description": "List of Batches of animals moved",
            "nullable": true
          },
          "documentType": {
            "type": "string",
            "description": "Type of Movement Document.\r\nDocument Types can be found at [DocumentTypes](#DocumentTypes)",
            "nullable": true
          },
          "documentRef": {
            "type": "string",
            "description": "Reference of the Movement Document",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "Species of the animal that moved.\r\nSpecies can be found at [Species](#Species)",
            "nullable": true
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Device"
            },
            "description": "List of Devices of individual animals moved",
            "nullable": true
          },
          "transportHaulierName": {
            "type": "string",
            "description": "Name of the Haulier that transported the animals",
            "nullable": true
          },
          "userHolding": {
            "type": "string",
            "description": "The holding the user who submitted the movement is associated with.\r\nCan be CPH or MHS number.",
            "nullable": true
          },
          "transportVehicleRegistrationNo": {
            "type": "string",
            "description": "Registration of the vehicle that transported the animals",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the details of an animal movement"
      },
      "CLAOData.Models.PaperMovement.PaperMovementError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A more detailed error message.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "The error code for the error.",
            "nullable": true
          },
          "target": {
            "type": "string",
            "description": "If populated, this is the JSON property path to the part of the request content that caused the error.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of a single error."
      },
      "CLAOData.Models.Duration": {
        "type": "object",
        "properties": {
          "hours": {
            "type": "integer",
            "format": "int32"
          },
          "days": {
            "type": "integer",
            "format": "int32"
          },
          "minutes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BulkImports.Animals.BulkRefreshAnimalModel": {
        "type": "object",
        "properties": {
          "species": {
            "type": "string",
            "nullable": true
          },
          "animalMovements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.BulkImports.Animals.AnimalWithMovement"
            },
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Request": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "The date and time at which the request was last updated by the system.",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "The date and time at which the request was received by the system.",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "The username of the user that submitted this request. For most users this will be their own username only.",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request",
            "nullable": true
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request.",
            "format": "int32"
          },
          "requestTypeId": {
            "type": "integer",
            "description": "The request type of this request. Use the table in the accompanying API overview document to match this to the specific request endpoint.",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Whether undo is supported for this request."
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Whether the request has been fully undone."
          }
        },
        "additionalProperties": false,
        "description": "Status information for a request queued on any of the request endpoints."
      },
      "CLAOData.Models.DeviceApplication.DeviceApplicationExtendedListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.DeviceApplication.DeviceApplicationExtended"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Transfer.DepartureDetail": {
        "type": "object",
        "properties": {
          "departureHoldingType": {
            "type": "string",
            "description": "Departure holding type\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits name values returned by [HoldingTypes](#HoldingTypes) endpoint",
            "nullable": true
          },
          "departureDateTime": {
            "type": "string",
            "description": "Date/Time the animals departed from the departure holding\r\n* *Necessity*: Required",
            "format": "date-time",
            "nullable": true
          },
          "departureKeeper": {
            "$ref": "#/components/schemas/CLAOData.Models.Contact"
          },
          "animalTotal": {
            "type": "integer",
            "description": "Total animals that departed the departure holding\r\n* *Necessity*: Optional\r\n* *Validation*:\r\n  * Value should be greater than 0\r\n  * If movement is an off movement, value should equal the total number of individual and batch identified animals on the movement",
            "format": "int32",
            "nullable": true
          },
          "loadingDateTime": {
            "type": "string",
            "description": "Date/time the animals were loaded on the transport\r\n* *Necessity*: Optional\r\n* *Validation*: Value should not be after the `departureDateTime`",
            "format": "date-time",
            "nullable": true
          },
          "departureOwner": {
            "$ref": "#/components/schemas/CLAOData.Models.Contact"
          },
          "expectedDurationOfJourney": {
            "$ref": "#/components/schemas/CLAOData.Models.Duration"
          }
        },
        "additionalProperties": false,
        "description": "Departure details captured from the departure holding\r\n* `departureKeeper` - departure keeper details\r\n  * *Necessity*: Optional\r\n* `departureOwner` - departure owner detail if different from keeper\r\n  * *Necessity*: Optional\r\n* `expectedDurationOfJourney` - Expected duration animal will be in transport\r\n  * *Necessity*: Optional\r\n  * *Validation*: Total duration should not be greater than 2 days"
      },
      "CLAOData.Models.Admin.Program.StandstillConfigListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.StandstillConfig"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.MovementDocumentValidation.DepartureDetail": {
        "type": "object",
        "properties": {
          "manualEntryHoldingAddress": {
            "type": "string",
            "description": "The address of the departure holding",
            "nullable": true
          },
          "holding": {
            "maxLength": 50,
            "type": "string",
            "description": "The identifier of the departure holding\r\n* *Necessity*: Required\r\n* *Validation*: Must be a valid CPH or MHS number",
            "nullable": true,
            "example": "26/001/8033"
          },
          "departureDate": {
            "$ref": "#/components/schemas/CLAOData.Models.MovementDocumentValidation.Date"
          }
        },
        "additionalProperties": false,
        "description": "Departure details concerning the departure holding for a movement\r\n* `DepartureDate` - date animals departed the holding\r\n  * *Necessity*: Required\r\n  * *Validation*: Must be a valid date that is not in the future"
      },
      "CLAOData.Models.Admin.DeviceAttributes.AttributeValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of the attribute this value applies to.\r\n\r\n* *Necessity*: Required.\r\n* *Validation*: \r\n    * Must be a valid attribute id for the attribute write package.",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "description": "The value of the attribute.\r\n\r\n* *Necessity*: Optional.\r\n* *Validation*:\r\n    * If the attribute is mandatory, then the value must not be null or empty.\r\n    * The value must be valid for the attribute data type:\r\n        * If data type is boolean:\r\n            * Value must be `true` or `false`\r\n        * If data type is date:\r\n            * Value must be in a valid date format.\r\n        * If data type is number:\r\n            * Must be in valid numeric format.\r\n            * Must not be lower than the attribute's configured minimum value, if any.\r\n            * Must not be higher than the attribute's configured maximum value, if any.\r\n        * If data type is device:\r\n            * Must be one of:\r\n                * Official visual tag number of animal with appropriate spacing between digits (see API guide for supported tag number formats).\r\n                * Radio Frequency Identifier (RFID) / Electronic Identification number (EID) of tag in device, ISO decimal or Hex representation.\r\n        * If data type is list:\r\n            * Must be a valid value for the list as defined in the [Attributes](#/Attributes) endpoint's description of the attribute.\r\n        * If data type is number:\r\n            * Must be in a valid decimal or exponential form.\r\n            * If the attribute has a minimum value configured, the value must be greater than or equal to that.\r\n            * If the attribute has a maximum value configured, the value must be less than or equal to that.\r\n        * If data type is string:\r\n            * If the attribute has a maximum string length configured, the value must not exceed that length.\r\n            * If the attribute has a validation regular expression configured, the expression must match against the value.\r\n        * If data type is holding:\r\n            * Must be a valid holding, market, or abattoir identifier.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value for a single attribute."
      },
      "CLAOData.Models.Transfer.TransportDetail": {
        "type": "object",
        "properties": {
          "transporterAuthNumber": {
            "type": "string",
            "description": "Transporter authorisation number (where journey is over 65km)\r\n* *Necessity*: Required if `transportType` = Haulier, optional otherwise\r\n* *Validation*: Maximum length 50 characters",
            "nullable": true
          },
          "transporterType": {
            "type": "string",
            "description": "The transport type name or code \r\n* *Necessity*: Required\r\n* *Validation*: Only permits name or code values returned by [TransporterTypes](#TransporterTypes) endpoint",
            "nullable": true
          },
          "transportVehicleRegistrationNo": {
            "type": "string",
            "description": "Registration number of vehicle being used to transport animals\r\n* *Necessity*: Optional\r\n* *Validation*: If specified must be between 2 and 10 upper or lower case letters or numbers",
            "nullable": true
          },
          "transporter": {
            "$ref": "#/components/schemas/CLAOData.Models.Contact"
          },
          "transportHaulierName": {
            "type": "string",
            "description": "Name of haulage company\r\n* *Necessity*: Required if `transportType` = Haulier, optional otherwise\r\n* *Validation*: Maximum length 50 characters",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Transport details\r\n* `transporter` - details about the person responsible for transporting the animals\r\n  * *Necessity*: Optional"
      },
      "CLAOData.Models.HoldingRegister.HoldingRegisterDeath": {
        "type": "object",
        "properties": {
          "deathReasonOther": {
            "type": "string",
            "description": "If no DeathReason was provided then this will contain a description of the death reason.",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Any comment attached to the death record.",
            "nullable": true
          },
          "deathReason": {
            "$ref": "#/components/schemas/CLAOData.Models.DeathReason.DeathReason"
          },
          "speciesId": {
            "type": "integer",
            "description": "The id of the species of the animal that died.</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "holdingRegisterId": {
            "type": "string",
            "description": "The id of the holding register for death.</br>Entity id for holdingRegister to be specified for the POST/PUT supported methods.",
            "nullable": true
          },
          "deathDate": {
            "type": "string",
            "description": "The date on which the animal died.",
            "format": "date-time"
          },
          "requestId": {
            "type": "integer",
            "description": "The id of the request that recorded the on farm death. See [OnFarmKillRequests({id})](#/OnFarmKillRequests/get_v1_OnFarmKillRequests__id__)\r\nto get the details of this request.",
            "format": "int32"
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "holdingRegister": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingRegister"
          },
          "disposalLocation": {
            "type": "string",
            "description": "The location where the carcass was disposed of.",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int64"
          },
          "isDeathOfUntaggedAnimal": {
            "type": "boolean",
            "description": "If true then the animal died before being tagged."
          },
          "animalIdentifier": {
            "type": "string",
            "description": "The batch number, tag number, RFID/EID, or freeze brand of the animal that died.",
            "nullable": true
          },
          "deathReasonId": {
            "type": "integer",
            "description": "The id of the DeathReason. See [DeathReasons](#/DeathReasons/get_v1_DeathReasons) for the list of valid values.</br>Entity id for deathReason to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A record of a death on a Holding Register's holding. This can include death of an untagged animal\r\nthat will not have a tag or batch number."
      },
      "CLAOData.Models.ApprovedMovement.ApprovedMovementDocumentFCIDetailNonCompliantDevice": {
        "type": "object",
        "properties": {
          "freezebrand": {
            "type": "string",
            "nullable": true
          },
          "fciDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementDocumentFCIDetail"
          },
          "approvedMovementNonCompliantDeviceId": {
            "type": "integer",
            "format": "int32"
          },
          "rfId": {
            "type": "string",
            "nullable": true
          },
          "fciDetailId": {
            "type": "integer",
            "description": "</br>Entity id for fciDetail to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "tagNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.UpdateDeviceStatus.UpdateDeviceStatusModel": {
        "type": "object",
        "properties": {
          "species": {
            "type": "string",
            "description": "The species name of animals.\r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint.",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "deviceStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.UpdateDeviceStatus.DeviceStatus"
            },
            "description": "A list of Device Statuses to be set or cleared.\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Must contain one or more items.\r\n  * Must not contain the same `device` multiple times.",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "Reason why status is set or cleared.\r\n* *Necessity*: Required\r\n* *Validation*: Maximum length 1024 characters.",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "updateDate": {
            "type": "string",
            "description": "Date of setting/clearing the status.\r\n* *Necessity*: Required\r\n* *Validation*: Must not be in the future.",
            "format": "date-time"
          },
          "statusCode": {
            "type": "string",
            "description": "Program status code of the status being set or cleared.\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Only permits `code` values returned by [ProgramStatuses](#ProgramStatuses) endpoint where `isActive` equals `true`.\r\n  * The program status must be part of the program identified by the `programCode`.\r\n  * Authenticated user must be the program administrator or authorised to set / clear the particular program status.",
            "nullable": true
          },
          "sourceOrganisationCode": {
            "type": "string",
            "description": "Source organisation code, should not be specified when POSTing request.\r\n* *Necessity*: Optional",
            "nullable": true
          },
          "programCode": {
            "type": "string",
            "description": "Program code of the status being set or cleared.\r\n* *Necessity*: Required\r\n* *Validation*: Only permits `programCode` values returned by [Programs](#Programs) endpoint where `isActive` equals `true`.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Update animal status request content.\r\n* `deviceStatuses` must contain one or more devices to have the status set or cleared.\r\n* `statusCode` of the program status must be active and allowed for devices."
      },
      "CLAOData.Models.WithdrawPreMovement.WithdrawPreMovement": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.WithdrawPreMovement.WithdrawPreMovementModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "Withdraw pre movement request"
      },
      "CLAOData.Models.AnnualInventory.DeleteAnnualInventoryModel": {
        "type": "object",
        "properties": {
          "annualInventorySpecies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.AnnualInventory.AnnualInventorySpecies"
            },
            "description": "List of Species recorded in the annual inventory",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.DeviceAttributes.AttributeDataType": {
        "enum": [
          "String",
          "Date",
          "Number",
          "Boolean",
          "Device",
          "List",
          "Holding"
        ],
        "type": "string",
        "description": "The possible data types an [Attribute](#/Attributes) can have."
      },
      "CLAOData.Models.Animals.BreedOnHoldingListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Animals.BreedOnHolding"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.AnnualInventory.AddAnnualInventory": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.AnnualInventory.AddAnnualInventoryModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.MovementDocumentValidation.ValidationRequest": {
        "type": "object",
        "properties": {
          "species": {
            "type": "string",
            "description": "The species of animals moved in the movement document\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Must be a non-empty value",
            "nullable": true,
            "example": "Sheep"
          },
          "documentId": {
            "type": "string",
            "description": "The id of the movement document in the client system.\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Must be a non-empty value",
            "nullable": true,
            "example": "12345A"
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "documentSource": {
            "type": "string",
            "description": "The origin of the movement document e.g. Keeper\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Must be a non-empty value",
            "nullable": true,
            "example": "Keeper"
          },
          "movementDocument": {
            "$ref": "#/components/schemas/CLAOData.Models.MovementDocumentValidation.MovementDocument"
          },
          "receivedDate": {
            "type": "string",
            "description": "The date and time at which the original document was received\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Value must be supplied\r\n  * Value may not be in the future",
            "format": "date-time",
            "nullable": true
          },
          "movementId": {
            "type": "string",
            "description": "The id of the movement.",
            "nullable": true
          },
          "documentSourceFormat": {
            "type": "string",
            "description": "The format of the original document that this request represents e.g. Paper\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Must be a non-empty value",
            "nullable": true,
            "example": "Paper"
          },
          "movementGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.MovementDocumentValidation.MovementGroup"
            },
            "description": "The groups of animals included in this movement",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A movement document submission and meta information to be validated.\r\n* `MovementDocument` - Movement Document details\r\n  * *Necessity*: Required\r\n* `MovementGroups` - Groups of animals to be moved\r\n  * *Necessity*: Optional"
      },
      "V1SightingMoveRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.Error.ErrorConfigListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Error.ErrorConfig"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.EditPreMovement.EditPreMovementListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.EditPreMovement.EditPreMovement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.StandstillConfigExemptHoldingLinkType": {
        "type": "object",
        "properties": {
          "holdingLinkType": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.HoldingLinkType"
          },
          "standstillConfig": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.StandstillConfig"
          },
          "standstillConfigId": {
            "type": "integer",
            "description": "</br>Entity id for standstillConfig to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "holdingLinkTypeId": {
            "type": "integer",
            "description": "</br>Entity id for holdingLinkType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.HoldingLinkType": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "linkType": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "isMaintained": {
            "type": "boolean"
          },
          "optionLabel": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of a holding type link"
      },
      "CLAOData.Models.BusinessRulesConfig.RequestTypeProcessingRule": {
        "required": [
          "isActive",
          "priority",
          "requestTypeId",
          "ruleName"
        ],
        "type": "object",
        "properties": {
          "dateMaxDaysSinceRecorded": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "holdings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.BusinessRulesConfig.RequestTypeProcessingRuleHolding"
            },
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/CLAOData.Models.RoleConfig"
          },
          "processingFlag": {
            "$ref": "#/components/schemas/CLAOData.Models.ProcessingFlag"
          },
          "ruleName": {
            "maxLength": 100,
            "type": "string"
          },
          "priority": {
            "maximum": 255,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "processingFlagId": {
            "type": "integer",
            "description": "</br>Entity id for processingFlag to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "roleId": {
            "type": "integer",
            "description": "</br>Entity id for role to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "dateSourceField": {
            "$ref": "#/components/schemas/CLAOData.Models.BusinessRulesConfig.ProcessingRuleSourceFieldCodeEnum"
          },
          "species": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.BusinessRulesConfig.RequestTypeProcessingRuleSpecies"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "requestType": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestTypeModel"
          },
          "requestTypeId": {
            "type": "integer",
            "description": "</br>Entity id for requestType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.BusinessRulesConfig.RequestTypeProcessingRuleResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ReplaceDevice.ReplaceDevice": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.ReplaceDevice.ReplaceDeviceModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingProgramStatus.HoldingProgramStatus": {
        "type": "object",
        "properties": {
          "holding": {
            "type": "string",
            "nullable": true
          },
          "programStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "programId": {
            "type": "integer",
            "format": "int32"
          },
          "setReason": {
            "type": "string",
            "nullable": true
          },
          "programStatusName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "holdingType": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingType"
          },
          "holdingTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "programStatusCode": {
            "type": "string",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "programCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Program status details currently set for a holding."
      },
      "CLAOData.Models.UndoRequest.UndoRequestModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "undoRequestId": {
            "type": "integer",
            "description": "The request id of the request to be undone.  The request id can be obtained from the [Requests](#Requests) endpoint.\r\n* *Necessity*: Required\r\n* *Validation*: \r\n  * The authenticated user must have originally created the request being undone (unless they are an administrator).\r\n  * The type of the request must support being undone. This can be verified by checking the [Requests](#Requests) endpoint if property `undoSupported` equals true.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Undo request content"
      },
      "CLAOData.Models.PendingMovement.PendingMovementDepartureDetail": {
        "type": "object",
        "properties": {
          "departureHoldingType": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingType"
          },
          "animalCount": {
            "type": "integer",
            "format": "int32"
          },
          "departureOwnerId": {
            "type": "integer",
            "description": "</br>Entity id for departureOwner to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "expectedDurationOfJourney": {
            "$ref": "#/components/schemas/CLAOData.Models.Duration"
          },
          "departureHoldingTypeId": {
            "type": "integer",
            "description": "</br>Entity id for departureHoldingType to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "departureOwner": {
            "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementContact"
          },
          "departureDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "departureKeeper": {
            "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementContact"
          },
          "loadingDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "departureKeeperId": {
            "type": "integer",
            "description": "</br>Entity id for departureKeeper to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "This represents departure details for an pending movement.\r\n\r\nThe model is analogous to the DepartureDetail model. See the DepartureDetail schema for details"
      },
      "CLAOData.Models.MovementDocumentValidation.MovementGroup": {
        "type": "object",
        "properties": {
          "batches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.MovementDocumentValidation.Batch"
            },
            "description": "The batches of the animals being moved",
            "nullable": true
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Device"
            },
            "description": "The tags of individually identified animals being moved\r\n* *Validation*: Devices should be uniue within a movement group and across a collection of movement groups.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A group of animals being moved in a movement document"
      },
      "CLAOData.Models.DeviceMovementType": {
        "enum": [
          "Unknown",
          "Birth",
          "Complete",
          "HalfOff",
          "HalfOn",
          "Death"
        ],
        "type": "string"
      },
      "CLAOData.Models.Kill.KillListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Kill.Kill"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "fullName": {
            "type": "string",
            "description": "The friendly name that should be displayed to the end user.",
            "nullable": true,
            "example": "Agricultural Holding"
          },
          "name": {
            "type": "string",
            "description": "Holding type name",
            "nullable": true,
            "example": "PRODUCER"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.TitemLTMaintenance": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.TitemLTMaintenanceModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "Update lifetime traceability status request."
      },
      "CLAOData.Models.TagUpload.TagUploadListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.TagUpload.TagUpload"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ExtendedDeviceDetail": {
        "type": "object",
        "properties": {
          "gender": {
            "type": "string",
            "nullable": true
          },
          "breed": {
            "type": "string",
            "nullable": true
          },
          "endBirthPeriod": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "beginBirthPeriod": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.AnnualInventoryStockTypeConfig.StockTypeConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique id of stock type",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of stock type",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingRegister.RunningTotalDataListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.RunningTotalData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1DeviceApplicationRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.ConfirmPreMovement.ConfirmPreMovement": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.ConfirmPreMovement.ConfirmPreMovementModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.PendingMovement.PendingMovementDetailsProcessingFlag": {
        "type": "object",
        "properties": {
          "pendingMovementDetailsId": {
            "type": "integer",
            "description": "</br>Entity id for pendingMovementDetails to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "pendingMovementDetails": {
            "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementDetails"
          },
          "processingFlagId": {
            "type": "integer",
            "description": "</br>Entity id for processingFlag to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "processingFlag": {
            "$ref": "#/components/schemas/CLAOData.Models.ProcessingFlag"
          }
        },
        "additionalProperties": false,
        "description": "A link between a pending movement and a processing flag"
      },
      "CLAOData.Models.PaperMovement.PaperMovementStatus": {
        "enum": [
          "NotAvailable",
          "HasValidationErrors",
          "HasProcessingErrors",
          "Complete",
          "Deleted"
        ],
        "type": "string",
        "description": "Paper movement status"
      },
      "CLAOData.Models.BusinessRulesConfig.RequestTypeProcessingRuleListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.BusinessRulesConfig.RequestTypeProcessingRule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1UndoPartialRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "V1WriteAttributeSchemaRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.Admin.Program.ProgramStatusInheritFromHolding": {
        "type": "object",
        "properties": {
          "delayDaysForTitemUserApplication": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "delayDaysForTitemSystemApplication": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "delayDaysForDeviceSystemDispatch": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "delayDaysForDeviceUploadDispatch": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "delayDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cascadeClearDeviceStatus": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.CountyListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.County"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.UpdateHoldingStatus.UpdateHoldingStatusModel": {
        "type": "object",
        "properties": {
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "Reason why status is set or cleared.\r\n* *Necessity*: Required\r\n* *Validation*: Maximum length 1024 characters.",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "updateDate": {
            "type": "string",
            "description": "Date of setting/clearing the status.\r\n* *Necessity*: Required\r\n* *Validation*: Must not be in the future.",
            "format": "date-time"
          },
          "statusCode": {
            "type": "string",
            "description": "Program status code of the status being set or cleared.\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Only permits `code` values returned by [ProgramStatuses](#ProgramStatuses) endpoint where `isActive` equals `true`.\r\n  * The program status must be part of the program identified by the `programCode`.\r\n  * Authenticated user must be the program administrator or authorised to set / clear the particular program status.",
            "nullable": true
          },
          "holdingStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.UpdateHoldingStatus.HoldingStatus"
            },
            "description": "A list of holding statuses to be set or cleared.\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Must contain one or more items.\r\n  * Must not contain the same `holding` multiple times.",
            "nullable": true
          },
          "sourceOrganisationCode": {
            "type": "string",
            "description": "Source organisation code, should not be specified when POSTing request.\r\n* *Necessity*: Optional",
            "nullable": true
          },
          "programCode": {
            "type": "string",
            "description": "Program code of the status being set or cleared.\r\n* *Necessity*: Required\r\n* *Validation*: Only permits `programCode` values returned by [Programs](#Programs) endpoint where `isActive` equals `true`.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Update holding status request content.\r\n* `holdingStatuses` must contain one or more holdings to have the status set or cleared.\r\n* `statusCode` of the program status must be active and be allowed for holdings."
      },
      "V1PreMovementRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "V1MovementDetails-documentRef-documentRef-documentType-documentType-Get200ApplicationJsonResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CLAOData.Models.MovementDetails.MovementDetails"
        }
      },
      "CLAOData.Models.TitleListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Title"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1KillDetailRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.UpdateHoldingStatus.UpdateHoldingStatusListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.UpdateHoldingStatus.UpdateHoldingStatus"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingRegister.HoldingRegisterListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingRegister"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.PendingMovement.PendingMovementDevice": {
        "type": "object",
        "properties": {
          "tagNumber": {
            "type": "string",
            "description": "Official visual tag number",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "rfid": {
            "type": "string",
            "description": "Radio Frequency Identifier (RFID) / Electronic Identification number (EID) of tag",
            "nullable": true
          },
          "pendingMovement": {
            "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementDetails"
          },
          "pendingMovementId": {
            "type": "integer",
            "description": "</br>Entity id for pendingMovement to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.GenderSpecies": {
        "type": "object",
        "properties": {
          "genderId": {
            "type": "integer",
            "description": "</br>Entity id for gender to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "name": {
            "type": "string",
            "description": "The gender species name\r\n* *Necessity* Required\r\n* *Validation* String, maximum length 20",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/CLAOData.Models.Gender"
          },
          "speciesId": {
            "type": "integer",
            "description": "The species id of the animal</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Gender Species information"
      },
      "CLAOData.Models.Admin.Program.ProgramStatusNotificationSpecies": {
        "type": "object",
        "properties": {
          "programStatusNotificationId": {
            "type": "integer",
            "format": "int32"
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "speciesId": {
            "type": "integer",
            "description": "</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Infrastructure.ErrorHandling.CLAError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Infrastructure.ErrorHandling.CLAErrorDetails"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1BulkRefreshAnimalRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "V1BulkAnimalImportRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.Admin.Program.ProgramRegionCountyListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramRegionCounty"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingRegister.RunningTotalRequestDetail": {
        "type": "object",
        "properties": {
          "editDeviceGenderAllowed": {
            "type": "boolean",
            "description": "Is edit device gender allowed"
          },
          "runningTotalRequestDetailData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.RunningTotalRequestDetailData"
            },
            "description": "List of attributes associated with the request",
            "nullable": true
          },
          "undoPermitted": {
            "type": "boolean",
            "description": "UndoPermitted  by user",
            "nullable": true
          },
          "runningTotalRequestDetailStockData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.RunningTotalRequestDetailStockData"
            },
            "description": "List of stock associated with the request, this will be Tag details",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ReviewHoldingMovement.ReviewBatch": {
        "type": "object",
        "properties": {
          "idMark": {
            "maxLength": 50,
            "type": "string",
            "description": "Description of the batch of animals\r\n* *Necessity*: Optional\r\n* *Validation*: String maximum length 50",
            "nullable": true
          },
          "batchMovementId": {
            "type": "integer",
            "description": "The batch movement Id that this batch belongs to.\r\n* *Necessity*: Required\r\n* *Validation*: Must be a valid `reviewBatches.batchMovementId` returned from the [HoldingMovementForReviews](#HoldingMovementForReviews) endpoint for the movement `requestId` being reviewed.",
            "format": "int32"
          },
          "batchNumber": {
            "type": "string",
            "description": "Batch number of group of animals (i.e the herd or flock number)\r\n* *Necessity*: Required\r\n* *Validation*: String is in the batch number format supported for the species (see API guide for supported batch number formats)",
            "nullable": true
          },
          "stockType": {
            "type": "string",
            "description": "Stock type of the batch of animals\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits stock type name values returned by [StockTypes](#StockTypes) endpoint for species",
            "nullable": true
          },
          "animalTotal": {
            "type": "integer",
            "description": "Total animals in batch\r\n* *Necessity*: Required\r\n* *Validation*: Integer greater than 0",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ReviewHoldingMovement.ReviewMovement": {
        "type": "object",
        "properties": {
          "rejectedDevices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Device"
            },
            "description": "Devices of the movement being rejected. This being the individual identified animals that did not move.\r\n* *Necessity*: Optional\r\n* *Validation*:\r\n  * Must only contain `reviewDevices` items returned by the [HoldingMovementForReviews](#HoldingMovementForReviews) endpoint for the movement `requestId` being reviewed.\r\n  * Either `acceptedDevices` or `rejectedDevices` must contain every `reviewDevices` returned from the [HoldingMovementForReviews](#HoldingMovementForReviews) endpoint for the movement `requestId` being reviewed.",
            "nullable": true
          },
          "rejectedBatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.ReviewBatch"
            },
            "description": "Batches of the movement being rejected. This being the batch identified animals that did not move.\r\n* *Necessity*: Optional\r\n* *Validation*:\r\n  * Must only contain `reviewBatches` items returned by the [HoldingMovementForReviews](#HoldingMovementForReviews) endpoint for the movement `requestId` being reviewed.\r\n  * Either `acceptedBatches` or `rejectedBatches` must contain every item in `reviewBatches` returned from the [HoldingMovementForReviews](#HoldingMovementForReviews) endpoint for the movement `requestId` being reviewed.",
            "nullable": true
          },
          "acceptedBatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.ReviewBatch"
            },
            "description": "Batches of the movement being accepted. This being the batch identified animals that moved.\r\n* *Necessity*: Optional\r\n* *Validation*:\r\n  * Must only contain `reviewBatches` items returned by the [HoldingMovementForReviews](#HoldingMovementForReviews) endpoint for the movement `requestId` being reviewed.\r\n  * Either `acceptedBatches` or `rejectedBatches` must contain every item in `reviewBatches` returned by the [HoldingMovementForReviews](#HoldingMovementForReviews) endpoint for the movement `requestId` being reviewed.",
            "nullable": true
          },
          "isAccepted": {
            "type": "boolean",
            "description": "Indication of whether the movement is accepted or rejected. If movement is being partially accepted this value should equal `true`.\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Must equal `true` if either `acceptedDevices` or `acceptedBatches` contains one or more items.\r\n  * Must equal `false` if both `acceptedDevices` and `acceptedBatches` contains zero items.",
            "nullable": true
          },
          "requestId": {
            "type": "integer",
            "description": "Request Id of the movement that is being reviewed.\r\n* *Necessity*: Required\r\n* *Validation*: Must be the `requestId` of a movement available for review returned by the [HoldingMovementForReviews](#HoldingMovementForReviews) endpoint.",
            "format": "int32"
          },
          "animalTotal": {
            "type": "integer",
            "description": "The total number of animals in the movement. This includes both batches and individual devices.\r\n* *Necessity*: Required\r\n* *Validation*: Greater than 0",
            "format": "int32",
            "example": 1
          },
          "arrivalDate": {
            "type": "string",
            "description": "The date the animals arrived at the holding\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Must be a valid date no more than a configurable number of days after the departure date (default 1).",
            "format": "date-time"
          },
          "acceptedDevices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Device"
            },
            "description": "Devices of the movement being accepted. This being the individual identified animals that moved.\r\n* *Necessity*: Optional\r\n* *Validation*:\r\n  * Must only contain `reviewDevices` items returned by the [HoldingMovementForReviews](#HoldingMovementForReviews) endpoint for the movement `requestId` being reviewed.\r\n  * Either `acceptedDevices` or `rejectedDevices` must contain every item in `reviewDevices` returned from the [HoldingMovementForReviews](#HoldingMovementForReviews) endpoint for the movement `requestId` being reviewed.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1CorrectTransferRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.SystemTag.SystemTagCreationListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SystemTag.SystemTagCreation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.PreMovement.PreMovementListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.PreMovement.PreMovement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Batch": {
        "type": "object",
        "properties": {
          "idMark": {
            "maxLength": 50,
            "type": "string",
            "description": "Description of the batch of animals\r\n* *Necessity*: Optional\r\n* *Validation*: String maximum length 50",
            "nullable": true
          },
          "stockType": {
            "type": "string",
            "description": "Stock type of the batch of animals\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits stock type name values returned by [StockTypes](#StockTypes) endpoint for species",
            "nullable": true
          },
          "batchNumber": {
            "type": "string",
            "description": "Batch number of group of animals (i.e the herd or flock number)\r\n* *Necessity*: Required\r\n* *Validation*: String is in the batch number format supported for the species (see API guide for supported batch number formats)",
            "nullable": true
          },
          "animalTotal": {
            "type": "integer",
            "description": "Total animals in batch\r\n* *Necessity*: Required\r\n* *Validation*: Integer greater than 0",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.DeviceAttributes.BatchAttributeData": {
        "type": "object",
        "properties": {
          "animalCount": {
            "type": "integer",
            "description": "The count of animals in the batch.\r\n\r\n* *Necessity*: Required.\r\n* *Validation*: Must be greater than zero and less than 100000.",
            "format": "int32"
          },
          "idMark": {
            "type": "string",
            "description": "The ID mark for the batch\r\n\r\n* *Necessity*: Optional.\r\n* *Validation*: Max length of 50 characters.",
            "nullable": true
          },
          "previousHolding": {
            "type": "string",
            "description": "The previous holding the batch was on.\r\n\r\n* *Necessity*: Optional.\r\n* *Validation*: \r\n    * Must be a valid holding, market, or abattoir identifier.\r\n    * Must not be the same as the holding specified on the AttributeSchema for this request.",
            "nullable": true
          },
          "dateTimeCollected": {
            "type": "string",
            "description": "Date and time the attribute values were collected.\r\n\r\n* *Necessity*: Required.\r\n* *Validation*: Must not be in the future.",
            "format": "date-time"
          },
          "batchNumber": {
            "type": "string",
            "description": "The batch number.\r\n\r\n* *Necessity*: Required.\r\n* *Validation*:\r\n    * Must be a valid batch number.\r\n    * If the attribute package allows unknown batch numbers, may be 'UNKNOWN'.",
            "nullable": true
          },
          "attributeValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.AttributeValue"
            },
            "description": "The attribute values to update for the batch.\r\n\r\n* *Necessity*: Required.\r\n* *Validation*:\r\n    * Must provide at least one attribute value.\r\n    * Multiple attributes with the same id are not permitted.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A batch that should have its attributes updated."
      },
      "CLAOData.Models.BulkImports.Animals.BulkAnimalImportModel": {
        "type": "object",
        "properties": {
          "species": {
            "type": "string",
            "nullable": true
          },
          "animalMovements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.BulkImports.Animals.AnimalWithMovement"
            },
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Animals.AnimalTagReplacement": {
        "type": "object",
        "properties": {
          "animal": {
            "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalDetail"
          },
          "replacementDate": {
            "type": "string",
            "description": "The date when the replacement occurred.",
            "format": "date-time"
          },
          "replacementId": {
            "type": "integer",
            "description": "System generated identifier for tag replacement.",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "description": "System generated identifier for an animal.",
            "format": "int32"
          },
          "replacedIdentifier": {
            "type": "string",
            "description": "The old tag that was replaced.",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "The species id of the animal.",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "description": "Any comment that was put as part of the tag replacement.",
            "nullable": true
          },
          "replacementReason": {
            "$ref": "#/components/schemas/CLAOData.Models.ReplacementReason"
          },
          "replacingIdentifier": {
            "type": "string",
            "description": "The new tag that was applied to the animal.",
            "nullable": true
          },
          "replacementHolding": {
            "type": "string",
            "description": "The holding CPH on which the tag replacement occurred.",
            "nullable": true
          },
          "requestId": {
            "type": "integer",
            "description": "The request that recorded the tag replacement.",
            "format": "int32",
            "nullable": true
          },
          "replacementReasonId": {
            "type": "integer",
            "description": "The id for the reason the tag was replaced.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingDetailsAndPartyModify.HoldingDetailsAndPartyModify": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingDetailsAndPartyModify.HoldingDetailsAndPartyModifyModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "holdinsDetailsAndPartyModify"
      },
      "CLAOData.Models.Admin.Program.ProgramStatusNotificationRequestType": {
        "type": "object",
        "properties": {
          "programStatusNotificationId": {
            "type": "integer",
            "format": "int32"
          },
          "requestTypeId": {
            "type": "integer",
            "description": "</br>Entity id for requestType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "requestType": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestTypeModel"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ApprovedMovement.ApprovedMovementContact": {
        "type": "object",
        "properties": {
          "county": {
            "$ref": "#/components/schemas/CLAOData.Models.County"
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "telephoneNumber": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "countyId": {
            "type": "integer",
            "description": "</br>Entity id for county to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "town": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.NotAppliedTag.NotAppliedTag": {
        "type": "object",
        "properties": {
          "holding": {
            "type": "string",
            "description": "The CPH of the holding associated with the tag",
            "nullable": true
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "speciesId": {
            "type": "integer",
            "description": "</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "tagDispatchDate": {
            "type": "string",
            "description": "Date of when the tag was dispatched",
            "format": "date-time"
          },
          "requestId": {
            "type": "integer",
            "description": "The request id that uploaded this tag to the system.",
            "format": "int32"
          },
          "freezebrand": {
            "type": "string",
            "description": "Freezebrand",
            "nullable": true
          },
          "tagNumber": {
            "type": "string",
            "description": "Official visual tag number",
            "nullable": true
          },
          "rfid": {
            "type": "string",
            "description": "Radio Frequency Identifier (RFID) / Electronic Identification number (EID) of tag",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.UndoRequest.UndoRequest": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.UndoRequest.UndoRequestModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "Undo request"
      },
      "CLAOData.Models.UndoRequest.UndoRequestListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.UndoRequest.UndoRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Breed": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "pattern": "^[A-Za-z0-9_\\. ]+$",
            "type": "string",
            "description": "The breed name\r\n* *Necessity* Required"
          },
          "isPrimary": {
            "type": "boolean",
            "description": "Is the breed commonly used\r\n* *Necessity* Required\r\n* *Validation* true or false"
          },
          "isCrossBreed": {
            "type": "boolean",
            "description": "Is the breed a crossbreed\r\n* *Necessity* Required\r\n* *Validation* true or false"
          },
          "speciesId": {
            "type": "integer",
            "description": "The species id of the animal</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "bcmsBreedCode": {
            "maxLength": 10,
            "pattern": "^[A-Za-z0-9_\\. ]*$",
            "type": "string",
            "description": "The BCMS Breed Code\r\n* *Necessity* Optional",
            "nullable": true
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          }
        },
        "additionalProperties": false,
        "description": "Breed information"
      },
      "CLAOData.Models.HoldingRegister.HoldingRegisterBirth": {
        "type": "object",
        "properties": {
          "genderSpecies": {
            "$ref": "#/components/schemas/CLAOData.Models.BirthGenderSpecies"
          },
          "sireIdentifier": {
            "type": "string",
            "description": "The tag number, RFID/EID, or freeze brand of this animal's sire",
            "nullable": true
          },
          "animalIdentifier": {
            "type": "string",
            "description": "The batch number, tag number, RFID/EID, or freeze brand of the animal that was born or tagged.",
            "nullable": true
          },
          "breedId": {
            "type": "integer",
            "description": "The id of the breed of this animal. See the [Breeds](#/Breeds) endpoint for a full list of possible breeds for all species.</br>Entity id for breed to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "dateApplied": {
            "type": "string",
            "description": "The date on which the tag was applied",
            "format": "date-time"
          },
          "genotype": {
            "type": "string",
            "description": "Genotype information for this animal.",
            "nullable": true
          },
          "genderId": {
            "type": "integer",
            "description": "The id of the gender of this animal. See the [Genders](#/Genders) endpoint for a full list of possible genders.</br>Entity id for genderSpecies to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "The comment recorded against this birth when the tag application was recorded.",
            "nullable": true
          },
          "damIdentifier": {
            "type": "string",
            "description": "The tag number, RFID/EID, or freeze brand of this animal's dam",
            "nullable": true
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "endBirthPeriod": {
            "type": "string",
            "description": "Date of latest possible birth date",
            "format": "date-time",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "The id of this animal's species.</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "requestId": {
            "type": "integer",
            "description": "The id of the request that recorded tag application or birth.",
            "format": "int32",
            "nullable": true
          },
          "breed": {
            "$ref": "#/components/schemas/CLAOData.Models.Breed"
          },
          "beginBirthPeriod": {
            "type": "string",
            "description": "Date of earliest possible birth date",
            "format": "date-time",
            "nullable": true
          },
          "holdingRegisterId": {
            "type": "string",
            "description": "The id of the Holding Register this birth relates to",
            "nullable": true
          },
          "geneticDamIdentifier": {
            "type": "string",
            "description": "The tag number, RFID/EID, or freeze brand of this animal's genetic dam",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.ProgramStatusAuthorisationListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatusAuthorisation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ReviewHoldingMovement.HoldingMovementForReviewListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ReviewHoldingMovement.HoldingMovementForReview"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.AutoClearAction": {
        "enum": [
          "Permanent",
          "ClearAfterRemovalPeriod",
          "ClearOnMoveAfterRemovalPeriod",
          "ClearAtEndOfClearDate"
        ],
        "type": "string"
      },
      "CLAOData.Models.Sighting.SightingListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Sighting.Sighting"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingRegister.HoldingRegisterMHSNumber": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "mhsNumber": {
            "type": "string",
            "description": "The MHS number",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An abattoir MHS number for a holding register"
      },
      "CLAOData.Models.Admin.Notification.ErrorNotificationSubscriptionListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Notification.ErrorNotificationSubscription"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1EditPreMovementRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.RequestTypeProcessingFlag": {
        "type": "object",
        "properties": {
          "speciesId": {
            "type": "integer",
            "description": "Species\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits species ids returned by the [Species](#Species) endpoint</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "processingFlag": {
            "$ref": "#/components/schemas/CLAOData.Models.ProcessingFlag"
          },
          "processingFlagId": {
            "type": "integer",
            "description": "Processing Flag Id\r\nWill be generated when the processing flag is created\r\n* *Necessity*: Optional\r\n* *Validation*:</br>Entity id for processingFlag to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "requestTypeId": {
            "type": "integer",
            "description": "Request Type\r\n* *Necessity*: Required\r\n* *Validation*: Only permits request type ids returned by the [RequestTypes](#RequestTypes) endpoint</br>Entity id for requestType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "requestType": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestTypeModel"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Animals.AnimalLocationHistory": {
        "type": "object",
        "properties": {
          "fromDate": {
            "type": "string",
            "description": "The start date for when the animal came on this holding",
            "format": "date-time"
          },
          "deviceId": {
            "type": "integer",
            "description": "System generated identifier for an animal.",
            "format": "int32"
          },
          "animal": {
            "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalDetail"
          },
          "speciesId": {
            "type": "integer",
            "description": "The species id of the animal.",
            "format": "int32"
          },
          "holding": {
            "type": "string",
            "description": "The CPH of the holding where the animal is",
            "nullable": true
          },
          "toDate": {
            "type": "string",
            "description": "The end date for when the animal came off this holding",
            "format": "date-time"
          },
          "deviceLocationId": {
            "type": "integer",
            "description": "System generated identifier for an animal location.",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.SystemTag.SystemTagApplicationListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SystemTag.SystemTagApplication"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Animals.AnimalState": {
        "enum": [
          "NotApplied",
          "Alive",
          "Dead",
          "Purged"
        ],
        "type": "string",
        "description": "The state of the animal in the system e.g. dead, alive."
      },
      "CLAOData.Models.Error.ErrorConfig": {
        "type": "object",
        "properties": {
          "overrideMessage": {
            "type": "string",
            "nullable": true
          },
          "errorType": {
            "$ref": "#/components/schemas/CLAOData.Models.Error.ErrorType"
          },
          "overrideProcessingFlagId": {
            "type": "integer",
            "description": "</br>Entity id for overrideProcessingFlag to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "overrideWithMessage": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "errorDescription": {
            "type": "string",
            "nullable": true
          },
          "overrideProcessingFlag": {
            "$ref": "#/components/schemas/CLAOData.Models.ProcessingFlag"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.HoldingMHSNumberListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.HoldingMHSNumber"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.DeviceApplication.DeviceApplicationModel": {
        "required": [
          "dateOfApplication",
          "holding",
          "species"
        ],
        "type": "object",
        "properties": {
          "genotype": {
            "type": "string",
            "description": "Genotype of animals tagged\r\n* *Necessity*: Optional\r\n* *Validation*: String, no limit on length",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Comment for own use \r\n* *Necessity*: Optional\r\n* *Validation*: String, no limit on length",
            "nullable": true
          },
          "breed": {
            "type": "string",
            "description": "Breed name of animals\r\n* *Necessity*: Optional for species sheep, goats and pigs.\r\n* *Validation*: Only permits breed name values returned by [Breeds](#Breeds) endpoint for species",
            "nullable": true
          },
          "dateOfBirthRangeEnd": {
            "type": "string",
            "description": "Date of latest possible birth date of animals tagged\r\n* *Necessity*: Optional for species sheep, goats and pigs. Required if `dateOfBirthRangeStart` is specified\r\n* *Validation*: Must not be in the future or after the `dateOfApplication`.  The number of days between `dateOfBirthRangeStart` and `dateOfBirthRangeEnd` must less then 31 days",
            "format": "date-time",
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Device"
            },
            "description": "Collection of individual identified animals tagged\r\n* *Necessity*: Either `devices` or `batches` must contain one or more items",
            "nullable": true
          },
          "batches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Batch"
            },
            "description": "Collection of batch identified animals tagged\r\n* *Necessity*: Either `devices` or `batches` must contain one or more items",
            "nullable": true
          },
          "dateOfBirthRangeStart": {
            "type": "string",
            "description": "Date of earliest possible birth date of animals tagged\r\n* *Necessity*: Optional for species sheep, goats and pigs. Required if `dateOfBirthRangeEnd` is specified\r\n* *Validation*: Must not be in the future or after the `dateOfApplication`. The number of days between `dateOfBirthRangeStart` and `dateOfBirthRangeEnd` must less then 31 days",
            "format": "date-time",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "The species name of animals tagged\r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint"
          },
          "holding": {
            "type": "string",
            "description": "The CPH of the holding where the animals were tagged\r\n* *Necessity*: Required\r\n* *Validation*: User must be associated with holding"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "dateOfApplication": {
            "type": "string",
            "description": "Date tags were applied\r\n* *Necessity*: Required\r\n* *Validation*: Must not be in the future",
            "format": "date-time"
          },
          "gender": {
            "type": "string",
            "description": "GenderName Or GenderSpecieName of animals\r\n* *Necessity*: Optional for species sheep, goats and pigs.\r\n* *Validation*: Only permits gender species name values returned by [GenderSpecies](#GenderSpecies) endpoint for species OR Only permits gender name values returned by [Genders](#Genders) endpoint",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BusinessRulesConfig.SpeciesConfig": {
        "type": "object",
        "properties": {
          "batchIdentificationSupported": {
            "type": "boolean"
          },
          "allowDeviceApplicationInEvent": {
            "type": "boolean"
          },
          "eidSpeciesCode": {
            "type": "integer",
            "format": "int32"
          },
          "dobIntervalExactDateRange": {
            "type": "boolean"
          },
          "dobIntervalRequired": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "deviceIdentificationSupported": {
            "type": "boolean"
          },
          "maxDobInterval": {
            "type": "integer",
            "format": "int32"
          },
          "generateDeviceRangeSupported": {
            "type": "boolean"
          },
          "createUnknownDevice": {
            "type": "boolean"
          },
          "batchNumberFriendlyName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Details of a species configuration"
      },
      "CLAOData.Models.TagUpload.TagUploadModel": {
        "type": "object",
        "properties": {
          "tagOrderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.TagUpload.TagOrderItem"
            },
            "description": "List of tag order items",
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingTypeListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HerdDisable.Herd": {
        "type": "object",
        "properties": {
          "herdRef": {
            "type": "string",
            "description": "The unique ref for the herd.\r\n* *Necessity*: Required",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HerdDisable.HerdDisableModel": {
        "type": "object",
        "properties": {
          "herds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HerdDisable.Herd"
            },
            "description": "Herds to disable\r\n* *Necessity*: Required\r\n* *Validation*:",
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Notification.RequestStatusNotification": {
        "type": "object",
        "properties": {
          "requestSubmittedByEmail": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "requestTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "V1KillRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.Admin.Program.StandstillConfig": {
        "type": "object",
        "properties": {
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "programStatusId": {
            "type": "integer",
            "description": "</br>Entity id for programStatus to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "standstillConfigExemptHoldingLinkTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.StandstillConfigExemptHoldingLinkType"
            },
            "nullable": true
          },
          "holdingTypeId": {
            "type": "integer",
            "description": "Holding type id</br>Entity id for holdingType to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "Species Id</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "standstillConfigHoldingLinkTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.StandstillConfigHoldingLinkType"
            },
            "nullable": true
          },
          "programStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatus"
          },
          "holdingType": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingType"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.RequestStatus": {
        "enum": [
          "NotAvailable",
          "Pending",
          "Processing",
          "Success",
          "Fail",
          "QueueFail",
          "CompletedError",
          "Rejected",
          "Cancelled",
          "CompletedWarning"
        ],
        "type": "string"
      },
      "CLAOData.Models.BulkImports.Movements.BulkAddMovementModel": {
        "type": "object",
        "properties": {
          "species": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "movements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.BulkImports.Movements.DeviceWithMovement"
            },
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ApprovedMovement.ApprovedMovementDocumentFCIDetail": {
        "type": "object",
        "properties": {
          "nonCompliantDevices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementDocumentFCIDetailNonCompliantDevice"
            },
            "nullable": true
          },
          "withdrawalPeriodObservedText": {
            "type": "string",
            "nullable": true
          },
          "nonCompliantReason": {
            "type": "string",
            "nullable": true
          },
          "holdingRestrictions": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "withdrawalPeriodMetId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isAllAnimalsFCICompliant": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingRegister.HoldingBatchNumber": {
        "type": "object",
        "properties": {
          "holdingRegisterHoldingBatchNumber": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingRegisterHoldingBatchNumber"
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "holdingBatchNumberId": {
            "type": "string",
            "description": "The batch number.",
            "nullable": true,
            "example": "UK244220"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "speciesId": {
            "type": "integer",
            "description": "The id of the species of animals in this batch.</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A batch number linked to"
      },
      "CLAOData.Models.UpdateMultipleAnimals.UpdateMultipleAnimals": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.UpdateMultipleAnimals.UpdateMultipleAnimalsModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.AnnualInventoryStockTypeConfig.AnnualInventoryStockTypeConfig": {
        "type": "object",
        "properties": {
          "yearStartDay": {
            "type": "integer",
            "description": "Day holding's inventory year starts",
            "format": "int32",
            "nullable": true
          },
          "stockTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.AnnualInventoryStockTypeConfig.StockTypeConfig"
            },
            "description": "Collection of stock type appropriate for holding and species",
            "nullable": true
          },
          "yearStartMonth": {
            "type": "integer",
            "description": "Month holding's inventory year starts",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HerdModify.Herd": {
        "required": [
          "batchNumber",
          "herdRef",
          "holdingId",
          "species",
          "vetNetCoreId"
        ],
        "type": "object",
        "properties": {
          "productionType": {
            "type": "string",
            "description": "* *Necessity*: Optional\r\n* *Validation*:",
            "nullable": true
          },
          "herdRef": {
            "maxLength": 80,
            "type": "string",
            "description": "* *Necessity*: Required\r\n* *Validation*: Maximum 80 characters"
          },
          "batchNumber": {
            "type": "string",
            "description": "Batch number of group of animals (i.e the herd or flock number)\r\n* *Necessity*: Required\r\n* *Validation*: String is in the batch number format supported for the species (see API guide for supported batch number formats)"
          },
          "vetNetCoreId": {
            "maxLength": 80,
            "type": "string",
            "description": "* *Necessity*: Required\r\n* *Validation*: Maximum 80 characters"
          },
          "holdingId": {
            "type": "integer",
            "description": "* *Necessity*: Required\r\n* *Validation*: Must be an Id for an existing holding",
            "format": "int32"
          },
          "species": {
            "type": "string",
            "description": "The species name of animals tagged\r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.DeviceAttributes.DeviceAttributeReadSchema": {
        "type": "object",
        "properties": {
          "readSchemaAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.ReadSchemaAttribute"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A collection of attributes that can be read from devices or batches."
      },
      "CLAOData.Models.UndoRequest.UndoPartialRequestModel": {
        "type": "object",
        "properties": {
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Device"
            },
            "description": "Collection of individual identified animals to have request actions undone for.\r\n* *Necessity*: Either `devices` or `batches` must contain one or more items.\r\n* *Validation*: Animal identifiers must be in the original request being undone.",
            "nullable": true
          },
          "undoPartialRequestId": {
            "type": "integer",
            "description": "The request id of the request to be partially undone.  The request id can be obtained from the [Requests](#Requests) endpoint.\r\n* *Necessity*: Required\r\n* *Validation*: \r\n  * The authenticated user must have originally created the request being undone (unless they are an administrator).\r\n  * The type of the request must support being undone. This can be verified by checking the [Requests](#Requests) endpoint if property `undoSupported` equals true.",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "batches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Batch"
            },
            "description": "Collection of batch identified animals to have request actions undone for.\r\n* *Necessity*: Either `devices` or `batches` must contain one or more items.\r\n* *Validation*: combination of `batchNumber` and `animalTotal` must be in the original request being undone.",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "The species name of animals to be undone.\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Only permits species name values returned by [Species](#Species) endpoint.\r\n  * Species must match the species of the animals in the original request being undone.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Partial undo request content"
      },
      "CLAOData.Models.AnnualInventory.AnnualInventorySpecies": {
        "type": "object",
        "properties": {
          "inventoryDate": {
            "type": "string",
            "description": "Year start date for the inventory of holding and species.\r\n* *Necessity*: Required\r\n* *Validation*: Must have month and day matching [GetAnnualInventoryStockTypeConfig](#HoldingRegisterFunctions/get_v1_GetAnnualInventoryStockTypeConfig_holding__holding__species__species__). Cannot be in the future.",
            "format": "date-time",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "Species of Annual Inventory\r\n* *Necessity*: Required\r\n* *Validation*: Valid species name from [Species](#Species). The Species must also support having the annual inventory recorded, this can be identified from [GetAnnualInventoryStockTypeConfig](#HoldingRegisterFunctions/get_v1_GetAnnualInventoryStockTypeConfig_holding__holding__species__species__).",
            "nullable": true
          },
          "enteredDate": {
            "type": "string",
            "description": "Date Annual Inventory was recorded\r\n* *Necessity*: Required\r\n* *Validation*: Cannot be in the future. Cannot be before `inventoryDate` or more than 31 days after `inventoryDate`.",
            "format": "date-time",
            "nullable": true
          },
          "annualInventoryStocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.AnnualInventory.AnnualInventoryStock"
            },
            "description": "List of Stocks recorded for the Species",
            "nullable": true
          },
          "holding": {
            "type": "string",
            "description": "Holding of Annual Inventory\r\n* *Necessity*: Required\r\n* *Validation*: User must be associated with holding",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.KillData.KillDetailsListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.KillData.KillDetails"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.ProgramStatusDisclosureRule": {
        "required": [
          "programStatusId",
          "ruleOrder"
        ],
        "type": "object",
        "properties": {
          "holdingType": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingType"
          },
          "role": {
            "type": "string",
            "description": "User role.  Mutually exclusive with user email address.",
            "nullable": true
          },
          "disclose": {
            "type": "boolean"
          },
          "ruleOrder": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "holdingLinkedToUser": {
            "type": "boolean",
            "nullable": true
          },
          "programStatusId": {
            "type": "integer",
            "description": "Id of Program Status this disclosure rule belongs to</br>Entity id for programStatus to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "userEmailAddress": {
            "type": "string",
            "description": "User email address.  Mutually exclusive with role.",
            "nullable": true
          },
          "programStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatus"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "deviceOnHolding": {
            "type": "boolean",
            "nullable": true
          },
          "isHoldingRule": {
            "type": "boolean"
          },
          "isDeviceRule": {
            "type": "boolean"
          },
          "holdingTypeId": {
            "type": "integer",
            "description": "</br>Entity id for holdingType to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.RequestTypeProcessingFlagListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestTypeProcessingFlag"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ApprovedMovement.ApprovedMovementDocumentDestinationDetail": {
        "type": "object",
        "properties": {
          "destinationHoldingType": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingType"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "destinationHoldingTypeId": {
            "type": "integer",
            "description": "</br>Entity id for destinationHoldingType to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "hasKeeperChanged": {
            "type": "boolean",
            "nullable": true
          },
          "destinationKeeper": {
            "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementContact"
          },
          "destinationKeeperId": {
            "type": "integer",
            "description": "</br>Entity id for destinationKeeper to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "totalAnimalsReceived": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unloadingDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "arrivalDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ReplaceDevice.ReplaceDeviceListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.ReplaceDevice.ReplaceDevice"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingDetailsAndPartyModify.HoldingDetailsAndPartyModifyModel": {
        "type": "object",
        "properties": {
          "holdings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingDetailsAndPartyModify.HoldingModify"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Kill.KillModel": {
        "required": [
          "abattoirHolding"
        ],
        "type": "object",
        "properties": {
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "abattoirHolding": {
            "type": "string",
            "description": " Holding at which the animals were slaughtered at\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH format (see API guide for supported holding number formats).\r\n  * Holding type must be an abattoir or knackery.\r\n  * For most user roles authenticated user must be associated with the holding."
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "bodies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Kill.Body"
            },
            "description": "Collection of bodies killed\r\n* *Necessity*: Required\r\n* *Validation*: Must contain one or more items",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Kill request content"
      },
      "CLAOData.Models.DeviceApplication.DeviceApplicationItemModel": {
        "type": "object",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "birthDam": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "dateOfBirthRange_End": {
            "type": "string",
            "description": "Date of latest possible birth date of animals tagged\r\n* *Necessity*: Optional for species sheep, goats and pigs. Required for species cattle or if `dateOfBirthRange_Start` is specified\r\n* *Validation*: Must not be in the future or after the `dateOfApplication`.  The number of days between `dateOfBirthRange_Start` and `dateOfBirthRange_End` must less then 1 day for species cattle or else 31 days for other species",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "description": "GenderName Or GenderSpecieName of animals\r\n* *Necessity*: Required for species Cattle, optional for other species\r\n* *Validation*: Only permits gender species name values returned by [GenderSpecies](#GenderSpecies) endpoint for species OR Only permits gender name values returned by [Genders](#Genders) endpoint",
            "nullable": true
          },
          "geneticDam": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "breed": {
            "type": "string",
            "description": "Breed name of animals\r\n* *Necessity*: Required for species Cattle, optional for other species\r\n* *Validation*: Only permits breed name values returned by [Breeds](#Breeds) endpoint for species",
            "nullable": true
          },
          "wasEmbryoTransfer": {
            "type": "boolean",
            "description": "Was embryo transferred from genetic dam to birth dam\r\n* *Necessity*: Optional\r\n* *Validation*: Value must equal true if `geneticDam` is specified",
            "nullable": true
          },
          "sire": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "dateOfBirthRange_Start": {
            "type": "string",
            "description": "Date of earliest possible birth date of animals tagged\r\n* *Necessity*: Optional for species sheep, goats and pigs. Required for species cattle or if `dateOfBirthRange_End` is specified\r\n* *Validation*: Must not be in the future or after the `dateOfApplication`. The number of days between `dateOfBirthRange_Start` and `dateOfBirthRange_End` must less then 1 day for species cattle or else 31 days for other species",
            "format": "date-time",
            "nullable": true
          },
          "mgtTag": {
            "$ref": "#/components/schemas/CLAOData.Models.ManagementIdentifier"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.ProgramStatusAuthorisation": {
        "required": [
          "canClear",
          "canSet",
          "programStatusId",
          "userEmailAddress"
        ],
        "type": "object",
        "properties": {
          "programStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatus"
          },
          "canSet": {
            "type": "boolean"
          },
          "canClear": {
            "type": "boolean"
          },
          "programStatusId": {
            "type": "integer",
            "description": "</br>Entity id for programStatus to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "userEmailAddress": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.PendingMovement.PendingMovementDocument": {
        "type": "object",
        "properties": {
          "documentType": {
            "$ref": "#/components/schemas/CLAOData.Models.Transfer.DocumentType"
          },
          "destinationDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementDestinationDetail"
          },
          "transportDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementTransportDetail"
          },
          "fciDetailId": {
            "type": "integer",
            "description": "</br>Entity id for fciDetail to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "departureDetailId": {
            "type": "integer",
            "description": "</br>Entity id for departureDetail to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "movementDocumentRef": {
            "type": "string",
            "description": "Document reference number",
            "nullable": true
          },
          "documentTypeId": {
            "type": "integer",
            "description": "</br>Entity id for documentType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "fciDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementFCIDetail"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "transportDetailId": {
            "type": "integer",
            "description": "</br>Entity id for transportDetail to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "destinationDetailId": {
            "type": "integer",
            "description": "</br>Entity id for destinationDetail to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "departureDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementDepartureDetail"
          }
        },
        "additionalProperties": false,
        "description": "This represents the movement document for an pending movement.\r\n\r\nThe model is analogous to the MovementDocument model. See the MovementDocument schema for details"
      },
      "CLAOData.Models.UpdateMultipleAnimals.UpdateMultipleAnimalsModel": {
        "type": "object",
        "properties": {
          "holding": {
            "type": "string",
            "description": "The holding where the animals to be updated are.\r\n\r\n* Necessity: Required.\r\n* Validation: Must be in valid holding, market, or abattoir format. User must have permission to access the holding. UNKNOWN holding may not be used.",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "Species name of animals in this update.\r\n\r\n* Necessity: Required.\r\n* Validation: Must be a valid species name returned from the [Species](#/Species/get_v1_Species) endpoint. UNKNOWN species may be used.",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "description": "Animals in this update will have their gender updated to this.\r\n\r\n* Necessity: Not required.\r\n* Validation: Must be either a valid gender name returned from the [Genders](#/Genders/get_v1_Genders) endpoint, or a valid genderSpecies name returned from the [GenderSpecies](#/GenderSpecies/get_v1_GenderSpecies) endpoint.",
            "nullable": true
          },
          "beginBirthPeriod": {
            "type": "string",
            "description": "Animals in this update will have their beginBirthPeriod updated to this.\r\n\r\n* Necessity: Not required.\r\n* Validation: Must not be in the future. If maxDobInterval from the [SpeciesConfig](#/SpeciesConfigs/get_v1_SpeciesConfigs__id__) endpoint for the species used in this update is greater than zero, then the following rules apply:\r\n    * Must not be after the tag application date for any device in this update.\r\n    * Must be before the endBirthPeriod if one is specified.\r\n    * The number of days between beginBirthPeriod and endBirthPeriod must not exceed maxDobInterval.",
            "format": "date-time",
            "nullable": true
          },
          "breed": {
            "type": "string",
            "description": "Animals in this update will have their breed updated to this.\r\n\r\n* Necessity: Not required.\r\n* Validation: Must be a valid breed name returned from the [Breeds](#/Breeds/get_v1_Breeds) endpoint.",
            "nullable": true
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Device"
            },
            "description": "Collection of devices to be updated.\r\n\r\n* Necessity: Required\r\n* Validation: Must contain at least one device.",
            "nullable": true
          },
          "genderAppliedFrom": {
            "type": "string",
            "description": "Date from which the gender should be applied to the animals\r\n\r\n* Necessity: Not required.\r\n* Validation: Must not be in the future. If beginBirthPeriod is set, genderAppliedFrom must not be before beginBirthPeriod.",
            "format": "date-time",
            "nullable": true
          },
          "endBirthPeriod": {
            "type": "string",
            "description": "Animals in this update will have their endBirthPeriod updated to this.\r\n\r\n* Necessity: Required if the configuration returned by the [SpeciesConfig](#/SpeciesConfigs/get_v1_SpeciesConfigs__id__) endpoint for the species used in this update has maxDobInterval greater than zero and either dobIntervalRequired true or beginBirthPeriod is specified on this update.\r\n* Validation: If speciesConfig.maxDobInterval is greater than zero, then the following rules apply:\r\n    * Must not be after the tag application date for any device in this update.\r\n    * Must be on or after the beginBirthPeriod.\r\n    * The number of days between beginBirthPeriod and endBirthPeriod must not exceed maxDobInterval.",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Notification.ErrorNotificationSubscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "ltatErrorId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.Program": {
        "required": [
          "programCode",
          "programName",
          "programOwnerInstitution",
          "programOwnerName"
        ],
        "type": "object",
        "properties": {
          "programOwnerPhone": {
            "maxLength": 16,
            "type": "string",
            "description": "Program owner phone number",
            "nullable": true
          },
          "programOwnerEmail": {
            "maxLength": 128,
            "type": "string",
            "description": "Program owner email address",
            "nullable": true
          },
          "programOwnerInstitution": {
            "maxLength": 128,
            "type": "string",
            "description": "Program owner institution"
          },
          "programName": {
            "maxLength": 32,
            "pattern": "^[A-Za-z0-9\\s]*$",
            "type": "string",
            "description": "Program Name"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "programCode": {
            "maxLength": 8,
            "pattern": "^[A-Za-z0-9_\\.]+$",
            "type": "string",
            "description": "Program code"
          },
          "programOwnerName": {
            "maxLength": 32,
            "pattern": "^[A-Za-z0-9\\s]*$",
            "type": "string",
            "description": "Program owner name"
          },
          "isActive": {
            "type": "boolean",
            "description": "Program active flag",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "OData program model"
      },
      "CLAOData.Models.Admin.DeviceAttributes.DeviceAttributeValueRecord": {
        "type": "object",
        "properties": {
          "collectedDate": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "requestId": {
            "type": "integer",
            "format": "int32"
          },
          "accountSet": {
            "type": "string",
            "nullable": true
          },
          "holdingSet": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The value and details for an attribute returned from a call to\r\n[QueryDeviceAttributes](#/DeviceAttributes/get_v1_QueryDeviceAttributes_readPackageName__readPackageName__holdingCPH__holdingCPH__startDate__startDate__endDate__endDate__species__species__deviceIdentifiers___deviceIdentifiers___)."
      },
      "CLAOData.Models.Sighting.Sighting": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.Sighting.SightingModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "A Sighting is carried out by users such as animal health officer or local authority officer generally as part of an inspection when an animal is recognised as not residing on the holding that they are currently recorded against."
      },
      "Result": {
        "type": "object",
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.ProgramStatusHolding": {
        "required": [
          "removalPeriodDays"
        ],
        "type": "object",
        "properties": {
          "autoClearAction": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.AutoClearAction"
          },
          "removalPeriodDays": {
            "maximum": 30000,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "nextProgramStatusId": {
            "type": "integer",
            "description": "If specified must be a Program Status that exists and is in the same Program as this Program Status.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ReplacementReason": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "reason": {
            "type": "string",
            "description": "The reason the tag was replaced.",
            "nullable": true,
            "example": "Tag Missing"
          }
        },
        "additionalProperties": false,
        "description": "A valid reason for replacing a tag."
      },
      "CLAOData.Models.RoleConfigListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RoleConfig"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "System.BooleanResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.DeviceAttributes.DeviceAttributeWriteSchemaListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.DeviceAttributeWriteSchema"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.StockTypeListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.StockType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.ConfirmWithEditPreMovement.ConfirmWithEditPreMovement": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.ConfirmWithEditPreMovement.ConfirmWithEditPreMovementModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.PaperMovement.PaperMovementWarning": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A more detailed error message.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "The error code for the error.",
            "nullable": true
          },
          "target": {
            "type": "string",
            "description": "If populated, this is the JSON property path to the part of the request content that caused the error.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of a single error."
      },
      "CLAOData.Models.ProcessingFlag": {
        "required": [
          "flagDescription",
          "flagName"
        ],
        "type": "object",
        "properties": {
          "flagName": {
            "maxLength": 30,
            "pattern": "^[A-Za-z0-9\\s]*$",
            "type": "string",
            "description": "Name of the processing flag\r\n* *Necessity*: Required\r\n* *Validation*: Must be unique"
          },
          "userQuestion": {
            "maxLength": 100,
            "pattern": "^[A-Za-z0-9\\s]*$",
            "type": "string",
            "description": "A question that should be displayed to end users within the user interface when the processing flag is being used to signify an exemption code. \r\n\r\nTo determine the processing flags that can be used with a particular request type see [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint.\r\n* *Necessity*: Optional\r\n* *Validation*: Must only contain alphanumeric characters, and be shorter than 100 characters.",
            "nullable": true
          },
          "isSystem": {
            "type": "boolean",
            "description": "Whether this is a system flag. \r\n\r\nProcessing flags where isSystem equals true should not be displayed to end users in the user interface\r\n* *Necessity*: Required\r\n* *Validation*: Must be either True or False"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "flagDescription": {
            "maxLength": 70,
            "pattern": "^[A-Za-z0-9\\s]*$",
            "type": "string",
            "description": "Description of the processing flag\r\n* *Necessity*: Required\r\n* *Validation*: Must only contain alphanumeric characters, and be shorter than 70 characters."
          },
          "requestTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestTypeProcessingFlag"
            },
            "description": "Request Types linked to the Processing flags\r\n\r\nThese can also be queried using the [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint\r\n* *Necessity*: Optional\r\n* *Validation*: See [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for validation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1UpdateHoldingStatusRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "V1Requests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.UpdateDeviceStatus.DeviceStatus": {
        "type": "object",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "set": {
            "type": "boolean",
            "description": "Indication if status is being set, `true` if status is to be set.\r\n* *Necessity*: Optional\r\n* *Validation*: Either `set` or `clear` should equal `true`, but both should not have the same value."
          },
          "holding": {
            "type": "string",
            "description": "Holding at which the animal was located when the status was set or cleared.\r\n* *Necessity*: Required\r\n* *Validation*: String is in valid holding CPH or abattoir MHS number format (see API guide for supported holding number formats).",
            "nullable": true
          },
          "clear": {
            "type": "boolean",
            "description": "Indication if status is being cleared, `true` if status is to be cleared.\r\n* *Necessity*: Optional\r\n* *Validation*: Either `clear` or `set` should equal `true`, but both should not have the same value."
          }
        },
        "additionalProperties": false,
        "description": "Device status information to set or clear.\r\n* Use `device` to specify the identifier of the animal which the status is being set or cleared for."
      },
      "CLAOData.Models.GenderListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Gender"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.TagUpload.TagOrderItem": {
        "type": "object",
        "properties": {
          "holding": {
            "type": "string",
            "description": "Holding of consignment",
            "nullable": true
          },
          "species": {
            "type": "string",
            "description": "Species as obtained from Species Metadata request. It must be the same as species ID within each `DeviceInfos`",
            "nullable": true
          },
          "batchNumber": {
            "type": "string",
            "description": "Batch -Flock/Herd of consignment",
            "nullable": true
          },
          "manufacturer": {
            "type": "string",
            "description": "Manufacturer of Tag",
            "nullable": true
          },
          "dateOfDispatch": {
            "type": "string",
            "description": "Date of Device Despatch. Required format \"yyyy-mmm-dd hh:mm:ss\"",
            "format": "date-time"
          },
          "colour": {
            "type": "string",
            "description": "Colour of tag",
            "nullable": true
          },
          "orderStatus": {
            "type": "string",
            "description": "The status of the order...New/Delete",
            "nullable": true
          },
          "etasReferenceNumber": {
            "type": "string",
            "description": "ETAS Order Reference Number",
            "nullable": true
          },
          "deviceType": {
            "type": "string",
            "description": "Bolus/EID/Visual",
            "nullable": true
          },
          "deviceInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.TagUpload.DeviceInfo"
            },
            "description": "Collection of device information",
            "nullable": true
          },
          "etasSequenceNumber": {
            "type": "integer",
            "description": "ETAS line item sequence number",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Represents an order of DeviceInfos"
      },
      "CLAOData.Models.GenderSpeciesListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.GenderSpecies"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaperMovements.Default.UpdateAndAppendNotesParameters": {
        "type": "object",
        "properties": {
          "movement": {
            "$ref": "#/components/schemas/CLAOData.Models.PaperMovement.PaperMovement"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HoldingRegister.HoldingAnnualInventory": {
        "type": "object",
        "properties": {
          "createRequestId": {
            "type": "integer",
            "description": "The id of the request that created this Annual Inventory.",
            "format": "int32"
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "inventoryDate": {
            "type": "string",
            "description": "The date for which the inventory was created, i.e. the count is of animals on the holding on this date.",
            "format": "date-time"
          },
          "speciesId": {
            "type": "integer",
            "description": "Species ID for the Annual Inventory. The inventory will be of animals of this species.</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "holdingRegisterId": {
            "type": "string",
            "description": "The id of the Holding Register for the holding this Annual Inventory is for. The Holding Register can be fetched from the [HoldingRegisters({id})](#/HoldingRegisters/get_v1_HoldingRegisters__id__) endpoint.</br>Entity id for holdingRegister to be specified for the POST/PUT supported methods.",
            "nullable": true
          },
          "enteredDate": {
            "type": "string",
            "description": "The date on which the inventory was created in the system.",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "holdingAnnualInventoryStocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingAnnualInventoryStock"
            },
            "nullable": true
          },
          "holdingRegister": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingRegister"
          }
        },
        "additionalProperties": false,
        "description": "An Annual Inventory for a specific species that has been performed and recorded in the system.\r\n\r\nAnnual Inventories are recorded using the [AddAnnualInventoryRequests POST](#/AddAnnualInventoryRequests/post_v1_AddAnnualInventoryRequests) endpoint."
      },
      "CLAOData.Models.Reports.ReportData": {
        "type": "object",
        "properties": {
          "reportBase64": {
            "type": "string",
            "description": "Report data base64 encoded",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Animals.BreedOnHolding": {
        "type": "object",
        "properties": {
          "breedName": {
            "type": "string",
            "description": "The name of the breed",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a breed on a holding"
      },
      "CLAOData.Models.Transfer.FciDetail": {
        "type": "object",
        "properties": {
          "isAllAnimalsFciCompliant": {
            "type": "boolean",
            "description": "Are all animals FCI compliant\r\n* *Necessity*: Optional",
            "nullable": true
          },
          "nonCompliantReason": {
            "type": "string",
            "description": "Reasons for non FCI compliance\r\n* *Necessity*: Optional, required if `isAllAnimalsFciCompliant` equals false \r\n* *Validation*:\r\n  * Maximum length 255 characters\r\n  * Value should not be specified if animals are FCI compliant (`isAllAnimalsFciCompliant` equals true)",
            "nullable": true
          },
          "holdingRestrictions": {
            "type": "string",
            "description": "Information about holding restrictions\r\n* *Necessity*: Optional\r\n* *Validation*:\r\n  * Maximum length 255 characters\r\n  * Value should not be specified if animals are FCI compliant (`isAllAnimalsFciCompliant` equals true)",
            "nullable": true
          },
          "withdrawalPeriodObservedText": {
            "type": "string",
            "description": "Information if FCI Withdrawal periods have been observed\r\n* *Necessity*: Optional\r\n* *Validation*:\r\n  * Maximum length 255 characters\r\n  * Value should not be specified if animals are FCI compliant (`isAllAnimalsFciCompliant` equals true)",
            "nullable": true,
            "deprecated": true
          },
          "metFCIWithdrawalPeriodCode": {
            "type": "string",
            "description": "Indication if FCI withdrawal periods have been met\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits code values returned by [MetFCIWithdrawalPeriods](#MetFCIWithdrawalPeriods) endpoint",
            "nullable": true
          },
          "nonCompliantDevices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Device"
            },
            "description": "List of non compliant devices\r\n* *Necessity*: Optional\r\n* *Validation*:\r\n  * Should contain one or more devices if all animals are not FCI compliant (`isAllAnimalsFciCompliant` equals false)\r\n  * Should not contain any devices if all animals are FCI compliant (`isAllAnimalsFciCompliant` equals true)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Food Chain Information (FCI) details"
      },
      "CLAOData.Models.BulkImports.Animals.AnimalMovementDetail": {
        "type": "object",
        "properties": {
          "moveType": {
            "$ref": "#/components/schemas/CLAOData.Models.DeviceMovementType"
          },
          "fromHolding": {
            "type": "string",
            "nullable": true
          },
          "moveDate": {
            "type": "string",
            "format": "date-time"
          },
          "toHolding": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.KillData.KillDetails": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.KillData.KillDetailsModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "Kill request"
      },
      "CLAOData.Models.UpdateHoldingStatus.UpdateHoldingStatus": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.UpdateHoldingStatus.UpdateHoldingStatusModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "Update holding status request."
      },
      "CLAOData.Models.MetFCIWithdrawalPeriod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Short code of whether the withdrawal period has been met.",
            "nullable": true,
            "example": "WITHDRAWAL_MET-LAST_MONTH_OK"
          },
          "name": {
            "type": "string",
            "description": "Full name/description of whether the withdrawal period has been met.",
            "nullable": true,
            "example": "The required withdrawal period for all medicines has been adhered to - no medicines have been administered in the past 28 days"
          }
        },
        "additionalProperties": false,
        "description": "A single possible status for whether Food Chain Information withdrawal periods have been met."
      },
      "CLAOData.Models.HoldingRegister.ProductionType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the production type.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A possible production type for a holding register."
      },
      "CLAOData.Models.ReviewHoldingMovement.ReviewDevice": {
        "type": "object",
        "properties": {
          "beginBirthPeriod": {
            "type": "string",
            "description": "Date of earliest possible birth date of animal\r\n* *Necessity*: Optional for species sheep, goats and pigs.Required if `endBirthPeriod` is specified\r\n* *Validation*: Must not be in the future or after the tag was applied to animal. The number of days between `beginBirthPeriod` and `endBirthPeriod` must less then 1 day for species cattle or else 31 days for other species.",
            "format": "date-time",
            "nullable": true
          },
          "rfid": {
            "type": "string",
            "description": "Radio Frequency Identifier (RFID) / Electronic Identification number (EID) of tag\r\n* *Necessity*: Either `tagNumber`, `rfid` or `freezebrand` must be specified\r\n* *Validation*: String containing Rfid in format; decimal, ISO Decimal, Hex or UK WYSIWYG (see API guide for supported Rfid formats)\r\n* If `rfid` and `tagNumber` are both specified they should be equivalent values.",
            "nullable": true
          },
          "freezebrand": {
            "type": "string",
            "description": "Freezebrand of tag\r\n* *Necessity*: Either `tagNumber`, `rfid` or `freezebrand` must be specified",
            "nullable": true
          },
          "breed": {
            "type": "string",
            "description": "The breed name of the animal.\r\n* *Necessity*: Required for species Cattle, optional for other species.\r\n* *Validation*: Only permits breed name values returned by [Breeds](#Breeds) endpoint for the species of the animal",
            "nullable": true
          },
          "tagNumber": {
            "type": "string",
            "description": "Official visual tag number\r\n* *Necessity*: Either `tagNumber`, `rfid` or `freezebrand` must be specified\r\n* *Validation*: String is in the tag number format supported for the species  (see API guide for supported tag number formats)\r\n* If `tagNumber` and `rfid` are both specified they should be equivalent values.",
            "nullable": true
          },
          "endBirthPeriod": {
            "type": "string",
            "description": "Date of latest possible birth date of animal\r\n* *Necessity*: Optional for species sheep, goats and pigs. Required if `beginBirthPeriod` is specified\r\n* *Validation*: Must not be in the future or after the tag was applied to animal. The number of days between `beginBirthPeriod` and `endBirthPeriod` must less then 1 day for species cattle or else 31 days for other species.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HerdModify.HerdModifyModel": {
        "type": "object",
        "properties": {
          "herds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HerdModify.Herd"
            },
            "description": "Herds to create or update\r\n* *Necessity*: Required\r\n* *Validation*:",
            "nullable": true
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.UpdateDeviceStatus.UpdateDeviceStatus": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.UpdateDeviceStatus.UpdateDeviceStatusModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "Update animal status request."
      },
      "CLAOData.Models.DeviceApplication.DeviceApplicationListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.DeviceApplication.DeviceApplication"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BulkImports.Animals.BulkRefreshAnimalListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.BulkImports.Animals.BulkRefreshAnimal"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.UndoRequest.UndoPartialRequestListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.UndoRequest.UndoPartialRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Kill.Kill": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.Kill.KillModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "Kill Request"
      },
      "CLAOData.Models.ManagementIdentifier": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Management identifier / tag\r\n* *Necessity*: Optional\r\n* *Validation*: Must be between 1 and 20 upper or lower case letters, numbers or the symbols: space, ., (, ), /",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.RoleConfig": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          },
          "userLinkedToHolding": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "roleId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Details of a role configuration"
      },
      "CLAOData.Models.Admin.Program.ProgramStatusNotificationType": {
        "type": "object",
        "properties": {
          "isHoldingTypeSupported": {
            "type": "boolean"
          },
          "isSpeciesSupported": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isHolding": {
            "type": "boolean"
          },
          "isDevice": {
            "type": "boolean"
          },
          "isRequestTypeSupported": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "isTitem": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.DeviceApplication.DeviceApplicationExtended": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.DeviceApplication.DeviceApplicationExtendedModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.HoldingMHSListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.HoldingMHS"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.PendingMovement.PendingMovementFCIDetail": {
        "type": "object",
        "properties": {
          "holdingRestrictions": {
            "type": "string",
            "description": "Information about holding restrictions",
            "nullable": true
          },
          "nonCompliantReason": {
            "type": "string",
            "description": "Non compliant reason",
            "nullable": true
          },
          "nonCompliantDevices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementNonCompliantDevice"
            },
            "description": "List of non compliant devices",
            "nullable": true
          },
          "withdrawalPeriodMet": {
            "$ref": "#/components/schemas/CLAOData.Models.MetFCIWithdrawalPeriod"
          },
          "withdrawalPeriodMetId": {
            "type": "integer",
            "description": "</br>Entity id for withdrawalPeriodMet to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "withdrawalPeriodObservedText": {
            "type": "string",
            "description": "Withdrawal periods have been observed for all veterinary medicines and other treatments administered to the animals",
            "nullable": true,
            "deprecated": true
          },
          "isAllAnimalsFCICompliant": {
            "type": "boolean",
            "description": "Are all animals FCI compliant",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Animals.AnimalMovement": {
        "type": "object",
        "properties": {
          "sourceHolding": {
            "type": "string",
            "description": "The CPH of the holding where the animal moved from",
            "nullable": true
          },
          "movementDate": {
            "type": "string",
            "description": "The date when the movement occurred",
            "format": "date-time"
          },
          "deviceId": {
            "type": "integer",
            "description": "System generated identifier for an animal.",
            "format": "int32"
          },
          "transportHaulierName": {
            "type": "string",
            "description": "The name of the haulier that transported the animal",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "The species id of the animal.",
            "format": "int32"
          },
          "deviceLocationId": {
            "type": "integer",
            "description": "System generated identifier for an animal location.",
            "format": "int64"
          },
          "isSystemMove": {
            "type": "boolean",
            "description": "Whether this was a system generated movement."
          },
          "requestId": {
            "type": "integer",
            "description": "The request id associated with this movement.",
            "format": "int32"
          },
          "transportVehicleRegistrationNo": {
            "type": "string",
            "description": "The registration number of the vehicle that transported the animal",
            "nullable": true
          },
          "animal": {
            "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalDetail"
          },
          "order": {
            "type": "integer",
            "description": "Use to sort the movements by recency. 0 is most recent animal location.",
            "format": "int32"
          },
          "destinationHolding": {
            "type": "string",
            "description": "The CPH of the holding where the animal moved to",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Transfer.TransferModel": {
        "required": [
          "animalCount",
          "destinationHolding",
          "movementGroups",
          "sourceHolding",
          "transferDate",
          "userHolding"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "trackingId": {
            "type": "string",
            "description": "Client tracking ID used to prevent duplicates - When this field is supplied, the system will check for duplicate requests in cases of network and communication issues\r\n* *Necessity*: Optional\r\n* *Validation*: String, maximum length 36, it is recommended that this is populated with a Guid",
            "nullable": true
          },
          "sourceHolding": {
            "type": "string",
            "description": "Departure holding animals moved from\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH format (see API guide for supported holding number formats).\r\n  * If the departure holding isn't known or animal is found use the value `UNKNOWN`\r\n  * For most user roles authenticated user must be associated with either the `sourceHolding` or `destinationHolding`."
          },
          "animalCount": {
            "type": "integer",
            "description": "Total individual and batch identified animals moved\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * Value is between 1 and 99999\r\n  * Value equal the count of `movementGroups.devices` plus sum of `movementGroups.batches.animalTotal`",
            "format": "int32"
          },
          "movementDocument": {
            "$ref": "#/components/schemas/CLAOData.Models.Transfer.MovementDocument"
          },
          "deviceApplication": {
            "$ref": "#/components/schemas/CLAOData.Models.DeviceApplicationDetails"
          },
          "transferDate": {
            "type": "string",
            "description": "Date/time of the movement.\r\n* *Necessity*: Required",
            "format": "date-time"
          },
          "processingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.RequestProcessingFlag"
            },
            "description": "Collection of processing flags used to affect how a request is validated and processed\r\n* *Necessity*: Optional\r\n* *Validation*: If specified, only permits processing flag name values returned by [RequestTypeProcessingFlags](#RequestTypeProcessingFlags) endpoint for this request type and species",
            "nullable": true
          },
          "saleDate": {
            "type": "string",
            "description": "Sale date\r\n* *Necessity*: Only should be specified if a market holding type is recording an off movement\r\n* *Validation*:\r\n  * Must be less then or equal to `transferDate`\r\n  * Must be empty if isn't a market recording an off movement",
            "format": "date-time",
            "nullable": true
          },
          "movementGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Transfer.MovementGroup"
            },
            "description": "Collection of groups of animals moved\r\n* *Necessity*: Required\r\n* *Validation*: Collection must contain one or more items"
          },
          "species": {
            "type": "string",
            "description": "The species name of animals moved\r\n* *Necessity*: Required\r\n* *Validation*: Only permits species name values returned by [Species](#Species) endpoint",
            "nullable": true
          },
          "destinationHolding": {
            "type": "string",
            "description": "Destination holding animals moved to\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH or abattoir MHS number format (see API guide for supported holding number formats).\r\n  * If destination holding isn't known or animal is lost use the value `UNKNOWN`.\r\n  * For most user roles authenticated user must be associated with either the `sourceHolding` or `destinationHolding`."
          },
          "saleId": {
            "type": "string",
            "description": "Sale identifier, the markets internal identifier for the sale\r\n* *Necessity*: Only should be specified if a market holding type is recording an off movement\r\n* *Validation*:\r\n  * Maximum length 32 characters\r\n  * Must be empty if isn't a market recording an off movement",
            "nullable": true
          },
          "transportHaulierName": {
            "type": "string",
            "description": "Name of person responsible for moving animals\r\n* *Necessity*: Optional\r\n* *Validation*: Maximum length 50 characters",
            "nullable": true
          },
          "userHolding": {
            "type": "string",
            "description": "A holding associated with the user. It must be equal to `destinationHolding` for movements ON or `sourceHolding` for movements OFF.\r\n* *Necessity*: Required\r\n* *Validation*:\r\n  * String is in valid holding CPH format (see API guide for supported holding number formats).\r\n  * If it is On movement or in-business movement the `userHolding` should equal `destinationHolding`\r\n  * If it is Off movement the `userHolding` should equal `sourceHolding`\r\n  * For most user roles authenticated user must be associated with the `userHolding`."
          },
          "transportVehicleRegistrationNo": {
            "type": "string",
            "description": "Registration number of vehicle being used to transport animals\r\n* *Necessity*: Optional\r\n* *Validation*: If specified must be between 2 and 10 upper or lower case letters or numbers",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "OData transfer request model"
      },
      "CLAOData.Models.Animals.AnimalLT": {
        "type": "object",
        "properties": {
          "speciesId": {
            "type": "integer",
            "description": "The species id of the animal.",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "description": "The comment associated with the request that caused the lifetime traceable event to be recorded",
            "nullable": true
          },
          "animal": {
            "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalDetail"
          },
          "requestId": {
            "type": "integer",
            "description": "The request id of the request that caused this lifetime traceable event to be recorded",
            "format": "int32"
          },
          "requestDate": {
            "type": "string",
            "description": "The date when the request that caused the lifetime traceable event to be recorded occurred",
            "format": "date-time"
          },
          "isLT": {
            "type": "boolean",
            "description": "Whether the animal is lifetime traceable in the system.This is the new state set by the request that caused a change.\r\n\r\nLifetime traceability status is an indication if the animal has a complete history of movements with no gaps."
          },
          "requestType": {
            "type": "string",
            "description": "The request type of the request that caused this lifetime traceable event to be recorded",
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "description": "System generated identifier for an animal.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BusinessRulesConfig.SpeciesConfigListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.BusinessRulesConfig.SpeciesConfig"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.RequestProcessingFlag": {
        "type": "object",
        "properties": {
          "processingFlagId": {
            "type": "integer",
            "description": "Processing flag Id\r\n* *Necessity*: Optional",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Processing flag name\r\n* *Necessity*: Required\r\n* *Validation*: Only permits processing flag name values returned by [ProcessingFlags](#ProcessingFlags) endpoint",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HerdDisable.HerdDisable": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.HerdDisable.HerdDisableModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "V1UpdateDeviceStatusRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "V1MovementDetails-documentRef-documentRef-documentType-documentType-Get200TextHtmlResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CLAOData.Models.MovementDetails.MovementDetails"
        }
      },
      "CLAOData.Models.Admin.DeviceAttributes.DeviceAttributeReadSchemaListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.DeviceAttributeReadSchema"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BirthGenderSpecies": {
        "type": "object",
        "properties": {
          "genderId": {
            "type": "integer",
            "description": "The id of the gender.</br>Entity id for gender to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "birthSpeciesId": {
            "type": "integer",
            "description": "The id of the species.</br>Entity id for birthSpecies to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "birthSpecies": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "gender": {
            "$ref": "#/components/schemas/CLAOData.Models.Gender"
          },
          "name": {
            "type": "string",
            "description": "The species specific name for the linked gender and species.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The species specific name of a gender, used by HoldingRegisterBirth. Conceptually\r\nthe same as GenderSpecies."
      },
      "System.Void": {
        "type": "object",
        "additionalProperties": false
      },
      "V1ReplaceDeviceRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.PendingMovement.PendingMovementContact": {
        "type": "object",
        "properties": {
          "county": {
            "$ref": "#/components/schemas/CLAOData.Models.County"
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "telephoneNumber": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "countyId": {
            "type": "integer",
            "description": "</br>Entity id for county to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "town": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.DistinctProgramStatus": {
        "type": "object",
        "properties": {
          "currentProgramStatusId": {
            "type": "integer",
            "description": "Must be a Program Status that exists and is in the same Program as this Program Status.",
            "format": "int32"
          },
          "clearCurrent": {
            "type": "boolean"
          },
          "programStatusId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.DeathReason.DeathReason": {
        "required": [
          "reason",
          "speciesId"
        ],
        "type": "object",
        "properties": {
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "reason": {
            "maxLength": 50,
            "pattern": "^[A-Za-z0-9_\\. ]+$",
            "type": "string",
            "description": "The reason for death of the animal.\r\n* *Necessity* Required\r\n* *Validation* String, maximum length 50"
          },
          "speciesId": {
            "type": "integer",
            "description": "</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A reason for the death of an animal of a specific species."
      },
      "CLAOData.Models.Admin.Program.ProgramAdministratorListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramAdministrator"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BulkImports.Movements.BulkAddMovementListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.BulkImports.Movements.BulkAddMovement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Transfer.DestinationDetail": {
        "type": "object",
        "properties": {
          "unloadingDateTime": {
            "type": "string",
            "description": "Date/Time the animals were unloaded at the destination holding\r\n* *Necessity*: Optional\r\n* *Validation*: Value should not be before the `departureDetail.departureDateTime`, `departureDetail.loadingDateTime` or `arrivalDateTime`",
            "format": "date-time",
            "nullable": true
          },
          "arrivalDateTime": {
            "type": "string",
            "description": "Date/Time the animals arrived at the destination holding\r\n* *Necessity*: Optional\r\n* *Validation*: Value should not be before the `departureDetail.departureDateTime` or `departureDetail.loadingDateTime`",
            "format": "date-time",
            "nullable": true
          },
          "destinationKeeper": {
            "$ref": "#/components/schemas/CLAOData.Models.Contact"
          },
          "destinationHoldingType": {
            "type": "string",
            "description": "Destination holding type\r\n* *Necessity*: Optional\r\n* *Validation*: Only permits name values returned by [HoldingTypes](#HoldingTypes) endpoint",
            "nullable": true
          },
          "hasKeeperChanged": {
            "type": "boolean",
            "description": "Does the movement cause the keeper of the animals to change\r\n* *Necessity*: Optional",
            "nullable": true
          },
          "totalAnimalsReceived": {
            "type": "integer",
            "description": "Total animals that were received\r\n* *Necessity*: Optional\r\n* *Validation*:\r\n  * Value should greater than 0\r\n  * If movement is an on movement, value should equal the total number of individual and batch identified animals on the movement",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Destination details\r\n* `destinationKeeper` - details about destination keeper\r\n  * *Necessity*: Optional"
      },
      "CLAOData.Models.ApprovedMovement.ApprovedMovementDocument": {
        "type": "object",
        "properties": {
          "documentType": {
            "$ref": "#/components/schemas/CLAOData.Models.Transfer.DocumentType"
          },
          "destinationDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementDocumentDestinationDetail"
          },
          "transportDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementDocumentTransportDetail"
          },
          "fciDetailId": {
            "type": "integer",
            "description": "</br>Entity id for fciDetail to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "departureDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementDocumentDepartureDetail"
          },
          "departureDetailId": {
            "type": "integer",
            "description": "</br>Entity id for departureDetail to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "movementDocumentRef": {
            "type": "string",
            "nullable": true
          },
          "documentTypeId": {
            "type": "integer",
            "description": "</br>Entity id for documentType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "fciDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.ApprovedMovement.ApprovedMovementDocumentFCIDetail"
          },
          "transportDetailId": {
            "type": "integer",
            "description": "</br>Entity id for transportDetail to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "destinationDetailId": {
            "type": "integer",
            "description": "</br>Entity id for destinationDetail to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "This represents the movement document for an approved movement.\r\n\r\nThe model is analogous to the MovementDocument model. \r\nSee the MovementDocument schema for details."
      },
      "CLAOData.Models.Admin.Program.ProgramStatusNotificationTypeListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatusNotificationType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.ProgramStatusListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatus"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.DeviceApplication.DeviceApplication": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.DeviceApplication.DeviceApplicationModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.DeviceAttributes.DeviceAttributeWriteSchema": {
        "type": "object",
        "properties": {
          "isDeviceSupported": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "supportedSpecies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.WriteSchemaSpecies"
            },
            "nullable": true
          },
          "isBatchSupported": {
            "type": "boolean"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.WriteSchemaAttribute"
            },
            "nullable": true
          },
          "packageName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A collection of attributes that can be written to devices or batches."
      },
      "CLAOData.Models.Transfer.TransferListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Transfer.Transfer"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BreedListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Breed"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.ProgramAdministrator": {
        "required": [
          "email",
          "programId",
          "programRegionId"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "programId": {
            "type": "integer",
            "description": "</br>Entity id for program to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "programRegionId": {
            "type": "integer",
            "description": "</br>Entity id for programRegion to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "programRegion": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramRegion"
          },
          "program": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.Program"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "OData program administrator model"
      },
      "CLAOData.Models.HoldingRegister.HoldingAnnualInventoryStock": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "Quantity of animals for the stock type",
            "format": "int32",
            "nullable": true
          },
          "stockType": {
            "$ref": "#/components/schemas/CLAOData.Models.StockType"
          },
          "stockTypeId": {
            "type": "integer",
            "description": "The id of the stock type for this stock count.\r\n\r\nAvailable stock types can be fetched from the [StockTypes](#/StockTypes/get_v1_StockTypes) endpoint.</br>Entity id for stockType to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "holdingAnnualInventoryId": {
            "type": "integer",
            "description": "The id of the Annual Inventory in which this count was performed.",
            "format": "int32"
          },
          "holdingAnnualInventory": {
            "$ref": "#/components/schemas/CLAOData.Models.HoldingRegister.HoldingAnnualInventory"
          }
        },
        "additionalProperties": false,
        "description": "The count of a specific stock type in an Annual Inventory."
      },
      "CLAOData.Models.Admin.DeviceAttributes.AttributeSchemaListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.AttributeSchema"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.PendingMovement.PendingMovementDetails": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.MovementPendingStatus"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "transportHaulierName": {
            "type": "string",
            "description": "Name of the Transport Haulier that is transporting the animals",
            "nullable": true
          },
          "movementDocumentId": {
            "type": "integer",
            "description": "</br>Entity id for movementDocument to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "pendingMovementDetailsProcessingFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementDetailsProcessingFlag"
            },
            "description": "Flags that will affect how the movement is processed and/or validated",
            "nullable": true
          },
          "movementDocument": {
            "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementDocument"
          },
          "transportVehicleRegistrationNo": {
            "type": "string",
            "description": "Registration Number of the vehicle that will move the animals",
            "nullable": true
          },
          "userHolding": {
            "type": "string",
            "description": "The holding that the authenticated user is recording the movement on behalf of",
            "nullable": true
          },
          "transferDate": {
            "type": "string",
            "description": "Date that the movement will happen",
            "format": "date-time"
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "batches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementBatch"
            },
            "description": "Batches of animals that will be moved",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "Id of Species of animals that are to be moved</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "destinationHolding": {
            "type": "string",
            "description": "Holding that the animals will be moved to",
            "nullable": true
          },
          "sourceHolding": {
            "type": "string",
            "description": "Holding that the animals will be moved from",
            "nullable": true
          },
          "isEditable": {
            "type": "boolean",
            "description": "Whether the movement is editable.\r\n\r\nIt is editable if the Pre Movement was created by the authenticated user or another user associated with the user's holding. \r\nOtherwise it is not editable."
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementDevice"
            },
            "description": "Individual animal Devices that will be moved",
            "nullable": true
          },
          "animalCount": {
            "type": "integer",
            "description": "Total number of animals that will be moved",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.DeviceAttributes.Attribute": {
        "type": "object",
        "properties": {
          "attributesListValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.AttributesListValue"
            },
            "nullable": true
          },
          "minNumberValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "name": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "maxLength": 150,
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.AttributeDataType"
          },
          "maxStringValueLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "maxNumberValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An attribute that can be included in a [read schema](#/DeviceAttributeReadSchemas) or\r\n[write schema](#/DeviceAttributeWriteSchemas). If included in a write schema, the attribute can be used in a\r\n[WriteAttributeSchemaRequest](#/WriteAttributeSchemaRequests/post_v1_WriteAttributeSchemaRequests)."
      },
      "CLAOData.Models.Admin.Program.HoldingMHS": {
        "required": [
          "holding"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "holdingMHSNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.HoldingMHSNumber"
            },
            "description": "List of MHS numbers for a holding",
            "nullable": true
          },
          "holding": {
            "type": "string",
            "description": "Holding CPH, can not be updated in the PUT action"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.MovementDetails.MovementDetailsProcessingFlag": {
        "type": "object",
        "properties": {
          "processingFlag": {
            "$ref": "#/components/schemas/CLAOData.Models.ProcessingFlag"
          },
          "processingFlagId": {
            "type": "integer",
            "description": "</br>Entity id for processingFlag to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "documentRef": {
            "type": "string",
            "nullable": true
          },
          "documentType": {
            "type": "string",
            "description": "Type of Movement Document.\r\nDocument Types can be found at [DocumentTypes](#DocumentTypes)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.DeviceAttributes.WriteSchemaAttribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "deviceAttributeWriteSchemaId": {
            "type": "integer",
            "description": "</br>Entity id for deviceAttributeWriteSchema to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "deviceAttributeWriteSchema": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.DeviceAttributeWriteSchema"
          },
          "attribute": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.Attribute"
          },
          "attributeId": {
            "type": "integer",
            "description": "</br>Entity id for attribute to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "isNewListValueAllowed": {
            "type": "boolean"
          },
          "isMandatory": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Links DeviceAttributeWriteSchemas to Attributes in a many:many relationship."
      },
      "CLAOData.Models.OnFarmKill.UntaggedAnimalDetail": {
        "type": "object",
        "properties": {
          "gender": {
            "type": "string",
            "description": "Gender name\r\nGenderName Or GenderSpeciesName of animals\r\n* *Necessity*: Required for cattle, optional for other species\r\n* *Validation*: Only permits gender species name values returned by [GenderSpecies](#GenderSpecies) endpoint for species OR Only permits gender name values returned by [Genders](#Genders) endpoint",
            "nullable": true
          },
          "endBirthPeriod": {
            "type": "string",
            "description": "End birth period\r\n* *Necessity*: Required for cattle, optional for other species\r\n* *Validation*: Must not be in the future. The number of days between `beginBirthPeriod` and `endBirthPeriod` must less then 1 day for species cattle or else 31 days for other species",
            "format": "date-time",
            "nullable": true
          },
          "breed": {
            "type": "string",
            "description": "Breed name\r\n* *Necessity*: Required for cattle, optional for other species\r\n* *Validation*: Only permits breed name values returned by [Breeds](#Breeds) endpoint for species",
            "nullable": true
          },
          "dam": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "beginBirthPeriod": {
            "type": "string",
            "description": "Begin birth period\r\n* *Necessity*: Required for cattle, optional for other species\r\n* *Validation*: Must not be in the future. The number of days between `beginBirthPeriod` and `endBirthPeriod` must less then 1 day for species cattle or else 31 days for other species",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Untagged animal details.\r\n\r\nUse `dam` to specify the mother who gave birth to the dead animal.  This is required for cattle, optional for other species."
      },
      "CLAOData.Models.Admin.Program.StandstillConfigHoldingLinkTypeListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.StandstillConfigHoldingLinkType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.Program.ProgramStatusDeviceTitem": {
        "required": [
          "removalPeriodDays"
        ],
        "type": "object",
        "properties": {
          "allowOnNonStatusHolding": {
            "type": "boolean"
          },
          "inheritFromHolding": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatusInheritFromHolding"
          },
          "allowAssociatedHoldingSystemMovements": {
            "type": "boolean"
          },
          "allowSystemMovements": {
            "type": "boolean"
          },
          "autoClearAction": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.AutoClearAction"
          },
          "removalPeriodDays": {
            "maximum": 30000,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "processMaxDaysAfterSetDate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "allowOnNonStatusHoldingWithAssociatedHolding": {
            "type": "boolean"
          },
          "processMaxDaysAfterClearDate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Species": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Species name",
            "nullable": true,
            "example": "Sheep"
          }
        },
        "additionalProperties": false,
        "description": "A supported species"
      },
      "CLAOData.Models.OnFarmKill.DeathOfUntaggedAnimals": {
        "type": "object",
        "properties": {
          "untaggedAnimalsChecked": {
            "type": "boolean",
            "description": "Untagged Animal Death\r\n* *Necessity*: Optional\r\n* *Validation*: Specify the value true if you are entering details of untagged animals"
          },
          "untaggedAnimalDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.OnFarmKill.UntaggedAnimalDetail"
            },
            "description": "Details about untagged animals\r\n* *Necessity*: Required for cattle, optional for other species",
            "nullable": true
          },
          "untaggedAnimalsCountedInRunningTotal": {
            "type": "boolean",
            "description": "Flag to determine if these animals are already counted in the running total\r\n* *Necessity*: Optional\r\n* *Validation*: Only if untagged animals are included in the running total",
            "nullable": true
          },
          "animalTotal": {
            "type": "integer",
            "description": "Total untagged animals in this request\r\n* *Necessity*: Required\r\n* *Validation*: Greater than 0",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Death of untagged animals.\r\n\r\nIf the animals died before tagging, use this to specify the number of animals that died and their details."
      },
      "CLAOData.Models.BusinessRulesConfig.ValidationRuleTypeEnum": {
        "enum": [
          "FieldRequired",
          "FeatureSupported",
          "DataValueInt"
        ],
        "type": "string"
      },
      "CLAOData.Models.MovementDocumentValidation.TransportDetail": {
        "type": "object",
        "properties": {
          "transporterAuthNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "The authorisation number for the transporter",
            "nullable": true
          },
          "transporterType": {
            "maxLength": 50,
            "type": "string",
            "description": "The type of transporter e.g. DEST",
            "nullable": true,
            "example": "DEST"
          },
          "transportVehicleRegistrationNo": {
            "maxLength": 50,
            "type": "string",
            "description": "The registration number of the vehicle used to transport the animals",
            "nullable": true,
            "example": "XX20 XXX"
          },
          "transportHaulierName": {
            "maxLength": 50,
            "type": "string",
            "description": "The name of the haulier used to transport the animals",
            "nullable": true,
            "example": "Haulier ABC"
          }
        },
        "additionalProperties": false,
        "description": "Details of transport used for a movement"
      },
      "CLAOData.Models.UpdateMultipleAnimals.UpdateMultipleAnimalsListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.UpdateMultipleAnimals.UpdateMultipleAnimals"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BulkImports.Animals.BulkAnimalImport": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.BulkImports.Animals.BulkAnimalImportModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BusinessRulesConfig.RequestTypeProcessingRuleResult": {
        "required": [
          "requestTypeProcessingRuleId"
        ],
        "type": "object",
        "properties": {
          "errorConfig": {
            "$ref": "#/components/schemas/CLAOData.Models.Error.ErrorConfig"
          },
          "programStatusId": {
            "type": "integer",
            "description": "</br>Entity id for programStatus to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "programStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.Program.ProgramStatus"
          },
          "programStatusHoldingSourceField": {
            "$ref": "#/components/schemas/CLAOData.Models.BusinessRulesConfig.ProcessingRuleSourceFieldCodeEnum"
          },
          "requestTypeProcessingRuleId": {
            "type": "integer",
            "format": "int32"
          },
          "errorConfigId": {
            "type": "integer",
            "description": "</br>Entity id for errorConfig to be specified for the POST/PUT supported methods.",
            "format": "int32",
            "nullable": true
          },
          "customErrorText": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "requestTypeProcessingRuleResultId": {
            "type": "integer",
            "format": "int32"
          },
          "processingRuleAction": {
            "$ref": "#/components/schemas/CLAOData.Models.BusinessRulesConfig.ProcessingRuleActionEnum"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.HerdModify.HerdModifyListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.HerdModify.HerdModify"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.TitemLTMaintenanceListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.TitemLTMaintenance"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.PreMovement.PreMovement": {
        "type": "object",
        "properties": {
          "updatedDate": {
            "type": "string",
            "description": "DateTime request finished processing\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "description": "DateTime request was received\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "date-time"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/CLAOData.Models.RequestStatus"
          },
          "userName": {
            "type": "string",
            "description": "UserName of the user who submitted the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any warnings that occurred during processing of the request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/CLAOData.Models.PreMovement.PreMovementModel"
          },
          "requestId": {
            "type": "integer",
            "description": "Identifier of request\r\n* *Necessity*: Should not be populated when POSTing a request",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.SingleError"
            },
            "description": "Any errors that occurred during processing of the request.\r\n* *Necessity*: Should not be populated when POSTing a request",
            "nullable": true
          },
          "undoSupported": {
            "type": "boolean",
            "description": "Does this request support being undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isContentPurged": {
            "type": "boolean",
            "description": "Has the `content` of the request been purged \r\n* *Necessity*: Should not be populated when POSTing a request"
          },
          "isFullUndone": {
            "type": "boolean",
            "description": "Has the request been fully undone\r\n* *Necessity*: Should not be populated when POSTing a request"
          }
        },
        "additionalProperties": false,
        "description": "Pre Movement Request"
      },
      "CLAOData.Models.PendingMovement.MovementPendingStatus": {
        "enum": [
          "Unknown",
          "Pending",
          "Confirmed",
          "Ignored",
          "Withdrawn",
          "Forwarding",
          "Forward_Error",
          "Import_Error",
          "Imported_Not_Confirmed",
          "Confirmed_by_Destination_Holding_Owner",
          "Disputed"
        ],
        "type": "string",
        "description": "Represents a status of a Pending Movement"
      },
      "CLAOData.Models.AnimalDetailsGenderSpecies": {
        "type": "object",
        "properties": {
          "genderId": {
            "type": "integer",
            "description": "</br>Entity id for gender to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "gender": {
            "$ref": "#/components/schemas/CLAOData.Models.Gender"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "animalDetailsSpecies": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "animalDetailsSpeciesId": {
            "type": "integer",
            "description": "</br>Entity id for animalDetailsSpecies to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.BulkImports.Animals.AnimalWithMovement": {
        "type": "object",
        "properties": {
          "deviceDetail": {
            "$ref": "#/components/schemas/CLAOData.Models.ExtendedDeviceDetail"
          },
          "device": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "geneticDam": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "birthDam": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "sire": {
            "$ref": "#/components/schemas/CLAOData.Models.Device"
          },
          "movements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.BulkImports.Animals.AnimalMovementDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Admin.DeviceAttributes.WriteSchemaSpecies": {
        "type": "object",
        "properties": {
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "speciesId": {
            "type": "integer",
            "description": "</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "deviceAttributeWriteSchema": {
            "$ref": "#/components/schemas/CLAOData.Models.Admin.DeviceAttributes.DeviceAttributeWriteSchema"
          },
          "id": {
            "type": "integer",
            "description": "The id of the entity.",
            "format": "int32"
          },
          "deviceAttributeWriteSchemaId": {
            "type": "integer",
            "description": "</br>Entity id for deviceAttributeWriteSchema to be specified for the POST/PUT supported methods.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Links DeviceAttributeWriteSchemas to Species in a many:many relationship to indicate which species a schema can\r\nbe used for."
      },
      "CLAOData.Models.HoldingRegister.RunningTotalRequestDetailStockData": {
        "type": "object",
        "properties": {
          "isDevice": {
            "type": "boolean",
            "description": "Is the row relating to a device"
          },
          "genderName": {
            "type": "string",
            "description": "Gender at time of Request",
            "nullable": true
          },
          "rowId": {
            "type": "integer",
            "description": "Row id of running total",
            "format": "int32",
            "nullable": true
          },
          "breed": {
            "type": "string",
            "description": "Breed, see [Breeds](#Breeds)",
            "nullable": true
          },
          "batchNumber": {
            "type": "string",
            "description": "BatchNumber before tag upgrade",
            "nullable": true
          },
          "tagNumber": {
            "type": "string",
            "description": "TagNumber or Batch Information",
            "nullable": true
          },
          "previousGenderName": {
            "type": "string",
            "description": "Gender Previous to request",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of birth",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "V1ConfirmPreMovementRequests-countGet200TextPlainResponse": {
        "type": "integer",
        "format": "int32"
      },
      "CLAOData.Models.HoldingRegister.HoldingRegisterMovement": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "integer",
            "description": "The id of the request that recorded the movement.",
            "format": "int32"
          },
          "sourceHolding": {
            "type": "string",
            "description": "The holding CPH from which the animal was moved.",
            "nullable": true
          },
          "movementDate": {
            "type": "string",
            "description": "The date on which the movement occurred.",
            "format": "date-time"
          },
          "speciesId": {
            "type": "integer",
            "description": "The id of the species of the animal that was moved.</br>Entity id for species to be specified for the POST/PUT supported methods.",
            "format": "int32"
          },
          "transportHaulierName": {
            "type": "string",
            "description": "The name of the transport haulier that transported the animal.",
            "nullable": true
          },
          "species": {
            "$ref": "#/components/schemas/CLAOData.Models.Species"
          },
          "comment": {
            "type": "string",
            "description": "Any comment recorded against the movement.",
            "nullable": true
          },
          "movementId": {
            "type": "integer",
            "format": "int32"
          },
          "transportVehicleRegistrationNo": {
            "type": "string",
            "description": "The registration number of the vehicle the haulier used to transport the animal.",
            "nullable": true
          },
          "isOffMove": {
            "type": "boolean",
            "description": "Whether the move was an off move (as opposed to an on move) for the Holding Register's holding."
          },
          "animalIdentifier": {
            "type": "string",
            "description": "The batch number, tag number, RFID/EID, or freeze brand of the animal that was moved.",
            "nullable": true
          },
          "destinationHolding": {
            "type": "string",
            "description": "The holding CPH to which the animal was moved.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A movement recorded to or from a Holding Register's holding"
      },
      "CLAOData.Models.PaperMovement.PaperMovementListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.PaperMovement.PaperMovement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.Animals.AnimalProgramStatus": {
        "type": "object",
        "properties": {
          "programStatusId": {
            "type": "integer",
            "description": "The program status id.",
            "format": "int32"
          },
          "deviceToProgramStatusId": {
            "type": "integer",
            "description": "System generated identifier for an animal to program status identifier mapping.",
            "format": "int32"
          },
          "programId": {
            "type": "integer",
            "description": "The id of the program",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "description": "System generated identifier for an animal.",
            "format": "int32"
          },
          "setReason": {
            "type": "string",
            "description": "The reason why the animal is under this program status.",
            "nullable": true
          },
          "programStatusName": {
            "type": "string",
            "description": "The program status name.",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "The species id of the animal.",
            "format": "int32"
          },
          "animal": {
            "$ref": "#/components/schemas/CLAOData.Models.Animals.AnimalDetail"
          },
          "programName": {
            "type": "string",
            "description": "The program name",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "The date when this program status started to apply to this animal.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CLAOData.Models.PendingMovement.PendingMovementDetailsListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CLAOData.Models.PendingMovement.PendingMovementDetails"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "name": "Ocp-Apim-Subscription-Key",
        "in": "header"
      },
      "apiKeyQuery": {
        "type": "apiKey",
        "name": "subscription-key",
        "in": "query"
      }
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "tags": [
    {
      "name": "AddAnnualInventoryRequests",
      "description": "Record a Holding's Annual Inventory\r\n"
    },
    {
      "name": "AnimalDetails",
      "description": "Retrieve animal details for an individually tagged animal.\r\n"
    },
    {
      "name": "AnimalDetailsMaintenanceRequests",
      "description": "Update animal details such as gender, breed, date of birth, dam, sire.\r\n"
    },
    {
      "name": "AnimalsOnHoldings",
      "description": "Retrieve all individually tagged animals on a particular holding.\r\n"
    },
    {
      "name": "ApprovedMovements",
      "description": "Retrieves details of animal movements\r\n"
    },
    {
      "name": "Async",
      "description": "Asynchronous requests controller. \r\nSee [OData Documentation](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part1-protocol/odata-v4.0-errata03-os-part1-protocol-complete.html#_Toc453752312).\r\n"
    },
    {
      "name": "Attributes",
      "description": "Attributes that can be set for devices and batches\r\n"
    },
    {
      "name": "Breeds",
      "description": "Manage / View animal breeds. Breeds are linked to their [Species](#Species). Breeds can be identified by their Id.\r\n"
    },
    {
      "name": "BreedsOnHoldings",
      "description": "Retrieve unique breeds for all individually tagged animals on a particular holding.\r\n"
    },
    {
      "name": "BulkAddMovementRequests",
      "description": "Insert large numbers of animal movements\r\n"
    },
    {
      "name": "BulkAnimalImportRequests",
      "description": "Insert a large group of devices into the system\r\n"
    },
    {
      "name": "BulkRefreshAnimalRequests",
      "description": "Update multiple animals' details\r\n"
    },
    {
      "name": "ConfirmPreMovementRequests",
      "description": "Confirm a pre-movement of animals.\r\n"
    },
    {
      "name": "ConfirmWithEditPreMovementRequests",
      "description": "Edit and confirm a pre-movement of animals.\r\n"
    },
    {
      "name": "CorrectTransferRequests",
      "description": "Correct an existing movement of animals\r\n"
    },
    {
      "name": "Counties",
      "description": "View counties. Counties can be identified by their Id.\r\n"
    },
    {
      "name": "DeathReasons",
      "description": "Manage / View possible reasons for the death of an animal. Death Reasons can be identified by their Id.\r\n"
    },
    {
      "name": "DeleteAnnualInventoryRequests",
      "description": "Delete an Annual Inventory\r\n"
    },
    {
      "name": "DeviceApplicationRequests",
      "description": "Register the identification / birth of newly tagged animals.\r\n"
    },
    {
      "name": "DeviceAttributeReadSchemas",
      "description": "Collections of attributes that can be read from devices or batches.\r\n"
    },
    {
      "name": "DeviceAttributes",
      "description": "Query attribute values for devices and batches on a holding.\r\n"
    },
    {
      "name": "DeviceAttributeWriteSchemas",
      "description": "Collections of attributes that can be written to devices or batches.\r\n"
    },
    {
      "name": "DeviceProgramStatuses",
      "description": "Get the program statuses currently set for animals\r\n"
    },
    {
      "name": "DocumentTypes",
      "description": "View the different types of document that can be used with the system.\r\n"
    },
    {
      "name": "EditPreMovementRequests",
      "description": "Edit a pre-movement of animals.\r\n"
    },
    {
      "name": "ErrorConfigs",
      "description": "View the different errors that can be returned by the system. Errors can be identified by their error Id.\r\n"
    },
    {
      "name": "ErrorNotificationSubscriptions",
      "description": "Configures notifications for users when specified errors are returned by a request\r\n"
    },
    {
      "name": "ExtendedDeviceApplicationRequests",
      "description": "Register the identification / birth of newly tagged animals with extended details\r\n"
    },
    {
      "name": "Genders",
      "description": "View animal genders e.g. Female. Genders can be identified by their Id.\r\n"
    },
    {
      "name": "GenderSpecies",
      "description": "View animal genders according to the animal's species e.g. a female ([Gender](#Genders)) cattle ([Species](#Species)) is a Cow (GenderSpecies).\r\n"
    },
    {
      "name": "HerdDisableRequests",
      "description": "Disables herds\r\n"
    },
    {
      "name": "HerdModifyRequests",
      "description": "Updates or Creates Herds\r\n"
    },
    {
      "name": "HerdsIntegration",
      "description": "Herd integration endpoint\r\n"
    },
    {
      "name": "HoldingDetailsAndPartyModifyRequests",
      "description": "Updates or creates holding and party information \r\n"
    },
    {
      "name": "HoldingDisableRequests",
      "description": "Disables holdings\r\n"
    },
    {
      "name": "HoldingLinkTypes",
      "description": "Returns valid holding link types\r\n"
    },
    {
      "name": "HoldingMHS",
      "description": "View and manage valid holding MHS numbers for abattoir holdings\r\n"
    },
    {
      "name": "HoldingMHSNumbers",
      "description": "View and manage valid holding CPH numbers for abattoir holdings by MHS number\r\n"
    },
    {
      "name": "HoldingMovementForReviews",
      "description": "Retrieve details of movements that require review.\r\n"
    },
    {
      "name": "HoldingPartyModifyRequests",
      "description": "Updates or creates holding party information \r\n"
    },
    {
      "name": "HoldingProgramStatuses",
      "description": "Get the program statuses currently set for holdings\r\n"
    },
    {
      "name": "HoldingRegisterFunctions",
      "description": "A collection of endpoints concerning holdings\r\n"
    },
    {
      "name": "HoldingRegisters",
      "description": "Get Holding Register information for your holdings\r\n"
    },
    {
      "name": "Holdings",
      "description": "Returns the holding details for the supplied holding identifier.\r\nThe holding identifier should be a valid holding CPH or MHS number.\r\n"
    },
    {
      "name": "HoldingsIntegration",
      "description": "Holdings integration endpoints\r\n"
    },
    {
      "name": "HoldingTypes",
      "description": "Data about available types of holding\r\n"
    },
    {
      "name": "Interfaces",
      "description": "Returns a list of all available endpoints that the API provides\r\n"
    },
    {
      "name": "KillDetailRequests",
      "description": "Register the slaughter of animals as well as recording carcase classification information.\r\n"
    },
    {
      "name": "KillRequests",
      "description": "Register the slaughter of animals.\r\n"
    },
    {
      "name": "MetFCIWithdrawalPeriods",
      "description": "Information about Food Chain Information periods\r\n"
    },
    {
      "name": "MovementDetails",
      "description": "View Details of Animal Movements\r\n"
    },
    {
      "name": "MovementDocumentValidation",
      "description": "Provides validation of back office movement documents\r\n"
    },
    {
      "name": "NotAppliedTags",
      "description": "Tags uploaded to the system that have not yet been applied to an animal.\r\n"
    },
    {
      "name": "OnFarmKillRequests",
      "description": "Register the on farm death / kill of animals\r\n"
    },
    {
      "name": "PaperMovements",
      "description": "Submits and retrieves Paper Movements.\r\n"
    },
    {
      "name": "PendingMovementDetails",
      "description": "Gets the state of current [Pre Movements](#PreMovementRequests) for the authenticated user's holdings.\r\n"
    },
    {
      "name": "PreMovementRequests",
      "description": "Record pre-movement of animals\r\n"
    },
    {
      "name": "ProcessingFlags",
      "description": "Maintain Processing Flags\r\n"
    },
    {
      "name": "ProgramAdministrators",
      "description": "Maintains administrators for Programs\r\n"
    },
    {
      "name": "ProgramRegionCounties",
      "description": "Gets Counties for a Program Region\r\n"
    },
    {
      "name": "ProgramRegions",
      "description": "Creates and updates program regions used by Program Administrators.\r\n"
    },
    {
      "name": "Programs",
      "description": "Maintain Programs\r\n"
    },
    {
      "name": "ProgramStatusAuthorisations",
      "description": "Program Status Authorisations\r\n"
    },
    {
      "name": "ProgramStatusDisclosureRules",
      "description": "Program Status Disclosure Rules\r\n"
    },
    {
      "name": "ProgramStatuses",
      "description": "Program Statuses\r\n"
    },
    {
      "name": "ProgramStatusNotifications",
      "description": "Program Status Notifications\r\n"
    },
    {
      "name": "ProgramStatusNotificationTypes",
      "description": "Program Status Notification Types\r\n"
    },
    {
      "name": "ReplaceDeviceRequests",
      "description": "Register the replacement or upgrade of tags.\r\n"
    },
    {
      "name": "ReplacementReasons",
      "description": "Information about reasons for replacing a tag\r\n"
    },
    {
      "name": "Reports",
      "description": "A collection of endpoints for getting PDF reports\r\n"
    },
    {
      "name": "Requests",
      "description": "Status information for all request types"
    },
    {
      "name": "RequestStatusNotifications",
      "description": "Configures notifications for users when certain request statuses are returned by a request\r\n"
    },
    {
      "name": "RequestTypeProcessingFlags",
      "description": "Retrieve the configured processing flags for each request type.\r\n"
    },
    {
      "name": "RequestTypeProcessingRules",
      "description": "Request Type Processing Rules\r\n"
    },
    {
      "name": "RequestTypes",
      "description": "Retrieve request type details.\r\n"
    },
    {
      "name": "RequestTypeValidationRules",
      "description": "Request Type Validation Rules\r\n"
    },
    {
      "name": "ReviewHoldingMovementRequests",
      "description": "Review the movement of animals\r\n"
    },
    {
      "name": "RoleConfigs",
      "description": " Displays the list of available roles that users can be assigned to\r\n"
    },
    {
      "name": "SightingMoveRequests",
      "description": "Record animals as being sighted on a holding and are moved there\r\n"
    },
    {
      "name": "SightingRequests",
      "description": "Record animals as being sighted on a holding\r\n"
    },
    {
      "name": "Species",
      "description": "Information about species\r\n"
    },
    {
      "name": "SpeciesConfigs",
      "description": "Show the species configurations    \r\n"
    },
    {
      "name": "StandstillConfigExemptHoldingLinkTypes",
      "description": "Standstill Configuration Exempt Holding Link Types\r\n"
    },
    {
      "name": "StandstillConfigHoldingLinkTypes",
      "description": "Standstill Configuration Holding Link Types\r\n"
    },
    {
      "name": "StandstillConfigs",
      "description": "Standstill Configuration\r\n"
    },
    {
      "name": "StockTypes",
      "description": "Information about types of animal stock\r\n"
    },
    {
      "name": "SystemTagApplications",
      "description": "Retrieve all tags where a birth or tag application was not recorded\r\n"
    },
    {
      "name": "SystemTagCreations",
      "description": "Retrieve all tags that were system created due to not being recorded as issued by a tag manufacturer.\r\n"
    },
    {
      "name": "TagUploadRequests",
      "description": "Register Tags ready to be used by the system\r\n"
    },
    {
      "name": "TitemLTMaintenanceRequests",
      "description": "Update the lifetime traceability status of animals\r\n"
    },
    {
      "name": "Titles",
      "description": "Valid titles for use before a person's name\r\n"
    },
    {
      "name": "TransferRequests",
      "description": "Register the movement of animals\r\n"
    },
    {
      "name": "TransporterTypes",
      "description": "Information about types of transport for movements\r\n"
    },
    {
      "name": "UndoPartialRequests",
      "description": "Partially undo / rollback a request\r\n"
    },
    {
      "name": "UndoRequests",
      "description": "Undo / rollback a request\r\n"
    },
    {
      "name": "UpdateDeviceStatusRequests",
      "description": "Set or clear animal statuses\r\n"
    },
    {
      "name": "UpdateHoldingStatusRequests",
      "description": "Set or clear holding statuses\r\n"
    },
    {
      "name": "UpdateMultipleAnimalsRequests",
      "description": "Update details of multiple animals at once\r\n"
    },
    {
      "name": "WithdrawPreMovementRequests",
      "description": "Withdraw a pre-movement of animals.\r\n"
    },
    {
      "name": "WriteAttributeSchemaRequests",
      "description": "Requests to update attributes for a set of devices and/or batches.\r\n"
    }
  ]
}