{
	"name": "CLA core API",
	"meta": [],
	"sections": [
		{
			"title": "Overview",
			"content": [
				{
					"type": "P",
					"body": [ 
						"We developed the Common Livestock Application (CLA) API to allow livestock holders to submit, view, modify and confirm livestock movements electronically."
					]
				},
				{
					"type": "P",
					"body": [ 
						"The connection is secure and access to endpoints is restricted to registered users."
					]
				},
				{
					"type": "P",
					"body": "For more details about the livestock information systems api authentication and security, read the <a href='/documentation/authorisation' class='govuk-link'>authorisation</a> section."
				},
				{
					"type": "P",
					"body": "For more information about how to develop your own client applications, including example clients for this API, see our <a href='/documentation/tutorials' class='govuk-link'>tutorials</a>."
				}
			]
		},
		{
			"title": "Versioning",
			"content": [
				{
					"type": "P",
					"body": "When an API changes, we will make backwards compatible changes where we can. When this is not possible, we will add a note about deprecated endpoints and make a new endpoint available."
				},
				{
					"type": "P",
					"body": "The current live version of the Common Livestock Application API is 1.0."
				}
			]
		},
		{
			"title": "API browser and Open API file",
			"content": [
				{
					"type": "P",
					"body": "For more details about the Common Livestock Application API, open an API browser like <a href='https://editor.swagger.io' data-swagger-editor class='govuk-link' target='_blank'>Swagger Editor</a> and copy the Open API file content into it."
				},
				{
					"type": "P",
					"body":  "You can also generate a client library from the Open API file using Swagger Editor."
				}
			]
		},
		{
			"title": "HTTP status codes",
			"content": [
				{
					"type": "P",
					"body": "The Common Livestock Application API uses standard HTTP response code conventions:"
				},
				{
					"type": "UL",
					"body": [
						"1xx codes give information",
						"2xx codes mean success",
						"3xx codes mean a redirection",
						"4xx codes mean a client-side error",
						"5xx codes mean a server-side error"
					]
				},
				{
					"type": "P",
					"body": "Common status codes are:"
				},
				{
					"type": "UL",
					"body": [
						"<strong>200 - OK.</strong> The request has been successfuly proceessed to completion.",
						"<strong>201 - Created.</strong> The request was successfully received by the system and has been queued for later processing.",
						"<strong>400 - Bad Request.</strong> The incoming request body or parameters do not conform with the Open API document that describes the API",
						"<strong>403 - Forbidden.</strong> The request is formed correctly, but the REST API refuses to honour it. This is usually because the user does not have the necessary permissions for the resource", 
						"<strong>429 - Too Many Requests.</strong> - you have made too many requests within a short time (see Request rate limit for further information).",
						"<strong>503 - Service Unavailable.</strong> The service is currently unable to handle the request due to a temporary overloading or maintenance activity.",
						"<strong>504 - Gateway Timeout.</strong> - there is a network connection problem within the layers of the API fulfilment stack"
					]
				},
				{
					"type": "P",
					"body": [
						"We use HTTP status codes to signal overall success or failure of a request. Further detail describing the precise nature of the error is returned in the response body."
					]
				}
			]
		},
		{
			"title": "Request rate limit",
			"content": [
				{
					"type": "P",
					"body": "To protect the system against being overloaded with requests, we limit how the number of API requests you can make within a time period."
				},
				{
					"type": "P",
					"body": "Each minute, you can make up to 10 GET requests for each endpoint."
				},
				{
					"type": "P",
					"body": "If you exceed this limit, you will receive an HTTP 429 (Too Many Requests) status code for each request you make within the remainder of the time."
				}
			]
		},
		{
			"title": "Dealing with large results sets",
			"content": [
				{
					"type": "P",
					"body": "Some endpoints may return a large number of results depending on the filter criteria provided in the $filterparameter. All collection-based endpoints (e.g. requests to return a list of movements) enforce a maximum count of results returned at once. This maximum is called a results page."
				},
				{
					"type": "P",
					"body": "Each minute, you can make up to 10 GET requests for each endpoint."
				},
				{
					"type": "P",
					"body": "If you exceed this limit, you will receive an HTTP 429 (Too Many Requests) status code for each request you make within the remainder of the time."
				}
			]
		},
		{
			"title": "Endpoints",
			"content": [
				{
					"type": "DETAIL",
					"body": {
						"title": "/v1/<strong>TransferRequests</strong>",
						"tag": "POST",
						"body": [
							{
								"type": "H4",
								"body": "Description"
							},
							{
								"type": "P",
								"body": "TransferRequests registers the movement of animals between two holdings: the source holding and the destination holding."
							},
							{
								"type": "P",
								"body": "Animals reported in a movement report can be identified individually or by batch."
							},
							{
								"type": "P",
								"body": "Transfers can be one of two types depending on the role of the user who is submitting the request:"
							},
							{
								"type": "UL",
								"body": [
									"If the submitting user is associated with the source holding, the system treats the movement as an 'OFF' Movement.",
									"If the submitting user is associated with the source holding, the system treats the movement as an 'ON' Movement."
								]
							},
							{
								"type": "P",
								"body": "The userHolding must contain the same value as the sourceHolding when reporting an 'OFF' movement, and the same value as the destinationHolding when reporting an 'ON' movement. The movementDocument must be completed and have all mandatory fields populated for the movement to be accepted as valid."
							},
							{
								"type": "P",
								"body": "When reporting an 'ON' movement, both departureDateTime and arrivalDateTime must be specified. Both departureDateTime and arrivalDateTime must be in the past and arrivalDateTime must be later than departureDateTime."
							},
							{
								"type": "P",
								"body": "For market users reporting an off movement from a market holding:\n"
							},
							{
								"type": "UL",
								"body": [
									"saleDate and saleId must be specified.",
									"movementGroups should be used to group the animals by lot/pen and vendor holding. Each movement group should have these details specified in fromSubLocation and vendorHolding respectively."				  
								]
							},
							{
								"type": "H4",
								"body": "Authorisation"
							},
							{
								"type": "P",
								"body": "This endpoint is secured by LIS user authorization security."
							},
							{
								"type": "P",
								"body": "You will also need to Subscription key in a header. This key can be retrieved by Subscribing to the API."
							},
							{
								"type": "H4",
								"body": "Request headers"
							},
							{
								"type": "TABLE",
								"body": {
									"headers": [
										"Name",
										"Description"
									],
									"rows": [
										{
											"data": ["Ocp-Apim-Subscription-Key", "LIS API subscription key"]
										},
										{
											"data": ["x-correlation-id", "a unique identifer for this request (we recommend generating a GUID for this)."]
										}
									]
								}
							},
							{
								"type": "H4",
								"body": "Parameters"
							},
							{
								"type": "P",
								"body": "None"
							},
							{
								"type": "H4",
								"body": "Response"
							},
							{
								"type": "P",
								"body": "HTTP status: <code class='code--slim'>201 (Created)</code>\n"
							},
							{
								"type": "P",
								"body": "This response indicates that the data content has passed an initial syntax check and has been successfully queued by the system for further processing."
							},
							{
								"type": "P",
								"body": "The requestId field in the response contains a unique identifier generated by the system that the caller can use to track the progress of the movement request as it is validated by the system. The requestStatus field in the response body indicates that a request corresponding to the supplied requestId parameter has been located and shows its current validation status."
							},
							{
								"type": "P",
								"body": "Possible values are:"
							},
							{
								"type": "UL",
								"body": [
									"<strong>Pending</strong> - the requests is still queued and the caller should query again after a short delay",
									"<strong>Processing</strong> - the system is currently processing the request and the caller should query again after a short delay",
									"<strong>Success</strong> - the system has accepted the request and the system view of the animals on the users holding has been adjusted to account for the details in the movement.",
									"<strong>Fail</strong> - the request has failed. The failure reasons are detailed in the errors section of the response.",
									"<strong>QueueFail</strong> - the system could not proceed with validation. The caller should submit the resubmit the request again using POST /v1/TransferRequests",
									"<strong>CompletedError</strong> - the request contained invalid or inconsistent data. The errors are detailed in the errors section of the response.",
									"<strong>Rejected</strong> - the request contained invalid or inconsistent data. The errors are detailed in the errors section of the response.",
									"<strong>Cancelled</strong> - a user action such as 'undoing' the request caused the processing to be cancelled during validation.",
									"<strong>CompletedWarning</strong> - the request was accepted, but some of the content generated warnings. The warning are detailed in the warnings section of the response. The system view of the animals on the users holding has been adjusted to account for the details in the movement.",
									"<strong>NotAvailable</strong> - this error should be reported to the LI Service Desk, together with the requestId that resulted in the error"
								]
							},
							{
								"type": "P",
								"body": "If the result is <strong>'Success'</strong> or <strong>'CompletedWarning'</strong>, the submission is complete and there are no further processing steps required by the client. The errors and warnings elements of the response body may be populated with content highlighting issues with the data, but these are for information only. No corrective action is required that requires re-sbubmission of the data."
							},
							{
								"type": "P",
								"body": "If the requestStatus returns a value of <strong>'Pending'</strong> or <strong>'Processing'</strong>, this indicates that the movement request has been queued by the system for further validation and processing. The caller must then call GET /v1/TransferRequests({requestId}) repeatedly to track the progress of the request through the validation process. The requestId parameter is the unique identifier returned in response to a successful POST /v1/TransferRequests."
							},
							{
								"type": "P",
								"body": "Processing is complete once a call to GET /v1/TransferRequests({requestId}) returns a requestStatus of <strong>'Success', 'Fail', 'QueueFail', 'CompletedError', 'Rejected', 'Cancelled' or 'Completed'</strong>." 
							},
							{
								"type": "P",
								"body": "To prevent overloading the system, the caller should call GET /v1/TransferRequests at a frequency no less that once per second."
							},
							{
								"type": "P",
								"body": "HTTP status: <code class='code--slim'>400 (Bad Request)</code>\n"
							},
							{
								"type": "P",
								"body": "This response indicates that the submission has been rejected by the system as some, or all of the data supplied was found to be in error."
							},
							{
								"type": "P",
								"body": "The CLAErrorResponse structure in the returned message provides a list of error codes, together with a textual description of each error. Additional information is provided in the the errors body and identifies the field or fields in the original submission that that generated each error."
							},
							{
								"type": "P",
								"body": "Following an error response, the system discards the submitted data. The caller must correct the errors identified and resubmit the movement again."
							},
							{
								"type": "P",
								"body": "If the caller supplied a value in the trackingId field of the submitted movement, this can be reused in a future submission as the system maintains no record of it."
							},
							{
								"type": "CODE",
								"body": [
									"{\r\n  \"error\": {\r\n    \"code\": \"string\",\r\n    \"message\": \"string\",\r\n    \"target\": \"string\",\r\n    \"details\": [\r\n      {\r\n        \"code\": \"string\",\r\n        \"target\": \"string\",\r\n        \"message\": \"string\"\r\n      }\r\n    ]\r\n  }\r\n}"
								]
							}
						]
					}
				},
				{
					"type": "DETAIL",
					"body": {
					"title": "/v1/<strong>TransferRequests({requestId})</strong>",
						"tag": "GET",
						"body": [
							{
								"type": "H4",
								"body": "Description"
							},
							{
								"type": "P",
								"body": "Requests the status of the specified TransferRequests POST call to allow the caller to determine whether the system has finished processing it."
							},
							{
								"type": "P",
								"body": "This is the endpoint that is called to monitor the progress of a TransferRequests call that returned a requestStatus value of <strong>'Pending'</strong> or <strong>'Processing'</strong>. Pass the returned requestId as the parmeter to this call. The system will respond with the current processing state."
							},
							{
								"type": "P",
								"body": "Note, that when processing complex movements, or during periods of high system activity, the system may return <strong>'Pending'</strong> or <strong>'Processing'</strong> in reponse to this call."
							},
							{
								"type": "H4",
								"body": "Authorisation"
							},
							{
								"type": "P",
								"body": "This endpoint is secured by LIS user authorization security."
							},
							{
								"type": "P",
								"body": "You will also need to Subscription key in a header. This key can be retrieved by Subscribing to the API."
							},
							{
								"type": "H4",
								"body": "Request headers"
							},
							{
								"type": "TABLE",
								"body": {
									"headers": [
										"Name",
										"Description"
									],
									"rows": [
										{
											"data": ["Ocp-Apim-Subscription-Key", "LIS API subscription key"]
										},
										{
											"data": ["x-correlation-id", "a unique identifer for this request (we recommend generating a GUID for this)."]
										}
									]
								}
							},
							{
								"type": "H4",
								"body": "Parameters"
							},
							{
								"type": "TABLE",
								"body": {
									"headers": [
										"Name",
										"Type",
										"Required",
										"Description"
									],
									"rows": [
										{
											"data": ["requestId", "integer", "true", "the unique identifier of the request being queried"]
										},
										{
											"data": ["$select", "string", "false", "query string to limite the search"]
										},
										{
											"data": ["$expand", "string", "false", "Indicates the related entities to be represented inline. The maximum depth is 2."]
										}
									]
								}
							},
							{
								"type": "H4",
								"body": "Response"
							},
							{
								"type": "P",
								"body": "HTTP status: <code class='code--slim'>200 (Created)</code>\n"
							},
							{
								"type": "P",
								"body": "This response indicates that the system has located the livestock movement data associated with the supplied requestId and has returns its current processing status in the return body"
							},
							{
								"type": "P",
								"body": "HTTP status: <code class='code--slim'>400 (Bad request)</code>\n"
							},
							{
								"type": "P",
								"body": "This response indicates that the supplied parameters could not be understood by the system. Correct the parameters and resubmit the request."
							},
							{
								"type": "P",
								"body": "HTTP status: <code class='code--slim'>404 (No found)</code>\n"
							},
							{
								"type": "P",
								"body": "This response indicates the system could not locate a livestock movement record corresponding tho the supplied requestId."
							}
						]
					}
				},
				{
					"type": "DETAIL",
					"body": {
						"title": "/v1/<strong>CorrectTransferRequests</strong>",
						"tag": "POST",
						"body": [
							{
								"type": "H4",
								"body": "Description"
							},
							{
								"type": "P",
								"body": "CorrectTransferRequests"
							}
						]
					}
				},
				{
					"type": "DETAIL",
					"body": {
						"title": "/v1/<strong>HoldingMovementForReviews</strong>",
						"tag": "GET",
						"body": [
							{
								"type": "H4",
								"body": "Description"
							},
							{
								"type": "P",
								"body": "HoldingMovementForReviews"
							}
						]
					}
				},
				{
					"type": "DETAIL",
					"body": {
						"title": "/v1/<strong>ReviewHoldingMovementRequests</strong>",
						"tag": "GET",
						"body": [
							{
								"type": "H4",
								"body": "Description"
							},
							{
								"type": "P",
								"body": "ReviewHoldingMovementRequests"
							}
						]
					}
				},
				{
					"type": "DETAIL",
					"body": {
						"title": "/v1/<strong>UndoRequests</strong>",
						"tag": "POST",
						"body": [
							{
								"type": "H4",
								"body": "Description"
							},
							{
								"type": "P",
								"body": "This endpoint supports the ability for users to undo or rollback requests that have previously been submitted."
							},
							{
								"type": "P",
								"body": "In order to succeed, the user submitting the request must be the same as the user who created the request to be undone. In addition, the system may reject an undo request if other events have happened to the animals in the original requests between the time of submission and the time the undo request is processed."
							},
							{
								"type": "P",
								"body": "To undo a request, supply a message body containing the requestId that the system returned in response to original request that should be rolled back."
							},
							{
								"type": "CODE",
								"body": [
									"{\r\n  \"content\": {\r\n    \"undoRequestId\": \"<original request id>\",\r\n  }\r\n}"
								]
							},
							{
								"type": "P",
								"body": "where <original request id> is the requestId value returned in the success response to the call that is to be rolled back."
							},
							{
								"type": "H4",
								"body": "Authorisation"
							},
							{
								"type": "P",
								"body": "This endpoint is secured by LIS user authorization security."
							},
							{
								"type": "P",
								"body": "You will also need to Subscription key in a header. This key can be retrieved by Subscribing to the API."
							},
							{
								"type": "H4",
								"body": "Request headers"
							},
							{
								"type": "TABLE",
								"body": {
									"headers": [
										"Name",
										"Description"
									],
									"rows": [
										{
											"data": ["Ocp-Apim-Subscription-Key", "LIS API subscription key"]
										},
										{
											"data": ["x-correlation-id", "a unique identifer for this request (we recommend generating a GUID for this)."]
										}
									]
								}
							},
							{
								"type": "H4",
								"body": "Parameters"
							},
							{
								"type": "P",
								"body": "None"
							},
							{
								"type": "H4",
								"body": "Response"
							},
							{
								"type": "P",
								"body": "HTTP status: <code class='code--slim'>201 (Success)</code>\n"
							},
							{
								"type": "P",
								"body": "This response indicates that the undo request has been received by the system and is being processed."
							},							
							{
								"type": "P",
								"body": "The requestId field in the response body contains a unique identifier generated by the system that the caller can uses to track the progress of the undo request as it is validated by the system. The requestStatus field in the response body indicates that a request corresponding to the supplied requestId parameter has been located and shows its current validation status."
							},
							{
								"type": "P",
								"body": "Possible values are:"
							},
							{
								"type": "UL",
								"body": [
									"<strong>Pending</strong> - the requests is still queued and the caller should query again after a short delay",
									"<strong>Processing</strong> - the system is currently processing the request and the caller should query again after a short delay",
									"<strong>Success</strong> - the system has accepted the request and the system view of the animals on the users holding has been adjusted to account for the details in the movement.",
									"<strong>Fail</strong> - the request has failed. The failure reasons are detailed in the errors section of the response.",
									"<strong>QueueFail</strong> - the system could not proceed with validation. The caller should submit the resubmit the request again using POST /v1/UndoRequests",
									"<strong>CompletedError</strong> - the request contained invalid or inconsistent data. The errors are detailed in the errors section of the response.",
									"<strong>Rejected</strong> - the request contained invalid or inconsistent data. The errors are detailed in the errors section of the response.",
									"<strong>Cancelled</strong> - a user action such as 'undoing' the request caused the processing to be cancelled during validation.",
									"<strong>CompletedWarning</strong> - the request was accepted, but some of the content generated warnings. The warning are detailed in the warnings section of the response.",
									"<strong>NotAvailable</strong> - this error should be reported to the LI Service Desk, together with the requestId that resulted in the error"
								]
							},
							{
								"type": "P",
								"body": "If the result is <strong>'Success'</strong> or <strong>'CompletedWarning'</strong>, the request asociated with the supplied undoRequestId has been successfully undone and there are no further processing steps required by the client. The errors and warnings elements of the response body may be populated with content highlighting issues relevant to the request, but these are for information only. No corrective action is required that requires re-sbubmission of the data."
							},
							{
								"type": "P",
								"body": "If the requestStatus returns a value of <strong>'Pending'</strong> or <strong>'Processing'</strong>, this indicates that the undo request has been queued by the system for further validation and processing. The caller must then call GET /v1/UndoRequests({requestId}) repeatedly to track the progress of the request through the validation process. The requestId parameter is the unique identifier returned in response to a successful POST /v1/UndoRequests."
							},
							{
								"type": "P",
								"body": "Processing is complete once a call to GET /v1/UndoRequests({requestId}) returns a requestStatus of <strong>'Success', 'Fail', 'QueueFail', 'CompletedError', 'Rejected', 'Cancelled' or 'Completed'</strong>." 
							},
							{
								"type": "P",
								"body": "To prevent overloading the system, the caller should call GET /v1/UndoRequests at a frequency no less that once per second."
							},
							{
								"type": "P",
								"body": "HTTP status: <code class='code--slim'>400 (Bad Request)</code>\n"
							},
							{
								"type": "P",
								"body": "This response indicates that either the system could not interpret the request (because it was malformed) or could find no record of the supplied requestId."
							}							
						]
					}
				}
			]
		}
	]
}
